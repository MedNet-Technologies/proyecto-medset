{"ast":null,"code":"import _regeneratorRuntime from\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{Builder,By,Key,until}from'selenium-webdriver';import{Options}from'selenium-webdriver/firefox';import path from'path';// Set the path to the GeckoDriver executable\nvar geckoDriverPath=path.join(__dirname,'..','node_modules','geckodriver','geckodriver.exe');var options=new Options().setBinary(geckoDriverPath);function runSeleniumTest(){return _runSeleniumTest.apply(this,arguments);}function _runSeleniumTest(){_runSeleniumTest=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var driver;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:// Create a new WebDriver instance\ndriver=new Builder().forBrowser('firefox').setFirefoxOptions(options).build();_context.prev=1;_context.next=4;return driver.get('http://localhost:3000/formulario_medicos');case 4:_context.next=6;return driver.findElement(By.id('first_name')).sendKeys('John');case 6:_context.next=8;return driver.findElement(By.id('last_name')).sendKeys('Doe');case 8:_context.next=10;return driver.findElement(By.id('specialization')).sendKeys('Cardiology');case 10:_context.next=12;return driver.findElement(By.id('geographic_location')).sendKeys('New York');case 12:_context.next=14;return driver.findElement(By.id('credentials')).sendKeys('MD',Key.RETURN);case 14:_context.next=16;return driver.wait(until.elementLocated(By.className('swal2-icon-success')),5000);case 16:// Print success message\nconsole.log('Form submitted successfully.');_context.next=22;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](1);console.error('An error occurred:',_context.t0);case 22:_context.prev=22;_context.next=25;return driver.quit();case 25:return _context.finish(22);case 26:case\"end\":return _context.stop();}},_callee,null,[[1,19,22,26]]);}));return _runSeleniumTest.apply(this,arguments);}runSeleniumTest();","map":{"version":3,"names":["Builder","By","Key","until","Options","path","geckoDriverPath","join","__dirname","options","setBinary","runSeleniumTest","_runSeleniumTest","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","driver","wrap","_callee$","_context","prev","next","forBrowser","setFirefoxOptions","build","get","findElement","id","sendKeys","RETURN","wait","elementLocated","className","console","log","t0","error","quit","finish","stop"],"sources":["D:/Guts/Documents/GitHub/proyecto-medset/medset/src/seleniumAutomation.js"],"sourcesContent":["import { Builder, By, Key, until } from 'selenium-webdriver';\r\nimport { Options } from 'selenium-webdriver/firefox';\r\nimport path from 'path';\r\n\r\n// Set the path to the GeckoDriver executable\r\nconst geckoDriverPath = path.join(__dirname, '..', 'node_modules', 'geckodriver', 'geckodriver.exe');\r\n\r\nlet options = new Options().setBinary(geckoDriverPath);\r\n\r\nasync function runSeleniumTest() {\r\n  // Create a new WebDriver instance\r\n  const driver = new Builder().forBrowser('firefox').setFirefoxOptions(options).build();\r\n\r\n  try {\r\n    // Navigate to the React app\r\n    await driver.get('http://localhost:3000/formulario_medicos');\r\n\r\n    // Fill in the form fields\r\n    await driver.findElement(By.id('first_name')).sendKeys('John');\r\n    await driver.findElement(By.id('last_name')).sendKeys('Doe');\r\n    await driver.findElement(By.id('specialization')).sendKeys('Cardiology');\r\n    await driver.findElement(By.id('geographic_location')).sendKeys('New York');\r\n    await driver.findElement(By.id('credentials')).sendKeys('MD', Key.RETURN);\r\n\r\n    // Wait for success alert to appear\r\n    await driver.wait(until.elementLocated(By.className('swal2-icon-success')), 5000);\r\n\r\n    // Print success message\r\n    console.log('Form submitted successfully.');\r\n\r\n  } catch (error) {\r\n    console.error('An error occurred:', error);\r\n\r\n  } finally {\r\n    // Quit the browser\r\n    await driver.quit();\r\n  }\r\n}\r\n\r\nrunSeleniumTest();\r\n\r\n"],"mappings":"0RAAA,OAASA,OAAO,CAAEC,EAAE,CAAEC,GAAG,CAAEC,KAAK,KAAQ,oBAAoB,CAC5D,OAASC,OAAO,KAAQ,4BAA4B,CACpD,MAAO,CAAAC,IAAI,KAAM,MAAM,CAEvB;AACA,GAAM,CAAAC,eAAe,CAAGD,IAAI,CAACE,IAAI,CAACC,SAAS,CAAE,IAAI,CAAE,cAAc,CAAE,aAAa,CAAE,iBAAiB,CAAC,CAEpG,GAAI,CAAAC,OAAO,CAAG,GAAI,CAAAL,OAAO,CAAC,CAAC,CAACM,SAAS,CAACJ,eAAe,CAAC,CAAC,QAExC,CAAAK,eAAeA,CAAA,SAAAC,gBAAA,CAAAC,KAAA,MAAAC,SAAA,YAAAF,iBAAA,EAAAA,gBAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAA9B,SAAAC,QAAA,MAAAC,MAAA,QAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SACE;AACML,MAAM,CAAG,GAAI,CAAAnB,OAAO,CAAC,CAAC,CAACyB,UAAU,CAAC,SAAS,CAAC,CAACC,iBAAiB,CAACjB,OAAO,CAAC,CAACkB,KAAK,CAAC,CAAC,CAAAL,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAI7E,CAAAL,MAAM,CAACS,GAAG,CAAC,0CAA0C,CAAC,QAAAN,QAAA,CAAAE,IAAA,SAGtD,CAAAL,MAAM,CAACU,WAAW,CAAC5B,EAAE,CAAC6B,EAAE,CAAC,YAAY,CAAC,CAAC,CAACC,QAAQ,CAAC,MAAM,CAAC,QAAAT,QAAA,CAAAE,IAAA,SACxD,CAAAL,MAAM,CAACU,WAAW,CAAC5B,EAAE,CAAC6B,EAAE,CAAC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,KAAK,CAAC,QAAAT,QAAA,CAAAE,IAAA,UACtD,CAAAL,MAAM,CAACU,WAAW,CAAC5B,EAAE,CAAC6B,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAACC,QAAQ,CAAC,YAAY,CAAC,SAAAT,QAAA,CAAAE,IAAA,UAClE,CAAAL,MAAM,CAACU,WAAW,CAAC5B,EAAE,CAAC6B,EAAE,CAAC,qBAAqB,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC,SAAAT,QAAA,CAAAE,IAAA,UACrE,CAAAL,MAAM,CAACU,WAAW,CAAC5B,EAAE,CAAC6B,EAAE,CAAC,aAAa,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAAE7B,GAAG,CAAC8B,MAAM,CAAC,SAAAV,QAAA,CAAAE,IAAA,UAGnE,CAAAL,MAAM,CAACc,IAAI,CAAC9B,KAAK,CAAC+B,cAAc,CAACjC,EAAE,CAACkC,SAAS,CAAC,oBAAoB,CAAC,CAAC,CAAE,IAAI,CAAC,SAEjF;AACAC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAACf,QAAA,CAAAE,IAAA,kBAAAF,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAgB,EAAA,CAAAhB,QAAA,aAG5Cc,OAAO,CAACG,KAAK,CAAC,oBAAoB,CAAAjB,QAAA,CAAAgB,EAAO,CAAC,CAAC,QAAAhB,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAE,IAAA,UAIrC,CAAAL,MAAM,CAACqB,IAAI,CAAC,CAAC,gBAAAlB,QAAA,CAAAmB,MAAA,8BAAAnB,QAAA,CAAAoB,IAAA,MAAAxB,OAAA,uBAEtB,UAAAN,gBAAA,CAAAC,KAAA,MAAAC,SAAA,GAEDH,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}