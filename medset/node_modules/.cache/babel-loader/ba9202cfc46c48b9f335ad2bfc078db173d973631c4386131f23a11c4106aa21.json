{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines a {@linkplain Driver WebDriver} client for Microsoft's\n * Internet Explorer. Before using the IEDriver, you must download the latest\n * [IEDriverServer](https://www.selenium.dev/downloads/)\n * and place it on your\n * [PATH](http://en.wikipedia.org/wiki/PATH_%28variable%29). You must also apply\n * the system configuration outlined on the Selenium project\n * [wiki](https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver)\n */\n\n'use strict';\n\nvar _get = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _classCallCheck = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar fs = require('fs');\nvar http = require('./http');\nvar io = require('./io');\nvar portprober = require('./net/portprober');\nvar remote = require('./remote');\nvar webdriver = require('./lib/webdriver');\nvar _require = require('./lib/capabilities'),\n  Browser = _require.Browser,\n  Capabilities = _require.Capabilities;\nvar error = require('./lib/error');\nvar _require2 = require('./common/driverFinder'),\n  getPath = _require2.getPath;\nvar IEDRIVER_EXE = 'IEDriverServer.exe';\nvar OPTIONS_CAPABILITY_KEY = 'se:ieOptions';\nvar SCROLL_BEHAVIOUR = {\n  BOTTOM: 1,\n  TOP: 0\n};\n\n/**\n * IEDriverServer logging levels.\n * @enum {string}\n */\nvar Level = {\n  FATAL: 'FATAL',\n  ERROR: 'ERROR',\n  WARN: 'WARN',\n  INFO: 'INFO',\n  DEBUG: 'DEBUG',\n  TRACE: 'TRACE'\n};\n\n/**\n * Option keys:\n * https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities#ie-specific\n * @enum {string}\n */\nvar Key = {\n  IGNORE_PROTECTED_MODE_SETTINGS: 'ignoreProtectedModeSettings',\n  IGNORE_ZOOM_SETTING: 'ignoreZoomSetting',\n  INITIAL_BROWSER_URL: 'initialBrowserUrl',\n  ENABLE_PERSISTENT_HOVER: 'enablePersistentHover',\n  ENABLE_ELEMENT_CACHE_CLEANUP: 'enableElementCacheCleanup',\n  ELEMENT_SCROLL_BEHAVIOR: 'elementScrollBehavior',\n  REQUIRE_WINDOW_FOCUS: 'requireWindowFocus',\n  BROWSER_ATTACH_TIMEOUT: 'browserAttachTimeout',\n  FORCE_CREATE_PROCESS: 'ie.forceCreateProcessApi',\n  BROWSER_COMMAND_LINE_SWITCHES: 'ie.browserCommandLineSwitches',\n  USE_PER_PROCESS_PROXY: 'ie.usePerProcessProxy',\n  ENSURE_CLEAN_SESSION: 'ie.ensureCleanSession',\n  LOG_FILE: 'logFile',\n  LOG_LEVEL: 'logLevel',\n  HOST: 'host',\n  EXTRACT_PATH: 'extractPath',\n  SILENT: 'silent',\n  FILE_UPLOAD_DIALOG_TIMEOUT: 'ie.fileUploadDialogTimeout',\n  ATTACH_TO_EDGE_CHROMIUM: 'ie.edgechromium',\n  EDGE_EXECUTABLE_PATH: 'ie.edgepath'\n};\n\n/**\n * Class for managing IEDriver specific options.\n */\nvar Options = /*#__PURE__*/function (_Capabilities) {\n  _inherits(Options, _Capabilities);\n  var _super = _createSuper(Options);\n  /**\n   * @param {(Capabilities|Map<string, ?>|Object)=} other Another set of\n   *     capabilities to initialize this instance from.\n   */\n  function Options() {\n    var _this;\n    var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n    _classCallCheck(this, Options);\n    _this = _super.call(this, other);\n\n    /** @private {!Object} */\n    _this.options_ = _this.get(OPTIONS_CAPABILITY_KEY) || {};\n    _this.set(OPTIONS_CAPABILITY_KEY, _this.options_);\n    _this.setBrowserName(Browser.INTERNET_EXPLORER);\n    return _this;\n  }\n\n  /**\n   * Whether to disable the protected mode settings check when the session is\n   * created. Disabling this setting may lead to significant instability as the\n   * browser may become unresponsive/hang. Only \"best effort\" support is provided\n   * when using this capability.\n   *\n   * For more information, refer to the IEDriver's\n   * [required system configuration](http://goo.gl/eH0Yi3).\n   *\n   * @param {boolean} ignoreSettings Whether to ignore protected mode settings.\n   * @return {!Options} A self reference.\n   */\n  _createClass(Options, [{\n    key: \"introduceFlakinessByIgnoringProtectedModeSettings\",\n    value: function introduceFlakinessByIgnoringProtectedModeSettings(ignoreSettings) {\n      this.options_[Key.IGNORE_PROTECTED_MODE_SETTINGS] = !!ignoreSettings;\n      return this;\n    }\n\n    /**\n     * Indicates whether to skip the check that the browser's zoom level is set to\n     * 100%.\n     *\n     * @param {boolean} ignore Whether to ignore the browser's zoom level settings.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"ignoreZoomSetting\",\n    value: function ignoreZoomSetting(ignore) {\n      this.options_[Key.IGNORE_ZOOM_SETTING] = !!ignore;\n      return this;\n    }\n\n    /**\n     * Sets the initial URL loaded when IE starts. This is intended to be used with\n     * {@link #introduceFlakinessByIgnoringProtectedModeSettings} to allow the user to initialize IE in\n     * the proper Protected Mode zone. Setting this option may cause browser\n     * instability or flaky and unresponsive code. Only \"best effort\" support is\n     * provided when using this option.\n     *\n     * @param {string} url The initial browser URL.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"initialBrowserUrl\",\n    value: function initialBrowserUrl(url) {\n      this.options_[Key.INITIAL_BROWSER_URL] = url;\n      return this;\n    }\n\n    /**\n     * Configures whether to enable persistent mouse hovering (true by default).\n     * Persistent hovering is achieved by continuously firing mouse over events at\n     * the last location the mouse cursor has been moved to.\n     *\n     * @param {boolean} enable Whether to enable persistent hovering.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"enablePersistentHover\",\n    value: function enablePersistentHover(enable) {\n      this.options_[Key.ENABLE_PERSISTENT_HOVER] = !!enable;\n      return this;\n    }\n\n    /**\n     * Configures whether the driver should attempt to remove obsolete\n     * {@linkplain webdriver.WebElement WebElements} from its internal cache on\n     * page navigation (true by default). Disabling this option will cause the\n     * driver to run with a larger memory footprint.\n     *\n     * @param {boolean} enable Whether to enable element reference cleanup.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"enableElementCacheCleanup\",\n    value: function enableElementCacheCleanup(enable) {\n      this.options_[Key.ENABLE_ELEMENT_CACHE_CLEANUP] = !!enable;\n      return this;\n    }\n\n    /**\n     * Configures whether to require the IE window to have input focus before\n     * performing any user interactions (i.e. mouse or keyboard events). This\n     * option is disabled by default, but delivers much more accurate interaction\n     * events when enabled.\n     *\n     * @param {boolean} require Whether to require window focus.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"requireWindowFocus\",\n    value: function requireWindowFocus(require) {\n      this.options_[Key.REQUIRE_WINDOW_FOCUS] = !!require;\n      return this;\n    }\n\n    /**\n     * Configures the timeout, in milliseconds, that the driver will attempt to\n     * located and attach to a newly opened instance of Internet Explorer. The\n     * default is zero, which indicates waiting indefinitely.\n     *\n     * @param {number} timeout How long to wait for IE.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"browserAttachTimeout\",\n    value: function browserAttachTimeout(timeout) {\n      this.options_[Key.BROWSER_ATTACH_TIMEOUT] = Math.max(timeout, 0);\n      return this;\n    }\n\n    /**\n     * Configures whether to launch Internet Explorer using the CreateProcess API.\n     * If this option is not specified, IE is launched using IELaunchURL, if\n     * available. For IE 8 and above, this option requires the TabProcGrowth\n     * registry value to be set to 0.\n     *\n     * @param {boolean} force Whether to use the CreateProcess API.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"forceCreateProcessApi\",\n    value: function forceCreateProcessApi(force) {\n      this.options_[Key.FORCE_CREATE_PROCESS] = !!force;\n      return this;\n    }\n\n    /**\n     * Specifies command-line switches to use when launching Internet Explorer.\n     * This is only valid when used with {@link #forceCreateProcessApi}.\n     *\n     * @param {...(string|!Array.<string>)} args The arguments to add.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"addBrowserCommandSwitches\",\n    value: function addBrowserCommandSwitches() {\n      var current = this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] || [];\n      if (typeof current == 'string') current = current.split(' ');\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] = current.concat(args).join(' ');\n      return this;\n    }\n\n    /**\n     * Specifies command-line switches to use when launching Internet Explorer.\n     * This is only valid when used with {@link #forceCreateProcessApi}.\n     *\n     * @param {...(string|!Array.<string>)} args The arguments to add.\n     * @deprecated Use {@link #addBrowserCommandSwitches} instead.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"addArguments\",\n    value: function addArguments() {\n      var current = this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] || [];\n      if (typeof current == 'string') current = current.split(' ');\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] = current.concat(args).join(' ');\n      return this;\n    }\n\n    /**\n     * Configures whether proxies should be configured on a per-process basis. If\n     * not set, setting a {@linkplain #setProxy proxy} will configure the system\n     * proxy. The default behavior is to use the system proxy.\n     *\n     * @param {boolean} enable Whether to enable per-process proxy settings.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"usePerProcessProxy\",\n    value: function usePerProcessProxy(enable) {\n      this.options_[Key.USE_PER_PROCESS_PROXY] = !!enable;\n      return this;\n    }\n\n    /**\n     * Configures whether to clear the cache, cookies, history, and saved form data\n     * before starting the browser. _Using this capability will clear session data\n     * for all running instances of Internet Explorer, including those started\n     * manually._\n     *\n     * @param {boolean} cleanSession Whether to clear all session data on startup.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"ensureCleanSession\",\n    value: function ensureCleanSession(cleanSession) {\n      this.options_[Key.ENSURE_CLEAN_SESSION] = !!cleanSession;\n      return this;\n    }\n\n    /**\n     * Sets the path to the log file the driver should log to.\n     * @param {string} file The log file path.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"setLogFile\",\n    value: function setLogFile(file) {\n      this.options_[Key.LOG_FILE] = file;\n      return this;\n    }\n\n    /**\n     * Sets the IEDriverServer's logging {@linkplain Level level}.\n     * @param {Level} level The logging level.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"setLogLevel\",\n    value: function setLogLevel(level) {\n      this.options_[Key.LOG_LEVEL] = level;\n      return this;\n    }\n\n    /**\n     * Sets the IP address of the driver's host adapter.\n     * @param {string} host The IP address to use.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"setHost\",\n    value: function setHost(host) {\n      this.options_[Key.HOST] = host;\n      return this;\n    }\n\n    /**\n     * Sets the path of the temporary data directory to use.\n     * @param {string} path The log file path.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"setExtractPath\",\n    value: function setExtractPath(path) {\n      this.options_[Key.EXTRACT_PATH] = path;\n      return this;\n    }\n\n    /**\n     * Sets whether the driver should start in silent mode.\n     * @param {boolean} silent Whether to run in silent mode.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"silent\",\n    value: function silent(_silent) {\n      this.options_[Key.SILENT] = _silent;\n      return this;\n    }\n\n    /**\n     * The options File Upload Dialog Timeout in milliseconds\n     *\n     * @param {number} timeout How long to wait for IE.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"fileUploadDialogTimeout\",\n    value: function fileUploadDialogTimeout(timeout) {\n      this.options_[Key.FILE_UPLOAD_DIALOG_TIMEOUT] = Math.max(timeout, 0);\n      return this;\n    }\n\n    /**\n     * Sets the path of the EdgeChromium driver.\n     * @param {string} path The EdgeChromium driver path.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"setEdgePath\",\n    value: function setEdgePath(path) {\n      this.options_[Key.EDGE_EXECUTABLE_PATH] = path;\n      return this;\n    }\n\n    /**\n     * Sets the IEDriver to drive Chromium-based Edge in Internet Explorer mode.\n     *\n     * @param {boolean} attachEdgeChromium Whether to run in Chromium-based-Edge in IE mode\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"setEdgeChromium\",\n    value: function setEdgeChromium(attachEdgeChromium) {\n      this.options_[Key.ATTACH_TO_EDGE_CHROMIUM] = !!attachEdgeChromium;\n      return this;\n    }\n\n    /**\n     * Sets how elements should be scrolled into view for interaction.\n     * @param {number} behavior The desired scroll behavior: either 0 to align with\n     *     the top of the viewport or 1 to align with the bottom.\n     * @return {!Options} A self reference.\n     */\n  }, {\n    key: \"setScrollBehavior\",\n    value: function setScrollBehavior(behavior) {\n      if (behavior && behavior !== SCROLL_BEHAVIOUR.TOP && behavior !== SCROLL_BEHAVIOUR.BOTTOM) {\n        throw new error.InvalidArgumentError(\"Element Scroll Behavior out of range.\\n      It should be either \".concat(SCROLL_BEHAVIOUR.TOP, \" or \").concat(SCROLL_BEHAVIOUR.BOTTOM));\n      }\n      this.options_[Key.ELEMENT_SCROLL_BEHAVIOR] = behavior;\n      return this;\n    }\n  }]);\n  return Options;\n}(Capabilities);\n/**\n * _Synchronously_ attempts to locate the IE driver executable on the current\n * system.\n *\n * @return {?string} the located executable, or `null`.\n */\nfunction locateSynchronously() {\n  return process.platform === 'win32' ? io.findInPath(IEDRIVER_EXE, true) : null;\n}\nfunction createServiceFromCapabilities(capabilities) {\n  if (process.platform !== 'win32') {\n    throw Error('The IEDriver may only be used on Windows, but you appear to be on ' + process.platform + '. Did you mean to run against a remote ' + 'WebDriver server?');\n  }\n  var exe = locateSynchronously();\n  var args = [];\n  if (capabilities.has(Key.HOST)) {\n    args.push('--host=' + capabilities.get(Key.HOST));\n  }\n  if (capabilities.has(Key.LOG_FILE)) {\n    args.push('--log-file=' + capabilities.get(Key.LOG_FILE));\n  }\n  if (capabilities.has(Key.LOG_LEVEL)) {\n    args.push('--log-level=' + capabilities.get(Key.LOG_LEVEL));\n  }\n  if (capabilities.has(Key.EXTRACT_PATH)) {\n    args.push('--extract-path=' + capabilities.get(Key.EXTRACT_PATH));\n  }\n  if (capabilities.get(Key.SILENT)) {\n    args.push('--silent');\n  }\n  var port = portprober.findFreePort();\n  return new remote.DriverService(exe, {\n    loopback: true,\n    port: port,\n    args: port.then(function (port) {\n      return args.concat('--port=' + port);\n    }),\n    stdio: 'ignore'\n  });\n}\n\n/**\n * Creates {@link selenium-webdriver/remote.DriverService} instances that manage\n * an [IEDriverServer](https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver)\n * server in a child process.\n */\nvar ServiceBuilder = /*#__PURE__*/function (_remote$DriverService) {\n  _inherits(ServiceBuilder, _remote$DriverService);\n  var _super2 = _createSuper(ServiceBuilder);\n  /**\n   * @param {string=} opt_exe Path to the server executable to use. If omitted,\n   *     the builder will attempt to locate the IEDriverServer on the system PATH.\n   */\n  function ServiceBuilder(opt_exe) {\n    var _this2;\n    _classCallCheck(this, ServiceBuilder);\n    _this2 = _super2.call(this, opt_exe || IEDRIVER_EXE);\n    _this2.setLoopback(true); // Required.\n    return _this2;\n  }\n  return _createClass(ServiceBuilder);\n}(remote.DriverService.Builder);\n/**\n * A WebDriver client for Microsoft's Internet Explorer.\n */\nvar Driver = /*#__PURE__*/function (_webdriver$WebDriver) {\n  _inherits(Driver, _webdriver$WebDriver);\n  var _super3 = _createSuper(Driver);\n  function Driver() {\n    _classCallCheck(this, Driver);\n    return _super3.apply(this, arguments);\n  }\n  _createClass(Driver, [{\n    key: \"setFileDetector\",\n    value:\n    /**\n     * This function is a no-op as file detectors are not supported by this\n     * implementation.\n     * @override\n     */\n    function setFileDetector() {}\n  }], [{\n    key: \"createSession\",\n    value:\n    /**\n     * Creates a new session for Microsoft's Internet Explorer.\n     *\n     * @param {(Capabilities|Options)=} options The configuration options.\n     * @param {(remote.DriverService)=} opt_service The `DriverService` to use\n     *   to start the IEDriverServer in a child process, optionally.\n     * @return {!Driver} A new driver instance.\n     */\n    function createSession(options, opt_service) {\n      options = options || new Options();\n      var service;\n      if (opt_service instanceof remote.DriverService) {\n        service = opt_service;\n      } else {\n        service = createServiceFromCapabilities(options);\n      }\n      if (!service.getExecutable()) {\n        service.setExecutable(getPath(service, options));\n      }\n      var client = service.start().then(function (url) {\n        return new http.HttpClient(url);\n      });\n      var executor = new http.Executor(client);\n      return (/** @type {!Driver} */_get(_getPrototypeOf(Driver), \"createSession\", this).call(this, executor, options, function () {\n          return service.kill();\n        })\n      );\n    }\n  }]);\n  return Driver;\n}(webdriver.WebDriver); // PUBLIC API\nexports.Driver = Driver;\nexports.Options = Options;\nexports.Level = Level;\nexports.ServiceBuilder = ServiceBuilder;\nexports.Key = Key;\nexports.VENDOR_COMMAND_PREFIX = OPTIONS_CAPABILITY_KEY;\nexports.Behavior = SCROLL_BEHAVIOUR;\nexports.locateSynchronously = locateSynchronously;","map":{"version":3,"names":["_get","require","default","_getPrototypeOf","_classCallCheck","_createClass","_inherits","_createSuper","fs","http","io","portprober","remote","webdriver","_require","Browser","Capabilities","error","_require2","getPath","IEDRIVER_EXE","OPTIONS_CAPABILITY_KEY","SCROLL_BEHAVIOUR","BOTTOM","TOP","Level","FATAL","ERROR","WARN","INFO","DEBUG","TRACE","Key","IGNORE_PROTECTED_MODE_SETTINGS","IGNORE_ZOOM_SETTING","INITIAL_BROWSER_URL","ENABLE_PERSISTENT_HOVER","ENABLE_ELEMENT_CACHE_CLEANUP","ELEMENT_SCROLL_BEHAVIOR","REQUIRE_WINDOW_FOCUS","BROWSER_ATTACH_TIMEOUT","FORCE_CREATE_PROCESS","BROWSER_COMMAND_LINE_SWITCHES","USE_PER_PROCESS_PROXY","ENSURE_CLEAN_SESSION","LOG_FILE","LOG_LEVEL","HOST","EXTRACT_PATH","SILENT","FILE_UPLOAD_DIALOG_TIMEOUT","ATTACH_TO_EDGE_CHROMIUM","EDGE_EXECUTABLE_PATH","Options","_Capabilities","_super","_this","other","arguments","length","undefined","call","options_","get","set","setBrowserName","INTERNET_EXPLORER","key","value","introduceFlakinessByIgnoringProtectedModeSettings","ignoreSettings","ignoreZoomSetting","ignore","initialBrowserUrl","url","enablePersistentHover","enable","enableElementCacheCleanup","requireWindowFocus","browserAttachTimeout","timeout","Math","max","forceCreateProcessApi","force","addBrowserCommandSwitches","current","split","_len","args","Array","_key","concat","join","addArguments","_len2","_key2","usePerProcessProxy","ensureCleanSession","cleanSession","setLogFile","file","setLogLevel","level","setHost","host","setExtractPath","path","silent","fileUploadDialogTimeout","setEdgePath","setEdgeChromium","attachEdgeChromium","setScrollBehavior","behavior","InvalidArgumentError","locateSynchronously","process","platform","findInPath","createServiceFromCapabilities","capabilities","Error","exe","has","push","port","findFreePort","DriverService","loopback","then","stdio","ServiceBuilder","_remote$DriverService","_super2","opt_exe","_this2","setLoopback","Builder","Driver","_webdriver$WebDriver","_super3","apply","setFileDetector","createSession","options","opt_service","service","getExecutable","setExecutable","client","start","HttpClient","executor","Executor","kill","WebDriver","exports","VENDOR_COMMAND_PREFIX","Behavior"],"sources":["D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/selenium-webdriver/ie.js"],"sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines a {@linkplain Driver WebDriver} client for Microsoft's\n * Internet Explorer. Before using the IEDriver, you must download the latest\n * [IEDriverServer](https://www.selenium.dev/downloads/)\n * and place it on your\n * [PATH](http://en.wikipedia.org/wiki/PATH_%28variable%29). You must also apply\n * the system configuration outlined on the Selenium project\n * [wiki](https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver)\n */\n\n'use strict'\n\nconst fs = require('fs')\nconst http = require('./http')\nconst io = require('./io')\nconst portprober = require('./net/portprober')\nconst remote = require('./remote')\nconst webdriver = require('./lib/webdriver')\nconst { Browser, Capabilities } = require('./lib/capabilities')\nconst error = require('./lib/error')\nconst { getPath } = require('./common/driverFinder')\n\nconst IEDRIVER_EXE = 'IEDriverServer.exe'\nconst OPTIONS_CAPABILITY_KEY = 'se:ieOptions'\nconst SCROLL_BEHAVIOUR = {\n  BOTTOM: 1,\n  TOP: 0,\n}\n\n/**\n * IEDriverServer logging levels.\n * @enum {string}\n */\nconst Level = {\n  FATAL: 'FATAL',\n  ERROR: 'ERROR',\n  WARN: 'WARN',\n  INFO: 'INFO',\n  DEBUG: 'DEBUG',\n  TRACE: 'TRACE',\n}\n\n/**\n * Option keys:\n * https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities#ie-specific\n * @enum {string}\n */\nconst Key = {\n  IGNORE_PROTECTED_MODE_SETTINGS: 'ignoreProtectedModeSettings',\n  IGNORE_ZOOM_SETTING: 'ignoreZoomSetting',\n  INITIAL_BROWSER_URL: 'initialBrowserUrl',\n  ENABLE_PERSISTENT_HOVER: 'enablePersistentHover',\n  ENABLE_ELEMENT_CACHE_CLEANUP: 'enableElementCacheCleanup',\n  ELEMENT_SCROLL_BEHAVIOR: 'elementScrollBehavior',\n  REQUIRE_WINDOW_FOCUS: 'requireWindowFocus',\n  BROWSER_ATTACH_TIMEOUT: 'browserAttachTimeout',\n  FORCE_CREATE_PROCESS: 'ie.forceCreateProcessApi',\n  BROWSER_COMMAND_LINE_SWITCHES: 'ie.browserCommandLineSwitches',\n  USE_PER_PROCESS_PROXY: 'ie.usePerProcessProxy',\n  ENSURE_CLEAN_SESSION: 'ie.ensureCleanSession',\n  LOG_FILE: 'logFile',\n  LOG_LEVEL: 'logLevel',\n  HOST: 'host',\n  EXTRACT_PATH: 'extractPath',\n  SILENT: 'silent',\n  FILE_UPLOAD_DIALOG_TIMEOUT: 'ie.fileUploadDialogTimeout',\n  ATTACH_TO_EDGE_CHROMIUM: 'ie.edgechromium',\n  EDGE_EXECUTABLE_PATH: 'ie.edgepath',\n}\n\n/**\n * Class for managing IEDriver specific options.\n */\nclass Options extends Capabilities {\n  /**\n   * @param {(Capabilities|Map<string, ?>|Object)=} other Another set of\n   *     capabilities to initialize this instance from.\n   */\n  constructor(other = undefined) {\n    super(other)\n\n    /** @private {!Object} */\n    this.options_ = this.get(OPTIONS_CAPABILITY_KEY) || {}\n\n    this.set(OPTIONS_CAPABILITY_KEY, this.options_)\n    this.setBrowserName(Browser.INTERNET_EXPLORER)\n  }\n\n  /**\n   * Whether to disable the protected mode settings check when the session is\n   * created. Disabling this setting may lead to significant instability as the\n   * browser may become unresponsive/hang. Only \"best effort\" support is provided\n   * when using this capability.\n   *\n   * For more information, refer to the IEDriver's\n   * [required system configuration](http://goo.gl/eH0Yi3).\n   *\n   * @param {boolean} ignoreSettings Whether to ignore protected mode settings.\n   * @return {!Options} A self reference.\n   */\n  introduceFlakinessByIgnoringProtectedModeSettings(ignoreSettings) {\n    this.options_[Key.IGNORE_PROTECTED_MODE_SETTINGS] = !!ignoreSettings\n    return this\n  }\n\n  /**\n   * Indicates whether to skip the check that the browser's zoom level is set to\n   * 100%.\n   *\n   * @param {boolean} ignore Whether to ignore the browser's zoom level settings.\n   * @return {!Options} A self reference.\n   */\n  ignoreZoomSetting(ignore) {\n    this.options_[Key.IGNORE_ZOOM_SETTING] = !!ignore\n    return this\n  }\n\n  /**\n   * Sets the initial URL loaded when IE starts. This is intended to be used with\n   * {@link #introduceFlakinessByIgnoringProtectedModeSettings} to allow the user to initialize IE in\n   * the proper Protected Mode zone. Setting this option may cause browser\n   * instability or flaky and unresponsive code. Only \"best effort\" support is\n   * provided when using this option.\n   *\n   * @param {string} url The initial browser URL.\n   * @return {!Options} A self reference.\n   */\n  initialBrowserUrl(url) {\n    this.options_[Key.INITIAL_BROWSER_URL] = url\n    return this\n  }\n\n  /**\n   * Configures whether to enable persistent mouse hovering (true by default).\n   * Persistent hovering is achieved by continuously firing mouse over events at\n   * the last location the mouse cursor has been moved to.\n   *\n   * @param {boolean} enable Whether to enable persistent hovering.\n   * @return {!Options} A self reference.\n   */\n  enablePersistentHover(enable) {\n    this.options_[Key.ENABLE_PERSISTENT_HOVER] = !!enable\n    return this\n  }\n\n  /**\n   * Configures whether the driver should attempt to remove obsolete\n   * {@linkplain webdriver.WebElement WebElements} from its internal cache on\n   * page navigation (true by default). Disabling this option will cause the\n   * driver to run with a larger memory footprint.\n   *\n   * @param {boolean} enable Whether to enable element reference cleanup.\n   * @return {!Options} A self reference.\n   */\n  enableElementCacheCleanup(enable) {\n    this.options_[Key.ENABLE_ELEMENT_CACHE_CLEANUP] = !!enable\n    return this\n  }\n\n  /**\n   * Configures whether to require the IE window to have input focus before\n   * performing any user interactions (i.e. mouse or keyboard events). This\n   * option is disabled by default, but delivers much more accurate interaction\n   * events when enabled.\n   *\n   * @param {boolean} require Whether to require window focus.\n   * @return {!Options} A self reference.\n   */\n  requireWindowFocus(require) {\n    this.options_[Key.REQUIRE_WINDOW_FOCUS] = !!require\n    return this\n  }\n\n  /**\n   * Configures the timeout, in milliseconds, that the driver will attempt to\n   * located and attach to a newly opened instance of Internet Explorer. The\n   * default is zero, which indicates waiting indefinitely.\n   *\n   * @param {number} timeout How long to wait for IE.\n   * @return {!Options} A self reference.\n   */\n  browserAttachTimeout(timeout) {\n    this.options_[Key.BROWSER_ATTACH_TIMEOUT] = Math.max(timeout, 0)\n    return this\n  }\n\n  /**\n   * Configures whether to launch Internet Explorer using the CreateProcess API.\n   * If this option is not specified, IE is launched using IELaunchURL, if\n   * available. For IE 8 and above, this option requires the TabProcGrowth\n   * registry value to be set to 0.\n   *\n   * @param {boolean} force Whether to use the CreateProcess API.\n   * @return {!Options} A self reference.\n   */\n  forceCreateProcessApi(force) {\n    this.options_[Key.FORCE_CREATE_PROCESS] = !!force\n    return this\n  }\n\n  /**\n   * Specifies command-line switches to use when launching Internet Explorer.\n   * This is only valid when used with {@link #forceCreateProcessApi}.\n   *\n   * @param {...(string|!Array.<string>)} args The arguments to add.\n   * @return {!Options} A self reference.\n   */\n\n  addBrowserCommandSwitches(...args) {\n    let current = this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] || []\n    if (typeof current == 'string') current = current.split(' ')\n    this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] = current\n      .concat(args)\n      .join(' ')\n    return this\n  }\n\n  /**\n   * Specifies command-line switches to use when launching Internet Explorer.\n   * This is only valid when used with {@link #forceCreateProcessApi}.\n   *\n   * @param {...(string|!Array.<string>)} args The arguments to add.\n   * @deprecated Use {@link #addBrowserCommandSwitches} instead.\n   * @return {!Options} A self reference.\n   */\n\n  addArguments(...args) {\n    let current = this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] || []\n    if (typeof current == 'string') current = current.split(' ')\n    this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] = current\n      .concat(args)\n      .join(' ')\n    return this\n  }\n\n  /**\n   * Configures whether proxies should be configured on a per-process basis. If\n   * not set, setting a {@linkplain #setProxy proxy} will configure the system\n   * proxy. The default behavior is to use the system proxy.\n   *\n   * @param {boolean} enable Whether to enable per-process proxy settings.\n   * @return {!Options} A self reference.\n   */\n  usePerProcessProxy(enable) {\n    this.options_[Key.USE_PER_PROCESS_PROXY] = !!enable\n    return this\n  }\n\n  /**\n   * Configures whether to clear the cache, cookies, history, and saved form data\n   * before starting the browser. _Using this capability will clear session data\n   * for all running instances of Internet Explorer, including those started\n   * manually._\n   *\n   * @param {boolean} cleanSession Whether to clear all session data on startup.\n   * @return {!Options} A self reference.\n   */\n  ensureCleanSession(cleanSession) {\n    this.options_[Key.ENSURE_CLEAN_SESSION] = !!cleanSession\n    return this\n  }\n\n  /**\n   * Sets the path to the log file the driver should log to.\n   * @param {string} file The log file path.\n   * @return {!Options} A self reference.\n   */\n  setLogFile(file) {\n    this.options_[Key.LOG_FILE] = file\n    return this\n  }\n\n  /**\n   * Sets the IEDriverServer's logging {@linkplain Level level}.\n   * @param {Level} level The logging level.\n   * @return {!Options} A self reference.\n   */\n  setLogLevel(level) {\n    this.options_[Key.LOG_LEVEL] = level\n    return this\n  }\n\n  /**\n   * Sets the IP address of the driver's host adapter.\n   * @param {string} host The IP address to use.\n   * @return {!Options} A self reference.\n   */\n  setHost(host) {\n    this.options_[Key.HOST] = host\n    return this\n  }\n\n  /**\n   * Sets the path of the temporary data directory to use.\n   * @param {string} path The log file path.\n   * @return {!Options} A self reference.\n   */\n  setExtractPath(path) {\n    this.options_[Key.EXTRACT_PATH] = path\n    return this\n  }\n\n  /**\n   * Sets whether the driver should start in silent mode.\n   * @param {boolean} silent Whether to run in silent mode.\n   * @return {!Options} A self reference.\n   */\n  silent(silent) {\n    this.options_[Key.SILENT] = silent\n    return this\n  }\n\n  /**\n   * The options File Upload Dialog Timeout in milliseconds\n   *\n   * @param {number} timeout How long to wait for IE.\n   * @return {!Options} A self reference.\n   */\n  fileUploadDialogTimeout(timeout) {\n    this.options_[Key.FILE_UPLOAD_DIALOG_TIMEOUT] = Math.max(timeout, 0)\n    return this\n  }\n\n  /**\n   * Sets the path of the EdgeChromium driver.\n   * @param {string} path The EdgeChromium driver path.\n   * @return {!Options} A self reference.\n   */\n  setEdgePath(path) {\n    this.options_[Key.EDGE_EXECUTABLE_PATH] = path\n    return this\n  }\n\n  /**\n   * Sets the IEDriver to drive Chromium-based Edge in Internet Explorer mode.\n   *\n   * @param {boolean} attachEdgeChromium Whether to run in Chromium-based-Edge in IE mode\n   * @return {!Options} A self reference.\n   */\n  setEdgeChromium(attachEdgeChromium) {\n    this.options_[Key.ATTACH_TO_EDGE_CHROMIUM] = !!attachEdgeChromium\n    return this\n  }\n\n  /**\n   * Sets how elements should be scrolled into view for interaction.\n   * @param {number} behavior The desired scroll behavior: either 0 to align with\n   *     the top of the viewport or 1 to align with the bottom.\n   * @return {!Options} A self reference.\n   */\n  setScrollBehavior(behavior) {\n    if (\n      behavior &&\n      behavior !== SCROLL_BEHAVIOUR.TOP &&\n      behavior !== SCROLL_BEHAVIOUR.BOTTOM\n    ) {\n      throw new error.InvalidArgumentError(`Element Scroll Behavior out of range.\n      It should be either ${SCROLL_BEHAVIOUR.TOP} or ${SCROLL_BEHAVIOUR.BOTTOM}`)\n    }\n    this.options_[Key.ELEMENT_SCROLL_BEHAVIOR] = behavior\n    return this\n  }\n}\n\n/**\n * _Synchronously_ attempts to locate the IE driver executable on the current\n * system.\n *\n * @return {?string} the located executable, or `null`.\n */\nfunction locateSynchronously() {\n  return process.platform === 'win32' ? io.findInPath(IEDRIVER_EXE, true) : null\n}\n\nfunction createServiceFromCapabilities(capabilities) {\n  if (process.platform !== 'win32') {\n    throw Error(\n      'The IEDriver may only be used on Windows, but you appear to be on ' +\n        process.platform +\n        '. Did you mean to run against a remote ' +\n        'WebDriver server?'\n    )\n  }\n\n  let exe = locateSynchronously()\n  var args = []\n  if (capabilities.has(Key.HOST)) {\n    args.push('--host=' + capabilities.get(Key.HOST))\n  }\n  if (capabilities.has(Key.LOG_FILE)) {\n    args.push('--log-file=' + capabilities.get(Key.LOG_FILE))\n  }\n  if (capabilities.has(Key.LOG_LEVEL)) {\n    args.push('--log-level=' + capabilities.get(Key.LOG_LEVEL))\n  }\n  if (capabilities.has(Key.EXTRACT_PATH)) {\n    args.push('--extract-path=' + capabilities.get(Key.EXTRACT_PATH))\n  }\n  if (capabilities.get(Key.SILENT)) {\n    args.push('--silent')\n  }\n\n  var port = portprober.findFreePort()\n  return new remote.DriverService(exe, {\n    loopback: true,\n    port: port,\n    args: port.then(function (port) {\n      return args.concat('--port=' + port)\n    }),\n    stdio: 'ignore',\n  })\n}\n\n/**\n * Creates {@link selenium-webdriver/remote.DriverService} instances that manage\n * an [IEDriverServer](https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver)\n * server in a child process.\n */\nclass ServiceBuilder extends remote.DriverService.Builder {\n  /**\n   * @param {string=} opt_exe Path to the server executable to use. If omitted,\n   *     the builder will attempt to locate the IEDriverServer on the system PATH.\n   */\n  constructor(opt_exe) {\n    super(opt_exe || IEDRIVER_EXE)\n    this.setLoopback(true) // Required.\n  }\n}\n\n/**\n * A WebDriver client for Microsoft's Internet Explorer.\n */\nclass Driver extends webdriver.WebDriver {\n  /**\n   * Creates a new session for Microsoft's Internet Explorer.\n   *\n   * @param {(Capabilities|Options)=} options The configuration options.\n   * @param {(remote.DriverService)=} opt_service The `DriverService` to use\n   *   to start the IEDriverServer in a child process, optionally.\n   * @return {!Driver} A new driver instance.\n   */\n  static createSession(options, opt_service) {\n    options = options || new Options()\n\n    let service\n\n    if (opt_service instanceof remote.DriverService) {\n      service = opt_service\n    } else {\n      service = createServiceFromCapabilities(options)\n    }\n    if (!service.getExecutable()) {\n      service.setExecutable(getPath(service, options))\n    }\n\n    let client = service.start().then((url) => new http.HttpClient(url))\n    let executor = new http.Executor(client)\n\n    return /** @type {!Driver} */ (\n      super.createSession(executor, options, () => service.kill())\n    )\n  }\n\n  /**\n   * This function is a no-op as file detectors are not supported by this\n   * implementation.\n   * @override\n   */\n  setFileDetector() {}\n}\n\n// PUBLIC API\n\nexports.Driver = Driver\nexports.Options = Options\nexports.Level = Level\nexports.ServiceBuilder = ServiceBuilder\nexports.Key = Key\nexports.VENDOR_COMMAND_PREFIX = OPTIONS_CAPABILITY_KEY\nexports.Behavior = SCROLL_BEHAVIOUR\nexports.locateSynchronously = locateSynchronously\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}