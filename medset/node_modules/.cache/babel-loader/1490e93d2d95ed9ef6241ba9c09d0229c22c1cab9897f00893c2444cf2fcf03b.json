{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview The heart of the WebDriver JavaScript API.\n */\n\n'use strict';\n\nvar _defineProperty = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _toConsumableArray = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _regeneratorRuntime = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _createForOfIteratorHelper = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _asyncToGenerator = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _inherits = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _classCallCheck = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar by = require('./by');\nvar _require = require('./by'),\n  RelativeBy = _require.RelativeBy;\nvar command = require('./command');\nvar error = require('./error');\nvar input = require('./input');\nvar logging = require('./logging');\nvar promise = require('./promise');\nvar Symbols = require('./symbols');\nvar cdp = require('../devtools/CDPConnection');\nvar WebSocket = require('ws');\nvar http = require('../http/index');\nvar fs = require('fs');\nvar _require2 = require('./capabilities'),\n  Capabilities = _require2.Capabilities;\nvar path = require('path');\nvar _require3 = require('./error'),\n  NoSuchElementError = _require3.NoSuchElementError;\nvar cdpTargets = ['page', 'browser'];\nvar _require4 = require('./virtual_authenticator'),\n  Credential = _require4.Credential;\nvar webElement = require('./webelement');\nvar _require5 = require('./util'),\n  isObject = _require5.isObject;\nvar BIDI = require('../bidi');\nvar _require6 = require('./pinnedScript'),\n  PinnedScript = _require6.PinnedScript;\n\n// Capability names that are defined in the W3C spec.\nvar W3C_CAPABILITY_NAMES = new Set(['acceptInsecureCerts', 'browserName', 'browserVersion', 'pageLoadStrategy', 'platformName', 'proxy', 'setWindowRect', 'strictFileInteractability', 'timeouts', 'unhandledPromptBehavior', 'webSocketUrl']);\n\n/**\n * Defines a condition for use with WebDriver's {@linkplain WebDriver#wait wait\n * command}.\n *\n * @template OUT\n */\nvar Condition = /*#__PURE__*/function () {\n  /**\n   * @param {string} message A descriptive error message. Should complete the\n   *     sentence \"Waiting [...]\"\n   * @param {function(!WebDriver): OUT} fn The condition function to\n   *     evaluate on each iteration of the wait loop.\n   */\n  function Condition(message, fn) {\n    _classCallCheck(this, Condition);\n    /** @private {string} */\n    this.description_ = 'Waiting ' + message;\n\n    /** @type {function(!WebDriver): OUT} */\n    this.fn = fn;\n  }\n\n  /** @return {string} A description of this condition. */\n  _createClass(Condition, [{\n    key: \"description\",\n    value: function description() {\n      return this.description_;\n    }\n  }]);\n  return Condition;\n}();\n/**\n * Defines a condition that will result in a {@link WebElement}.\n *\n * @extends {Condition<!(WebElement|IThenable<!WebElement>)>}\n */\nvar WebElementCondition = /*#__PURE__*/function (_Condition) {\n  _inherits(WebElementCondition, _Condition);\n  var _super = _createSuper(WebElementCondition);\n  /**\n   * @param {string} message A descriptive error message. Should complete the\n   *     sentence \"Waiting [...]\"\n   * @param {function(!WebDriver): !(WebElement|IThenable<!WebElement>)}\n   *     fn The condition function to evaluate on each iteration of the wait\n   *     loop.\n   */\n  function WebElementCondition(message, fn) {\n    _classCallCheck(this, WebElementCondition);\n    return _super.call(this, message, fn);\n  }\n  return _createClass(WebElementCondition);\n}(Condition); //////////////////////////////////////////////////////////////////////////////\n//\n//  WebDriver\n//\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Translates a command to its wire-protocol representation before passing it\n * to the given `executor` for execution.\n * @param {!command.Executor} executor The executor to use.\n * @param {!command.Command} command The command to execute.\n * @return {!Promise} A promise that will resolve with the command response.\n */\nfunction executeCommand(executor, command) {\n  return toWireValue(command.getParameters()).then(function (parameters) {\n    command.setParameters(parameters);\n    return executor.execute(command);\n  });\n}\n\n/**\n * Converts an object to its JSON representation in the WebDriver wire protocol.\n * When converting values of type object, the following steps will be taken:\n * <ol>\n * <li>if the object is a WebElement, the return value will be the element's\n *     server ID\n * <li>if the object defines a {@link Symbols.serialize} method, this algorithm\n *     will be recursively applied to the object's serialized representation\n * <li>if the object provides a \"toJSON\" function, this algorithm will\n *     recursively be applied to the result of that function\n * <li>otherwise, the value of each key will be recursively converted according\n *     to the rules above.\n * </ol>\n *\n * @param {*} obj The object to convert.\n * @return {!Promise<?>} A promise that will resolve to the input value's JSON\n *     representation.\n */\nfunction toWireValue(_x) {\n  return _toWireValue.apply(this, arguments);\n}\nfunction _toWireValue() {\n  _toWireValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee35(obj) {\n    var value;\n    return _regeneratorRuntime().wrap(function _callee35$(_context35) {\n      while (1) switch (_context35.prev = _context35.next) {\n        case 0:\n          _context35.next = 2;\n          return Promise.resolve(obj);\n        case 2:\n          value = _context35.sent;\n          if (!(value === void 0 || value === null)) {\n            _context35.next = 5;\n            break;\n          }\n          return _context35.abrupt(\"return\", value);\n        case 5:\n          if (!(typeof value === 'boolean' || typeof value === 'number' || typeof value === 'string')) {\n            _context35.next = 7;\n            break;\n          }\n          return _context35.abrupt(\"return\", value);\n        case 7:\n          if (!Array.isArray(value)) {\n            _context35.next = 9;\n            break;\n          }\n          return _context35.abrupt(\"return\", convertKeys(value));\n        case 9:\n          if (!(typeof value === 'function')) {\n            _context35.next = 11;\n            break;\n          }\n          return _context35.abrupt(\"return\", '' + value);\n        case 11:\n          if (!(typeof value[Symbols.serialize] === 'function')) {\n            _context35.next = 15;\n            break;\n          }\n          return _context35.abrupt(\"return\", toWireValue(value[Symbols.serialize]()));\n        case 15:\n          if (!(typeof value.toJSON === 'function')) {\n            _context35.next = 17;\n            break;\n          }\n          return _context35.abrupt(\"return\", toWireValue(value.toJSON()));\n        case 17:\n          return _context35.abrupt(\"return\", convertKeys(value));\n        case 18:\n        case \"end\":\n          return _context35.stop();\n      }\n    }, _callee35);\n  }));\n  return _toWireValue.apply(this, arguments);\n}\nfunction convertKeys(_x2) {\n  return _convertKeys.apply(this, arguments);\n}\n/**\n * Converts a value from its JSON representation according to the WebDriver wire\n * protocol. Any JSON object that defines a WebElement ID will be decoded to a\n * {@link WebElement} object. All other values will be passed through as is.\n *\n * @param {!WebDriver} driver The driver to use as the parent of any unwrapped\n *     {@link WebElement} values.\n * @param {*} value The value to convert.\n * @return {*} The converted value.\n */\nfunction _convertKeys() {\n  _convertKeys = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee38(obj) {\n    var isArray, numKeys, ret, forEachKey, _forEachKey;\n    return _regeneratorRuntime().wrap(function _callee38$(_context38) {\n      while (1) switch (_context38.prev = _context38.next) {\n        case 0:\n          _forEachKey = function _forEachKey3() {\n            _forEachKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee37(obj, fn) {\n              var i, n, key;\n              return _regeneratorRuntime().wrap(function _callee37$(_context37) {\n                while (1) switch (_context37.prev = _context37.next) {\n                  case 0:\n                    if (!Array.isArray(obj)) {\n                      _context37.next = 10;\n                      break;\n                    }\n                    i = 0, n = obj.length;\n                  case 2:\n                    if (!(i < n)) {\n                      _context37.next = 8;\n                      break;\n                    }\n                    _context37.next = 5;\n                    return fn(obj[i], i);\n                  case 5:\n                    i++;\n                    _context37.next = 2;\n                    break;\n                  case 8:\n                    _context37.next = 17;\n                    break;\n                  case 10:\n                    _context37.t0 = _regeneratorRuntime().keys(obj);\n                  case 11:\n                    if ((_context37.t1 = _context37.t0()).done) {\n                      _context37.next = 17;\n                      break;\n                    }\n                    key = _context37.t1.value;\n                    _context37.next = 15;\n                    return fn(obj[key], key);\n                  case 15:\n                    _context37.next = 11;\n                    break;\n                  case 17:\n                  case \"end\":\n                    return _context37.stop();\n                }\n              }, _callee37);\n            }));\n            return _forEachKey.apply(this, arguments);\n          };\n          forEachKey = function _forEachKey2(_x40, _x41) {\n            return _forEachKey.apply(this, arguments);\n          };\n          isArray = Array.isArray(obj);\n          numKeys = isArray ? obj.length : Object.keys(obj).length;\n          ret = isArray ? new Array(numKeys) : {};\n          if (numKeys) {\n            _context38.next = 7;\n            break;\n          }\n          return _context38.abrupt(\"return\", ret);\n        case 7:\n          _context38.next = 9;\n          return forEachKey(obj, /*#__PURE__*/function () {\n            var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee36(value, key) {\n              return _regeneratorRuntime().wrap(function _callee36$(_context36) {\n                while (1) switch (_context36.prev = _context36.next) {\n                  case 0:\n                    _context36.next = 2;\n                    return toWireValue(value);\n                  case 2:\n                    ret[key] = _context36.sent;\n                  case 3:\n                  case \"end\":\n                    return _context36.stop();\n                }\n              }, _callee36);\n            }));\n            return function (_x42, _x43) {\n              return _ref11.apply(this, arguments);\n            };\n          }());\n        case 9:\n          return _context38.abrupt(\"return\", ret);\n        case 10:\n        case \"end\":\n          return _context38.stop();\n      }\n    }, _callee38);\n  }));\n  return _convertKeys.apply(this, arguments);\n}\nfunction fromWireValue(driver, value) {\n  if (Array.isArray(value)) {\n    value = value.map(function (v) {\n      return fromWireValue(driver, v);\n    });\n  } else if (WebElement.isId(value)) {\n    var id = WebElement.extractId(value);\n    value = new WebElement(driver, id);\n  } else if (ShadowRoot.isId(value)) {\n    var _id = ShadowRoot.extractId(value);\n    value = new ShadowRoot(driver, _id);\n  } else if (isObject(value)) {\n    var result = {};\n    for (var key in value) {\n      if (Object.prototype.hasOwnProperty.call(value, key)) {\n        result[key] = fromWireValue(driver, value[key]);\n      }\n    }\n    value = result;\n  }\n  return value;\n}\n\n/**\n * Resolves a wait message from either a function or a string.\n * @param {(string|Function)=} message An optional message to use if the wait times out.\n * @return {string} The resolved message\n */\nfunction resolveWaitMessage(message) {\n  return message ? \"\".concat(typeof message === 'function' ? message() : message, \"\\n\") : '';\n}\n\n/**\n * Structural interface for a WebDriver client.\n *\n * @record\n */\nvar IWebDriver = /*#__PURE__*/function () {\n  function IWebDriver() {\n    _classCallCheck(this, IWebDriver);\n  }\n  _createClass(IWebDriver, [{\n    key: \"execute\",\n    value:\n    /**\n     * Executes the provided {@link command.Command} using this driver's\n     * {@link command.Executor}.\n     *\n     * @param {!command.Command} command The command to schedule.\n     * @return {!Promise<T>} A promise that will be resolved with the command\n     *     result.\n     * @template T\n     */\n    function execute(command) {} // eslint-disable-line\n\n    /**\n     * Sets the {@linkplain input.FileDetector file detector} that should be\n     * used with this instance.\n     * @param {input.FileDetector} detector The detector to use or `null`.\n     */\n  }, {\n    key: \"setFileDetector\",\n    value: function setFileDetector(detector) {} // eslint-disable-line\n\n    /**\n     * @return {!command.Executor} The command executor used by this instance.\n     */\n  }, {\n    key: \"getExecutor\",\n    value: function getExecutor() {}\n\n    /**\n     * @return {!Promise<!Session>} A promise for this client's session.\n     */\n  }, {\n    key: \"getSession\",\n    value: function getSession() {}\n\n    /**\n     * @return {!Promise<!Capabilities>} A promise that will resolve with\n     *     the instance's capabilities.\n     */\n  }, {\n    key: \"getCapabilities\",\n    value: function getCapabilities() {}\n\n    /**\n     * Terminates the browser session. After calling quit, this instance will be\n     * invalidated and may no longer be used to issue commands against the\n     * browser.\n     *\n     * @return {!Promise<void>} A promise that will be resolved when the\n     *     command has completed.\n     */\n  }, {\n    key: \"quit\",\n    value: function quit() {}\n\n    /**\n     * Creates a new action sequence using this driver. The sequence will not be\n     * submitted for execution until\n     * {@link ./input.Actions#perform Actions.perform()} is called.\n     *\n     * @param {{async: (boolean|undefined),\n     *          bridge: (boolean|undefined)}=} options Configuration options for\n     *     the action sequence (see {@link ./input.Actions Actions} documentation\n     *     for details).\n     * @return {!input.Actions} A new action sequence for this instance.\n     */\n  }, {\n    key: \"actions\",\n    value: function actions(options) {} // eslint-disable-line\n\n    /**\n     * Executes a snippet of JavaScript in the context of the currently selected\n     * frame or window. The script fragment will be executed as the body of an\n     * anonymous function. If the script is provided as a function object, that\n     * function will be converted to a string for injection into the target\n     * window.\n     *\n     * Any arguments provided in addition to the script will be included as script\n     * arguments and may be referenced using the `arguments` object. Arguments may\n     * be a boolean, number, string, or {@linkplain WebElement}. Arrays and\n     * objects may also be used as script arguments as long as each item adheres\n     * to the types previously mentioned.\n     *\n     * The script may refer to any variables accessible from the current window.\n     * Furthermore, the script will execute in the window's context, thus\n     * `document` may be used to refer to the current document. Any local\n     * variables will not be available once the script has finished executing,\n     * though global variables will persist.\n     *\n     * If the script has a return value (i.e. if the script contains a return\n     * statement), then the following steps will be taken for resolving this\n     * functions return value:\n     *\n     * - For a HTML element, the value will resolve to a {@linkplain WebElement}\n     * - Null and undefined return values will resolve to null</li>\n     * - Booleans, numbers, and strings will resolve as is</li>\n     * - Functions will resolve to their string representation</li>\n     * - For arrays and objects, each member item will be converted according to\n     *     the rules above\n     *\n     * @param {!(string|Function)} script The script to execute.\n     * @param {...*} args The arguments to pass to the script.\n     * @return {!IThenable<T>} A promise that will resolve to the\n     *    scripts return value.\n     * @template T\n     */\n  }, {\n    key: \"executeScript\",\n    value: function executeScript(script) {} // eslint-disable-line\n\n    /**\n     * Executes a snippet of asynchronous JavaScript in the context of the\n     * currently selected frame or window. The script fragment will be executed as\n     * the body of an anonymous function. If the script is provided as a function\n     * object, that function will be converted to a string for injection into the\n     * target window.\n     *\n     * Any arguments provided in addition to the script will be included as script\n     * arguments and may be referenced using the `arguments` object. Arguments may\n     * be a boolean, number, string, or {@linkplain WebElement}. Arrays and\n     * objects may also be used as script arguments as long as each item adheres\n     * to the types previously mentioned.\n     *\n     * Unlike executing synchronous JavaScript with {@link #executeScript},\n     * scripts executed with this function must explicitly signal they are\n     * finished by invoking the provided callback. This callback will always be\n     * injected into the executed function as the last argument, and thus may be\n     * referenced with  `arguments[arguments.length - 1]`. The following steps\n     * will be taken for resolving this functions return value against the first\n     * argument to the script's callback function:\n     *\n     * - For a HTML element, the value will resolve to a {@link WebElement}\n     * - Null and undefined return values will resolve to null\n     * - Booleans, numbers, and strings will resolve as is\n     * - Functions will resolve to their string representation\n     * - For arrays and objects, each member item will be converted according to\n     *     the rules above\n     *\n     * __Example #1:__ Performing a sleep that is synchronized with the currently\n     * selected window:\n     *\n     *     var start = new Date().getTime();\n     *     driver.executeAsyncScript(\n     *         'window.setTimeout(arguments[arguments.length - 1], 500);').\n     *         then(function() {\n     *           console.log(\n     *               'Elapsed time: ' + (new Date().getTime() - start) + ' ms');\n     *         });\n     *\n     * __Example #2:__ Synchronizing a test with an AJAX application:\n     *\n     *     var button = driver.findElement(By.id('compose-button'));\n     *     button.click();\n     *     driver.executeAsyncScript(\n     *         'var callback = arguments[arguments.length - 1];' +\n     *         'mailClient.getComposeWindowWidget().onload(callback);');\n     *     driver.switchTo().frame('composeWidget');\n     *     driver.findElement(By.id('to')).sendKeys('dog@example.com');\n     *\n     * __Example #3:__ Injecting a XMLHttpRequest and waiting for the result. In\n     * this example, the inject script is specified with a function literal. When\n     * using this format, the function is converted to a string for injection, so\n     * it should not reference any symbols not defined in the scope of the page\n     * under test.\n     *\n     *     driver.executeAsyncScript(function() {\n     *       var callback = arguments[arguments.length - 1];\n     *       var xhr = new XMLHttpRequest();\n     *       xhr.open(\"GET\", \"/resource/data.json\", true);\n     *       xhr.onreadystatechange = function() {\n     *         if (xhr.readyState == 4) {\n     *           callback(xhr.responseText);\n     *         }\n     *       };\n     *       xhr.send('');\n     *     }).then(function(str) {\n     *       console.log(JSON.parse(str)['food']);\n     *     });\n     *\n     * @param {!(string|Function)} script The script to execute.\n     * @param {...*} args The arguments to pass to the script.\n     * @return {!IThenable<T>} A promise that will resolve to the scripts return\n     *     value.\n     * @template T\n     */\n  }, {\n    key: \"executeAsyncScript\",\n    value: function executeAsyncScript(script) {} // eslint-disable-line\n\n    /**\n     * Waits for a condition to evaluate to a \"truthy\" value. The condition may be\n     * specified by a {@link Condition}, as a custom function, or as any\n     * promise-like thenable.\n     *\n     * For a {@link Condition} or function, the wait will repeatedly\n     * evaluate the condition until it returns a truthy value. If any errors occur\n     * while evaluating the condition, they will be allowed to propagate. In the\n     * event a condition returns a {@linkplain Promise}, the polling loop will\n     * wait for it to be resolved and use the resolved value for whether the\n     * condition has been satisfied. The resolution time for a promise is always\n     * factored into whether a wait has timed out.\n     *\n     * If the provided condition is a {@link WebElementCondition}, then\n     * the wait will return a {@link WebElementPromise} that will resolve to the\n     * element that satisfied the condition.\n     *\n     * _Example:_ waiting up to 10 seconds for an element to be present on the\n     * page.\n     *\n     *     async function example() {\n     *       let button =\n     *           await driver.wait(until.elementLocated(By.id('foo')), 10000);\n     *       await button.click();\n     *     }\n     *\n     * @param {!(IThenable<T>|\n     *           Condition<T>|\n     *           function(!WebDriver): T)} condition The condition to\n     *     wait on, defined as a promise, condition object, or  a function to\n     *     evaluate as a condition.\n     * @param {number=} timeout The duration in milliseconds, how long to wait\n     *     for the condition to be true.\n     * @param {(string|Function)=} message An optional message to use if the wait times out.\n     * @param {number=} pollTimeout The duration in milliseconds, how long to\n     *     wait between polling the condition.\n     * @return {!(IThenable<T>|WebElementPromise)} A promise that will be\n     *     resolved with the first truthy value returned by the condition\n     *     function, or rejected if the condition times out. If the input\n     *     condition is an instance of a {@link WebElementCondition},\n     *     the returned value will be a {@link WebElementPromise}.\n     * @throws {TypeError} if the provided `condition` is not a valid type.\n     * @template T\n     */\n  }, {\n    key: \"wait\",\n    value: function wait(condition) {\n      var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      var message = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n      var pollTimeout = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n    }\n\n    /**\n     * Makes the driver sleep for the given amount of time.\n     *\n     * @param {number} ms The amount of time, in milliseconds, to sleep.\n     * @return {!Promise<void>} A promise that will be resolved when the sleep has\n     *     finished.\n     */\n  }, {\n    key: \"sleep\",\n    value: function sleep(ms) {} // eslint-disable-line\n\n    /**\n     * Retrieves the current window handle.\n     *\n     * @return {!Promise<string>} A promise that will be resolved with the current\n     *     window handle.\n     */\n  }, {\n    key: \"getWindowHandle\",\n    value: function getWindowHandle() {}\n\n    /**\n     * Retrieves a list of all available window handles.\n     *\n     * @return {!Promise<!Array<string>>} A promise that will be resolved with an\n     *     array of window handles.\n     */\n  }, {\n    key: \"getAllWindowHandles\",\n    value: function getAllWindowHandles() {}\n\n    /**\n     * Retrieves the current page's source. The returned source is a representation\n     * of the underlying DOM: do not expect it to be formatted or escaped in the\n     * same way as the raw response sent from the web server.\n     *\n     * @return {!Promise<string>} A promise that will be resolved with the current\n     *     page source.\n     */\n  }, {\n    key: \"getPageSource\",\n    value: function getPageSource() {}\n\n    /**\n     * Closes the current window.\n     *\n     * @return {!Promise<void>} A promise that will be resolved when this command\n     *     has completed.\n     */\n  }, {\n    key: \"close\",\n    value: function close() {}\n\n    /**\n     * Navigates to the given URL.\n     *\n     * @param {string} url The fully qualified URL to open.\n     * @return {!Promise<void>} A promise that will be resolved when the document\n     *     has finished loading.\n     */\n  }, {\n    key: \"get\",\n    value: function get(url) {} // eslint-disable-line\n\n    /**\n     * Retrieves the URL for the current page.\n     *\n     * @return {!Promise<string>} A promise that will be resolved with the\n     *     current URL.\n     */\n  }, {\n    key: \"getCurrentUrl\",\n    value: function getCurrentUrl() {}\n\n    /**\n     * Retrieves the current page title.\n     *\n     * @return {!Promise<string>} A promise that will be resolved with the current\n     *     page's title.\n     */\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {}\n\n    /**\n     * Locates an element on the page. If the element cannot be found, a\n     * {@link error.NoSuchElementError} will be returned by the driver.\n     *\n     * This function should not be used to test whether an element is present on\n     * the page. Rather, you should use {@link #findElements}:\n     *\n     *     driver.findElements(By.id('foo'))\n     *         .then(found => console.log('Element found? %s', !!found.length));\n     *\n     * The search criteria for an element may be defined using one of the\n     * factories in the {@link webdriver.By} namespace, or as a short-hand\n     * {@link webdriver.By.Hash} object. For example, the following two statements\n     * are equivalent:\n     *\n     *     var e1 = driver.findElement(By.id('foo'));\n     *     var e2 = driver.findElement({id:'foo'});\n     *\n     * You may also provide a custom locator function, which takes as input this\n     * instance and returns a {@link WebElement}, or a promise that will resolve\n     * to a WebElement. If the returned promise resolves to an array of\n     * WebElements, WebDriver will use the first element. For example, to find the\n     * first visible link on a page, you could write:\n     *\n     *     var link = driver.findElement(firstVisibleLink);\n     *\n     *     function firstVisibleLink(driver) {\n     *       var links = driver.findElements(By.tagName('a'));\n     *       return promise.filter(links, function(link) {\n     *         return link.isDisplayed();\n     *       });\n     *     }\n     *\n     * @param {!(by.By|Function)} locator The locator to use.\n     * @return {!WebElementPromise} A WebElement that can be used to issue\n     *     commands against the located element. If the element is not found, the\n     *     element will be invalidated and all scheduled commands aborted.\n     */\n  }, {\n    key: \"findElement\",\n    value: function findElement(locator) {} // eslint-disable-line\n\n    /**\n     * Search for multiple elements on the page. Refer to the documentation on\n     * {@link #findElement(by)} for information on element locator strategies.\n     *\n     * @param {!(by.By|Function)} locator The locator to use.\n     * @return {!Promise<!Array<!WebElement>>} A promise that will resolve to an\n     *     array of WebElements.\n     */\n  }, {\n    key: \"findElements\",\n    value: function findElements(locator) {} // eslint-disable-line\n\n    /**\n     * Takes a screenshot of the current page. The driver makes the best effort to\n     * return a screenshot of the following, in order of preference:\n     *\n     * 1. Entire page\n     * 2. Current window\n     * 3. Visible portion of the current frame\n     * 4. The entire display containing the browser\n     *\n     * @return {!Promise<string>} A promise that will be resolved to the\n     *     screenshot as a base-64 encoded PNG.\n     */\n  }, {\n    key: \"takeScreenshot\",\n    value: function takeScreenshot() {}\n\n    /**\n     * @return {!Options} The options interface for this instance.\n     */\n  }, {\n    key: \"manage\",\n    value: function manage() {}\n\n    /**\n     * @return {!Navigation} The navigation interface for this instance.\n     */\n  }, {\n    key: \"navigate\",\n    value: function navigate() {}\n\n    /**\n     * @return {!TargetLocator} The target locator interface for this\n     *     instance.\n     */\n  }, {\n    key: \"switchTo\",\n    value: function switchTo() {}\n\n    /**\n     *\n     * Takes a PDF of the current page. The driver makes a best effort to\n     * return a PDF based on the provided parameters.\n     *\n     * @param {{orientation:(string|undefined),\n     *         scale:(number|undefined),\n     *         background:(boolean|undefined),\n     *         width:(number|undefined),\n     *         height:(number|undefined),\n     *         top:(number|undefined),\n     *         bottom:(number|undefined),\n     *         left:(number|undefined),\n     *         right:(number|undefined),\n     *         shrinkToFit:(boolean|undefined),\n     *         pageRanges:(Array|undefined)}} options\n     */\n  }, {\n    key: \"printPage\",\n    value: function printPage(options) {} // eslint-disable-line\n  }]);\n  return IWebDriver;\n}();\n/**\n * @param {!Capabilities} capabilities A capabilities object.\n * @return {!Capabilities} A copy of the parameter capabilities, omitting\n *     capability names that are not valid W3C names.\n */\nfunction filterNonW3CCaps(capabilities) {\n  var newCaps = new Capabilities(capabilities);\n  var _iterator = _createForOfIteratorHelper(newCaps.keys()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var k = _step.value;\n      // Any key containing a colon is a vendor-prefixed capability.\n      if (!(W3C_CAPABILITY_NAMES.has(k) || k.indexOf(':') >= 0)) {\n        newCaps.delete(k);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return newCaps;\n}\n\n/**\n * Each WebDriver instance provides automated control over a browser session.\n *\n * @implements {IWebDriver}\n */\nvar WebDriver = /*#__PURE__*/function () {\n  /**\n   * @param {!(./session.Session|IThenable<!./session.Session>)} session Either\n   *     a known session or a promise that will be resolved to a session.\n   * @param {!command.Executor} executor The executor to use when sending\n   *     commands to the browser.\n   * @param {(function(this: void): ?)=} onQuit A function to call, if any,\n   *     when the session is terminated.\n   */\n  function WebDriver(session, executor) {\n    var onQuit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    _classCallCheck(this, WebDriver);\n    /** @private {!Promise<!Session>} */\n    this.session_ = Promise.resolve(session);\n\n    // If session is a rejected promise, add a no-op rejection handler.\n    // This effectively hides setup errors until users attempt to interact\n    // with the session.\n    this.session_.catch(function () {});\n\n    /** @private {!command.Executor} */\n    this.executor_ = executor;\n\n    /** @private {input.FileDetector} */\n    this.fileDetector_ = null;\n\n    /** @private @const {(function(this: void): ?|undefined)} */\n    this.onQuit_ = onQuit;\n\n    /** @private {./virtual_authenticator}*/\n    this.authenticatorId_ = null;\n    this.pinnedScripts_ = {};\n  }\n\n  /**\n   * Creates a new WebDriver session.\n   *\n   * This function will always return a WebDriver instance. If there is an error\n   * creating the session, such as the aforementioned SessionNotCreatedError,\n   * the driver will have a rejected {@linkplain #getSession session} promise.\n   * This rejection will propagate through any subsequent commands scheduled\n   * on the returned WebDriver instance.\n   *\n   *     let required = Capabilities.firefox();\n   *     let driver = WebDriver.createSession(executor, {required});\n   *\n   *     // If the createSession operation failed, then this command will also\n   *     // also fail, propagating the creation failure.\n   *     driver.get('http://www.google.com').catch(e => console.log(e));\n   *\n   * @param {!command.Executor} executor The executor to create the new session\n   *     with.\n   * @param {!Capabilities} capabilities The desired capabilities for the new\n   *     session.\n   * @param {(function(this: void): ?)=} onQuit A callback to invoke when\n   *    the newly created session is terminated. This should be used to clean\n   *    up any resources associated with the session.\n   * @return {!WebDriver} The driver for the newly created session.\n   */\n  _createClass(WebDriver, [{\n    key: \"execute\",\n    value: /** @override */function () {\n      var _execute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(command) {\n        var parameters, value;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              command.setParameter('sessionId', this.session_);\n              _context.next = 3;\n              return toWireValue(command.getParameters());\n            case 3:\n              parameters = _context.sent;\n              command.setParameters(parameters);\n              _context.next = 7;\n              return this.executor_.execute(command);\n            case 7:\n              value = _context.sent;\n              return _context.abrupt(\"return\", fromWireValue(this, value));\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function execute(_x3) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }() /** @override */\n  }, {\n    key: \"setFileDetector\",\n    value: function setFileDetector(detector) {\n      this.fileDetector_ = detector;\n    }\n\n    /** @override */\n  }, {\n    key: \"getExecutor\",\n    value: function getExecutor() {\n      return this.executor_;\n    }\n\n    /** @override */\n  }, {\n    key: \"getSession\",\n    value: function getSession() {\n      return this.session_;\n    }\n\n    /** @override */\n  }, {\n    key: \"getCapabilities\",\n    value: function getCapabilities() {\n      return this.session_.then(function (s) {\n        return s.getCapabilities();\n      });\n    }\n\n    /** @override */\n  }, {\n    key: \"quit\",\n    value: function quit() {\n      var _this = this;\n      var result = this.execute(new command.Command(command.Name.QUIT));\n      // Delete our session ID when the quit command finishes; this will allow us\n      // to throw an error when attempting to use a driver post-quit.\n      return promise.finally(result, function () {\n        _this.session_ = Promise.reject(new error.NoSuchSessionError('This driver instance does not have a valid session ID ' + '(did you call WebDriver.quit()?) and may no longer be used.'));\n\n        // Only want the session rejection to bubble if accessed.\n        _this.session_.catch(function () {});\n        if (_this.onQuit_) {\n          return _this.onQuit_.call(void 0);\n        }\n      });\n    }\n\n    /** @override */\n  }, {\n    key: \"actions\",\n    value: function actions(options) {\n      return new input.Actions(this, options || undefined);\n    }\n\n    /** @override */\n  }, {\n    key: \"executeScript\",\n    value: function executeScript(script) {\n      if (typeof script === 'function') {\n        script = 'return (' + script + ').apply(null, arguments);';\n      }\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (script && script instanceof PinnedScript) {\n        return this.execute(new command.Command(command.Name.EXECUTE_SCRIPT).setParameter('script', script.executionScript()).setParameter('args', args));\n      }\n      return this.execute(new command.Command(command.Name.EXECUTE_SCRIPT).setParameter('script', script).setParameter('args', args));\n    }\n\n    /** @override */\n  }, {\n    key: \"executeAsyncScript\",\n    value: function executeAsyncScript(script) {\n      if (typeof script === 'function') {\n        script = 'return (' + script + ').apply(null, arguments);';\n      }\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      if (script && script instanceof PinnedScript) {\n        return this.execute(new command.Command(command.Name.EXECUTE_ASYNC_SCRIPT).setParameter('script', script.executionScript()).setParameter('args', args));\n      }\n      return this.execute(new command.Command(command.Name.EXECUTE_ASYNC_SCRIPT).setParameter('script', script).setParameter('args', args));\n    }\n\n    /** @override */\n  }, {\n    key: \"wait\",\n    value: function wait(condition) {\n      var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var message = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n      var pollTimeout = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 200;\n      if (typeof timeout !== 'number' || timeout < 0) {\n        throw TypeError('timeout must be a number >= 0: ' + timeout);\n      }\n      if (typeof pollTimeout !== 'number' || pollTimeout < 0) {\n        throw TypeError('pollTimeout must be a number >= 0: ' + pollTimeout);\n      }\n      if (promise.isPromise(condition)) {\n        return new Promise(function (resolve, reject) {\n          if (!timeout) {\n            resolve(condition);\n            return;\n          }\n          var start = Date.now();\n          var timer = setTimeout(function () {\n            timer = null;\n            try {\n              var timeoutMessage = resolveWaitMessage(message);\n              reject(new error.TimeoutError(\"\".concat(timeoutMessage, \"Timed out waiting for promise to resolve after \").concat(Date.now() - start, \"ms\")));\n            } catch (ex) {\n              reject(new error.TimeoutError(\"\".concat(ex.message, \"\\nTimed out waiting for promise to resolve after \").concat(Date.now() - start, \"ms\")));\n            }\n          }, timeout);\n          var clearTimer = function clearTimer() {\n            return timer && clearTimeout(timer);\n          };\n\n          /** @type {!IThenable} */\n          condition.then(function (value) {\n            clearTimer();\n            resolve(value);\n          }, function (error) {\n            clearTimer();\n            reject(error);\n          });\n        });\n      }\n      var fn = /** @type {!Function} */condition;\n      if (condition instanceof Condition) {\n        message = message || condition.description();\n        fn = condition.fn;\n      }\n      if (typeof fn !== 'function') {\n        throw TypeError('Wait condition must be a promise-like object, function, or a ' + 'Condition object');\n      }\n      var driver = this;\n      function evaluateCondition() {\n        return new Promise(function (resolve, reject) {\n          try {\n            resolve(fn(driver));\n          } catch (ex) {\n            reject(ex);\n          }\n        });\n      }\n      var result = new Promise(function (resolve, reject) {\n        var startTime = Date.now();\n        var pollCondition = /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  evaluateCondition().then(function (value) {\n                    var elapsed = Date.now() - startTime;\n                    if (value) {\n                      resolve(value);\n                    } else if (timeout && elapsed >= timeout) {\n                      try {\n                        var timeoutMessage = resolveWaitMessage(message);\n                        reject(new error.TimeoutError(\"\".concat(timeoutMessage, \"Wait timed out after \").concat(elapsed, \"ms\")));\n                      } catch (ex) {\n                        reject(new error.TimeoutError(\"\".concat(ex.message, \"\\nWait timed out after \").concat(elapsed, \"ms\")));\n                      }\n                    } else {\n                      setTimeout(pollCondition, pollTimeout);\n                    }\n                  }, reject);\n                case 1:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _callee2);\n          }));\n          return function pollCondition() {\n            return _ref.apply(this, arguments);\n          };\n        }();\n        pollCondition();\n      });\n      if (condition instanceof WebElementCondition) {\n        result = new WebElementPromise(this, result.then(function (value) {\n          if (!(value instanceof WebElement)) {\n            throw TypeError('WebElementCondition did not resolve to a WebElement: ' + Object.prototype.toString.call(value));\n          }\n          return value;\n        }));\n      }\n      return result;\n    }\n\n    /** @override */\n  }, {\n    key: \"sleep\",\n    value: function sleep(ms) {\n      return new Promise(function (resolve) {\n        return setTimeout(resolve, ms);\n      });\n    }\n\n    /** @override */\n  }, {\n    key: \"getWindowHandle\",\n    value: function getWindowHandle() {\n      return this.execute(new command.Command(command.Name.GET_CURRENT_WINDOW_HANDLE));\n    }\n\n    /** @override */\n  }, {\n    key: \"getAllWindowHandles\",\n    value: function getAllWindowHandles() {\n      return this.execute(new command.Command(command.Name.GET_WINDOW_HANDLES));\n    }\n\n    /** @override */\n  }, {\n    key: \"getPageSource\",\n    value: function getPageSource() {\n      return this.execute(new command.Command(command.Name.GET_PAGE_SOURCE));\n    }\n\n    /** @override */\n  }, {\n    key: \"close\",\n    value: function close() {\n      return this.execute(new command.Command(command.Name.CLOSE));\n    }\n\n    /** @override */\n  }, {\n    key: \"get\",\n    value: function get(url) {\n      return this.navigate().to(url);\n    }\n\n    /** @override */\n  }, {\n    key: \"getCurrentUrl\",\n    value: function getCurrentUrl() {\n      return this.execute(new command.Command(command.Name.GET_CURRENT_URL));\n    }\n\n    /** @override */\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      return this.execute(new command.Command(command.Name.GET_TITLE));\n    }\n\n    /** @override */\n  }, {\n    key: \"findElement\",\n    value: function findElement(locator) {\n      var id;\n      var cmd = null;\n      if (locator instanceof RelativeBy) {\n        cmd = new command.Command(command.Name.FIND_ELEMENTS_RELATIVE).setParameter('args', locator.marshall());\n      } else {\n        locator = by.checkedLocator(locator);\n      }\n      if (typeof locator === 'function') {\n        id = this.findElementInternal_(locator, this);\n        return new WebElementPromise(this, id);\n      } else if (cmd === null) {\n        cmd = new command.Command(command.Name.FIND_ELEMENT).setParameter('using', locator.using).setParameter('value', locator.value);\n      }\n      id = this.execute(cmd);\n      if (locator instanceof RelativeBy) {\n        return this.normalize_(id);\n      } else {\n        return new WebElementPromise(this, id);\n      }\n    }\n\n    /**\n     * @param {!Function} webElementPromise The webElement in unresolved state\n     * @return {!Promise<!WebElement>} First single WebElement from array of resolved promises\n     */\n  }, {\n    key: \"normalize_\",\n    value: function () {\n      var _normalize_ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(webElementPromise) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return webElementPromise;\n            case 2:\n              result = _context3.sent;\n              if (!(result.length === 0)) {\n                _context3.next = 7;\n                break;\n              }\n              throw new NoSuchElementError('Cannot locate an element with provided parameters');\n            case 7:\n              return _context3.abrupt(\"return\", result[0]);\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function normalize_(_x4) {\n        return _normalize_.apply(this, arguments);\n      }\n      return normalize_;\n    }()\n    /**\n     * @param {!Function} locatorFn The locator function to use.\n     * @param {!(WebDriver|WebElement)} context The search context.\n     * @return {!Promise<!WebElement>} A promise that will resolve to a list of\n     *     WebElements.\n     * @private\n     */\n  }, {\n    key: \"findElementInternal_\",\n    value: function () {\n      var _findElementInternal_ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(locatorFn, context) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return locatorFn(context);\n            case 2:\n              result = _context4.sent;\n              if (Array.isArray(result)) {\n                result = result[0];\n              }\n              if (result instanceof WebElement) {\n                _context4.next = 6;\n                break;\n              }\n              throw new TypeError('Custom locator did not return a WebElement');\n            case 6:\n              return _context4.abrupt(\"return\", result);\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      function findElementInternal_(_x5, _x6) {\n        return _findElementInternal_.apply(this, arguments);\n      }\n      return findElementInternal_;\n    }() /** @override */\n  }, {\n    key: \"findElements\",\n    value: function () {\n      var _findElements = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(locator) {\n        var cmd, res;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              cmd = null;\n              if (locator instanceof RelativeBy) {\n                cmd = new command.Command(command.Name.FIND_ELEMENTS_RELATIVE).setParameter('args', locator.marshall());\n              } else {\n                locator = by.checkedLocator(locator);\n              }\n              if (!(typeof locator === 'function')) {\n                _context5.next = 6;\n                break;\n              }\n              return _context5.abrupt(\"return\", this.findElementsInternal_(locator, this));\n            case 6:\n              if (cmd === null) {\n                cmd = new command.Command(command.Name.FIND_ELEMENTS).setParameter('using', locator.using).setParameter('value', locator.value);\n              }\n            case 7:\n              _context5.prev = 7;\n              _context5.next = 10;\n              return this.execute(cmd);\n            case 10:\n              res = _context5.sent;\n              return _context5.abrupt(\"return\", Array.isArray(res) ? res : []);\n            case 14:\n              _context5.prev = 14;\n              _context5.t0 = _context5[\"catch\"](7);\n              if (!(_context5.t0 instanceof error.NoSuchElementError)) {\n                _context5.next = 18;\n                break;\n              }\n              return _context5.abrupt(\"return\", []);\n            case 18:\n              throw _context5.t0;\n            case 19:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[7, 14]]);\n      }));\n      function findElements(_x7) {\n        return _findElements.apply(this, arguments);\n      }\n      return findElements;\n    }()\n    /**\n     * @param {!Function} locatorFn The locator function to use.\n     * @param {!(WebDriver|WebElement)} context The search context.\n     * @return {!Promise<!Array<!WebElement>>} A promise that will resolve to an\n     *     array of WebElements.\n     * @private\n     */\n  }, {\n    key: \"findElementsInternal_\",\n    value: function () {\n      var _findElementsInternal_ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(locatorFn, context) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return locatorFn(context);\n            case 2:\n              result = _context6.sent;\n              if (!(result instanceof WebElement)) {\n                _context6.next = 5;\n                break;\n              }\n              return _context6.abrupt(\"return\", [result]);\n            case 5:\n              if (Array.isArray(result)) {\n                _context6.next = 7;\n                break;\n              }\n              return _context6.abrupt(\"return\", []);\n            case 7:\n              return _context6.abrupt(\"return\", result.filter(function (item) {\n                return item instanceof WebElement;\n              }));\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      function findElementsInternal_(_x8, _x9) {\n        return _findElementsInternal_.apply(this, arguments);\n      }\n      return findElementsInternal_;\n    }() /** @override */\n  }, {\n    key: \"takeScreenshot\",\n    value: function takeScreenshot() {\n      return this.execute(new command.Command(command.Name.SCREENSHOT));\n    }\n\n    /** @override */\n  }, {\n    key: \"manage\",\n    value: function manage() {\n      return new Options(this);\n    }\n\n    /** @override */\n  }, {\n    key: \"navigate\",\n    value: function navigate() {\n      return new Navigation(this);\n    }\n\n    /** @override */\n  }, {\n    key: \"switchTo\",\n    value: function switchTo() {\n      return new TargetLocator(this);\n    }\n  }, {\n    key: \"validatePrintPageParams\",\n    value: function validatePrintPageParams(keys, object) {\n      var page = {};\n      var margin = {};\n      var data;\n      Object.keys(keys).forEach(function (key) {\n        data = keys[key];\n        var obj = {\n          orientation: function orientation() {\n            object.orientation = data;\n          },\n          scale: function scale() {\n            object.scale = data;\n          },\n          background: function background() {\n            object.background = data;\n          },\n          width: function width() {\n            page.width = data;\n            object.page = page;\n          },\n          height: function height() {\n            page.height = data;\n            object.page = page;\n          },\n          top: function top() {\n            margin.top = data;\n            object.margin = margin;\n          },\n          left: function left() {\n            margin.left = data;\n            object.margin = margin;\n          },\n          bottom: function bottom() {\n            margin.bottom = data;\n            object.margin = margin;\n          },\n          right: function right() {\n            margin.right = data;\n            object.margin = margin;\n          },\n          shrinkToFit: function shrinkToFit() {\n            object.shrinkToFit = data;\n          },\n          pageRanges: function pageRanges() {\n            object.pageRanges = data;\n          }\n        };\n        if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n          throw new error.InvalidArgumentError(\"Invalid Argument '\".concat(key, \"'\"));\n        } else {\n          obj[key]();\n        }\n      });\n      return object;\n    }\n\n    /** @override */\n  }, {\n    key: \"printPage\",\n    value: function printPage() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var keys = options;\n      var params = {};\n      var resultObj;\n      var self = this;\n      resultObj = self.validatePrintPageParams(keys, params);\n      return this.execute(new command.Command(command.Name.PRINT_PAGE).setParameters(resultObj));\n    }\n\n    /**\n     * Creates a new WebSocket connection.\n     * @return {!Promise<resolved>} A new CDP instance.\n     */\n  }, {\n    key: \"createCDPConnection\",\n    value: function () {\n      var _createCDPConnection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(target) {\n        var _this2 = this;\n        var debuggerUrl, caps, host, sessionId, seCdp, vendorInfo;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              debuggerUrl = null;\n              _context9.next = 3;\n              return this.getCapabilities();\n            case 3:\n              caps = _context9.sent;\n              if (!process.env.SELENIUM_REMOTE_URL) {\n                _context9.next = 12;\n                break;\n              }\n              host = new URL(process.env.SELENIUM_REMOTE_URL).host;\n              _context9.next = 8;\n              return this.getSession().then(function (session) {\n                return session.getId();\n              });\n            case 8:\n              sessionId = _context9.sent;\n              debuggerUrl = \"ws://\".concat(host, \"/session/\").concat(sessionId, \"/se/cdp\");\n              _context9.next = 15;\n              break;\n            case 12:\n              seCdp = caps['map_'].get('se:cdp');\n              vendorInfo = caps['map_'].get(this.VENDOR_COMMAND_PREFIX + ':chromeOptions') || caps['map_'].get(this.VENDOR_CAPABILITY_PREFIX + ':edgeOptions') || caps['map_'].get('moz:debuggerAddress') || new Map();\n              debuggerUrl = seCdp || vendorInfo['debuggerAddress'] || vendorInfo;\n            case 15:\n              _context9.next = 17;\n              return this.getWsUrl(debuggerUrl, target, caps);\n            case 17:\n              this._wsUrl = _context9.sent;\n              return _context9.abrupt(\"return\", new Promise(function (resolve, reject) {\n                try {\n                  _this2._wsConnection = new WebSocket(_this2._wsUrl.replace('localhost', '127.0.0.1'));\n                  _this2._cdpConnection = new cdp.CdpConnection(_this2._wsConnection);\n                } catch (err) {\n                  reject(err);\n                  return;\n                }\n                _this2._wsConnection.on('open', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n                  return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n                    while (1) switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _context7.next = 2;\n                        return _this2.getCdpTargets();\n                      case 2:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }, _callee7);\n                })));\n                _this2._wsConnection.on('message', /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(message) {\n                    var params, targets, page;\n                    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n                      while (1) switch (_context8.prev = _context8.next) {\n                        case 0:\n                          params = JSON.parse(message);\n                          if (params.result) {\n                            if (params.result.targetInfos) {\n                              targets = params.result.targetInfos;\n                              page = targets.find(function (info) {\n                                return info.type === 'page';\n                              });\n                              if (page) {\n                                _this2.targetID = page.targetId;\n                                _this2._cdpConnection.execute('Target.attachToTarget', {\n                                  targetId: _this2.targetID,\n                                  flatten: true\n                                }, null);\n                              } else {\n                                reject('Unable to find Page target.');\n                              }\n                            }\n                            if (params.result.sessionId) {\n                              _this2.sessionId = params.result.sessionId;\n                              _this2._cdpConnection.sessionId = _this2.sessionId;\n                              resolve(_this2._cdpConnection);\n                            }\n                          }\n                        case 2:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }, _callee8);\n                  }));\n                  return function (_x11) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n                _this2._wsConnection.on('error', function (error) {\n                  reject(error);\n                });\n              }));\n            case 19:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function createCDPConnection(_x10) {\n        return _createCDPConnection.apply(this, arguments);\n      }\n      return createCDPConnection;\n    }()\n  }, {\n    key: \"getCdpTargets\",\n    value: function () {\n      var _getCdpTargets = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              this._cdpConnection.execute('Target.getTargets');\n            case 1:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function getCdpTargets() {\n        return _getCdpTargets.apply(this, arguments);\n      }\n      return getCdpTargets;\n    }()\n    /**\n     * Initiates bidi connection using 'webSocketUrl'\n     * @returns {BIDI}\n     */\n  }, {\n    key: \"getBidi\",\n    value: function () {\n      var _getBidi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var caps, WebSocketUrl;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return this.getCapabilities();\n            case 2:\n              caps = _context11.sent;\n              WebSocketUrl = caps['map_'].get('webSocketUrl');\n              return _context11.abrupt(\"return\", new BIDI(WebSocketUrl.replace('localhost', '127.0.0.1')));\n            case 5:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function getBidi() {\n        return _getBidi.apply(this, arguments);\n      }\n      return getBidi;\n    }()\n    /**\n     * Retrieves 'webSocketDebuggerUrl' by sending a http request using debugger address\n     * @param {string} debuggerAddress\n     * @param target\n     * @param caps\n     * @return {string} Returns parsed webSocketDebuggerUrl obtained from the http request\n     */\n  }, {\n    key: \"getWsUrl\",\n    value: function () {\n      var _getWsUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(debuggerAddress, target, caps) {\n        var path, request, client, response;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              if (!(target && cdpTargets.indexOf(target.toLowerCase()) === -1)) {\n                _context12.next = 2;\n                break;\n              }\n              throw new error.InvalidArgumentError('invalid target value');\n            case 2:\n              if (!debuggerAddress.match(/\\/se\\/cdp/)) {\n                _context12.next = 4;\n                break;\n              }\n              return _context12.abrupt(\"return\", debuggerAddress);\n            case 4:\n              if (target === 'page' && caps['map_'].get('browserName') !== 'firefox') {\n                path = '/json';\n              } else if (target === 'page' && caps['map_'].get('browserName') === 'firefox') {\n                path = '/json/list';\n              } else {\n                path = '/json/version';\n              }\n              request = new http.Request('GET', path);\n              client = new http.HttpClient('http://' + debuggerAddress);\n              _context12.next = 9;\n              return client.send(request);\n            case 9:\n              response = _context12.sent;\n              if (!(target.toLowerCase() === 'page')) {\n                _context12.next = 14;\n                break;\n              }\n              return _context12.abrupt(\"return\", JSON.parse(response.body)[0]['webSocketDebuggerUrl']);\n            case 14:\n              return _context12.abrupt(\"return\", JSON.parse(response.body)['webSocketDebuggerUrl']);\n            case 15:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12);\n      }));\n      function getWsUrl(_x12, _x13, _x14) {\n        return _getWsUrl.apply(this, arguments);\n      }\n      return getWsUrl;\n    }()\n    /**\n     * Sets a listener for Fetch.authRequired event from CDP\n     * If event is triggered, it enters username and password\n     * and allows the test to move forward\n     * @param {string} username\n     * @param {string} password\n     * @param connection CDP Connection\n     */\n  }, {\n    key: \"register\",\n    value: function () {\n      var _register = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(username, password, connection) {\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              this._wsConnection.on('message', function (message) {\n                var params = JSON.parse(message);\n                if (params.method === 'Fetch.authRequired') {\n                  var requestParams = params['params'];\n                  connection.execute('Fetch.continueWithAuth', {\n                    requestId: requestParams['requestId'],\n                    authChallengeResponse: {\n                      response: 'ProvideCredentials',\n                      username: username,\n                      password: password\n                    }\n                  });\n                } else if (params.method === 'Fetch.requestPaused') {\n                  var requestPausedParams = params['params'];\n                  connection.execute('Fetch.continueRequest', {\n                    requestId: requestPausedParams['requestId']\n                  });\n                }\n              });\n              _context13.next = 3;\n              return connection.execute('Fetch.enable', {\n                handleAuthRequests: true\n              }, null);\n            case 3:\n              _context13.next = 5;\n              return connection.execute('Network.setCacheDisabled', {\n                cacheDisabled: true\n              }, null);\n            case 5:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n      function register(_x15, _x16, _x17) {\n        return _register.apply(this, arguments);\n      }\n      return register;\n    }()\n    /**\n     * Handle Network interception requests\n     * @param connection WebSocket connection to the browser\n     * @param httpResponse Object representing what we are intercepting\n     *                     as well as what should be returned.\n     * @param callback callback called when we intercept requests.\n     */\n  }, {\n    key: \"onIntercept\",\n    value: function () {\n      var _onIntercept = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(connection, httpResponse, callback) {\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              this._wsConnection.on('message', function (message) {\n                var params = JSON.parse(message);\n                if (params.method === 'Fetch.requestPaused') {\n                  var requestPausedParams = params['params'];\n                  if (requestPausedParams.request.url == httpResponse.urlToIntercept) {\n                    connection.execute('Fetch.fulfillRequest', {\n                      requestId: requestPausedParams['requestId'],\n                      responseCode: httpResponse.status,\n                      responseHeaders: httpResponse.headers,\n                      body: httpResponse.body\n                    });\n                    callback();\n                  } else {\n                    connection.execute('Fetch.continueRequest', {\n                      requestId: requestPausedParams['requestId']\n                    });\n                  }\n                }\n              });\n              _context14.next = 3;\n              return connection.execute('Fetch.enable', {}, null);\n            case 3:\n              _context14.next = 5;\n              return connection.execute('Network.setCacheDisabled', {\n                cacheDisabled: true\n              }, null);\n            case 5:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this);\n      }));\n      function onIntercept(_x18, _x19, _x20) {\n        return _onIntercept.apply(this, arguments);\n      }\n      return onIntercept;\n    }()\n    /**\n     *\n     * @param connection\n     * @param callback\n     * @returns {Promise<void>}\n     */\n  }, {\n    key: \"onLogEvent\",\n    value: function () {\n      var _onLogEvent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(connection, callback) {\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              this._wsConnection.on('message', function (message) {\n                var params = JSON.parse(message);\n                if (params.method === 'Runtime.consoleAPICalled') {\n                  var consoleEventParams = params['params'];\n                  var event = {\n                    type: consoleEventParams['type'],\n                    timestamp: new Date(consoleEventParams['timestamp']),\n                    args: consoleEventParams['args']\n                  };\n                  callback(event);\n                }\n                if (params.method === 'Log.entryAdded') {\n                  var logEventParams = params['params'];\n                  var logEntry = logEventParams['entry'];\n                  var _event = {\n                    level: logEntry['level'],\n                    timestamp: new Date(logEntry['timestamp']),\n                    message: logEntry['text']\n                  };\n                  callback(_event);\n                }\n              });\n              _context15.next = 3;\n              return connection.execute('Runtime.enable', {}, null);\n            case 3:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this);\n      }));\n      function onLogEvent(_x21, _x22) {\n        return _onLogEvent.apply(this, arguments);\n      }\n      return onLogEvent;\n    }()\n    /**\n     *\n     * @param connection\n     * @param callback\n     * @returns {Promise<void>}\n     */\n  }, {\n    key: \"onLogException\",\n    value: function () {\n      var _onLogException = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(connection, callback) {\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return connection.execute('Runtime.enable', {}, null);\n            case 2:\n              this._wsConnection.on('message', function (message) {\n                var params = JSON.parse(message);\n                if (params.method === 'Runtime.exceptionThrown') {\n                  var exceptionEventParams = params['params'];\n                  var event = {\n                    exceptionDetails: exceptionEventParams['exceptionDetails'],\n                    timestamp: new Date(exceptionEventParams['timestamp'])\n                  };\n                  callback(event);\n                }\n              });\n            case 3:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n      function onLogException(_x23, _x24) {\n        return _onLogException.apply(this, arguments);\n      }\n      return onLogException;\n    }()\n    /**\n     * @param connection\n     * @param callback\n     * @returns {Promise<void>}\n     */\n  }, {\n    key: \"logMutationEvents\",\n    value: function () {\n      var _logMutationEvents = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(connection, callback) {\n        var _this3 = this;\n        var mutationListener;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.next = 2;\n              return connection.execute('Runtime.enable', {}, null);\n            case 2:\n              _context18.next = 4;\n              return connection.execute('Page.enable', {}, null);\n            case 4:\n              _context18.next = 6;\n              return connection.execute('Runtime.addBinding', {\n                name: '__webdriver_attribute'\n              }, null);\n            case 6:\n              mutationListener = '';\n              try {\n                // Depending on what is running the code it could appear in 2 different places which is why we try\n                // here and then the other location\n                mutationListener = fs.readFileSync('./javascript/node/selenium-webdriver/lib/atoms/mutation-listener.js', 'utf-8').toString();\n              } catch (_unused) {\n                mutationListener = fs.readFileSync(path.resolve(__dirname, './atoms/mutation-listener.js'), 'utf-8').toString();\n              }\n              this.executeScript(mutationListener);\n              _context18.next = 11;\n              return connection.execute('Page.addScriptToEvaluateOnNewDocument', {\n                source: mutationListener\n              }, null);\n            case 11:\n              this._wsConnection.on('message', /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(message) {\n                  var params, payload, elements, event;\n                  return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n                    while (1) switch (_context17.prev = _context17.next) {\n                      case 0:\n                        params = JSON.parse(message);\n                        if (!(params.method === 'Runtime.bindingCalled')) {\n                          _context17.next = 10;\n                          break;\n                        }\n                        payload = JSON.parse(params['params']['payload']);\n                        _context17.next = 5;\n                        return _this3.findElements({\n                          css: '*[data-__webdriver_id=' + by.escapeCss(payload['target']) + ']'\n                        });\n                      case 5:\n                        elements = _context17.sent;\n                        if (!(elements.length === 0)) {\n                          _context17.next = 8;\n                          break;\n                        }\n                        return _context17.abrupt(\"return\");\n                      case 8:\n                        event = {\n                          element: elements[0],\n                          attribute_name: payload['name'],\n                          current_value: payload['value'],\n                          old_value: payload['oldValue']\n                        };\n                        callback(event);\n                      case 10:\n                      case \"end\":\n                        return _context17.stop();\n                    }\n                  }, _callee17);\n                }));\n                return function (_x27) {\n                  return _ref4.apply(this, arguments);\n                };\n              }());\n            case 12:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18, this);\n      }));\n      function logMutationEvents(_x25, _x26) {\n        return _logMutationEvents.apply(this, arguments);\n      }\n      return logMutationEvents;\n    }()\n  }, {\n    key: \"pinScript\",\n    value: function () {\n      var _pinScript = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(script) {\n        var pinnedScript, connection, result;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              pinnedScript = new PinnedScript(script);\n              if (!Object.is(this._cdpConnection, undefined)) {\n                _context19.next = 7;\n                break;\n              }\n              _context19.next = 4;\n              return this.createCDPConnection('page');\n            case 4:\n              connection = _context19.sent;\n              _context19.next = 8;\n              break;\n            case 7:\n              connection = this._cdpConnection;\n            case 8:\n              _context19.next = 10;\n              return connection.execute('Page.enable', {}, null);\n            case 10:\n              _context19.next = 12;\n              return connection.execute('Runtime.evaluate', {\n                expression: pinnedScript.creationScript()\n              }, null);\n            case 12:\n              _context19.next = 14;\n              return connection.send('Page.addScriptToEvaluateOnNewDocument', {\n                source: pinnedScript.creationScript()\n              });\n            case 14:\n              result = _context19.sent;\n              pinnedScript.scriptId = result['result']['identifier'];\n              this.pinnedScripts_[pinnedScript.handle] = pinnedScript;\n              return _context19.abrupt(\"return\", pinnedScript);\n            case 18:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19, this);\n      }));\n      function pinScript(_x28) {\n        return _pinScript.apply(this, arguments);\n      }\n      return pinScript;\n    }()\n  }, {\n    key: \"unpinScript\",\n    value: function () {\n      var _unpinScript = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(script) {\n        var connection;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              if (!(script && !(script instanceof PinnedScript))) {\n                _context20.next = 2;\n                break;\n              }\n              throw Error(\"Pass valid PinnedScript object. Received: \".concat(script));\n            case 2:\n              if (!(script.handle in this.pinnedScripts_)) {\n                _context20.next = 11;\n                break;\n              }\n              if (Object.is(this._cdpConnection, undefined)) {\n                connection = this.createCDPConnection('page');\n              } else {\n                connection = this._cdpConnection;\n              }\n              _context20.next = 6;\n              return connection.execute('Page.enable', {}, null);\n            case 6:\n              _context20.next = 8;\n              return connection.execute('Runtime.evaluate', {\n                expression: script.removalScript()\n              }, null);\n            case 8:\n              _context20.next = 10;\n              return connection.execute('Page.removeScriptToEvaluateOnLoad', {\n                identifier: script.scriptId\n              }, null);\n            case 10:\n              delete this.pinnedScripts_[script.handle];\n            case 11:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20, this);\n      }));\n      function unpinScript(_x29) {\n        return _unpinScript.apply(this, arguments);\n      }\n      return unpinScript;\n    }()\n    /**\n     *\n     * @returns The value of authenticator ID added\n     */\n  }, {\n    key: \"virtualAuthenticatorId\",\n    value: function virtualAuthenticatorId() {\n      return this.authenticatorId_;\n    }\n\n    /**\n     * Adds a virtual authenticator with the given options.\n     * @param options VirtualAuthenticatorOptions object to set authenticator options.\n     */\n  }, {\n    key: \"addVirtualAuthenticator\",\n    value: function () {\n      var _addVirtualAuthenticator = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(options) {\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.next = 2;\n              return this.execute(new command.Command(command.Name.ADD_VIRTUAL_AUTHENTICATOR).setParameters(options.toDict()));\n            case 2:\n              this.authenticatorId_ = _context21.sent;\n            case 3:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21, this);\n      }));\n      function addVirtualAuthenticator(_x30) {\n        return _addVirtualAuthenticator.apply(this, arguments);\n      }\n      return addVirtualAuthenticator;\n    }()\n    /**\n     * Removes a previously added virtual authenticator. The authenticator is no\n     * longer valid after removal, so no methods may be called.\n     */\n  }, {\n    key: \"removeVirtualAuthenticator\",\n    value: function () {\n      var _removeVirtualAuthenticator = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22() {\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) switch (_context22.prev = _context22.next) {\n            case 0:\n              _context22.next = 2;\n              return this.execute(new command.Command(command.Name.REMOVE_VIRTUAL_AUTHENTICATOR).setParameter('authenticatorId', this.authenticatorId_));\n            case 2:\n              this.authenticatorId_ = null;\n            case 3:\n            case \"end\":\n              return _context22.stop();\n          }\n        }, _callee22, this);\n      }));\n      function removeVirtualAuthenticator() {\n        return _removeVirtualAuthenticator.apply(this, arguments);\n      }\n      return removeVirtualAuthenticator;\n    }()\n    /**\n     * Injects a credential into the authenticator.\n     * @param credential Credential to be added\n     */\n  }, {\n    key: \"addCredential\",\n    value: function () {\n      var _addCredential = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(credential) {\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) switch (_context23.prev = _context23.next) {\n            case 0:\n              credential = credential.toDict();\n              credential['authenticatorId'] = this.authenticatorId_;\n              _context23.next = 4;\n              return this.execute(new command.Command(command.Name.ADD_CREDENTIAL).setParameters(credential));\n            case 4:\n            case \"end\":\n              return _context23.stop();\n          }\n        }, _callee23, this);\n      }));\n      function addCredential(_x31) {\n        return _addCredential.apply(this, arguments);\n      }\n      return addCredential;\n    }()\n    /**\n     *\n     * @returns The list of credentials owned by the authenticator.\n     */\n  }, {\n    key: \"getCredentials\",\n    value: function () {\n      var _getCredentials = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {\n        var credential_data, credential_list, i;\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) switch (_context24.prev = _context24.next) {\n            case 0:\n              _context24.next = 2;\n              return this.execute(new command.Command(command.Name.GET_CREDENTIALS).setParameter('authenticatorId', this.virtualAuthenticatorId()));\n            case 2:\n              credential_data = _context24.sent;\n              credential_list = [];\n              for (i = 0; i < credential_data.length; i++) {\n                credential_list.push(new Credential().fromDict(credential_data[i]));\n              }\n              return _context24.abrupt(\"return\", credential_list);\n            case 6:\n            case \"end\":\n              return _context24.stop();\n          }\n        }, _callee24, this);\n      }));\n      function getCredentials() {\n        return _getCredentials.apply(this, arguments);\n      }\n      return getCredentials;\n    }()\n    /**\n     * Removes a credential from the authenticator.\n     * @param credential_id The ID of the credential to be removed.\n     */\n  }, {\n    key: \"removeCredential\",\n    value: function () {\n      var _removeCredential = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(credential_id) {\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) switch (_context25.prev = _context25.next) {\n            case 0:\n              // If credential_id is not a base64url, then convert it to base64url.\n              if (Array.isArray(credential_id)) {\n                credential_id = Buffer.from(credential_id).toString('base64url');\n              }\n              _context25.next = 3;\n              return this.execute(new command.Command(command.Name.REMOVE_CREDENTIAL).setParameter('credentialId', credential_id).setParameter('authenticatorId', this.authenticatorId_));\n            case 3:\n            case \"end\":\n              return _context25.stop();\n          }\n        }, _callee25, this);\n      }));\n      function removeCredential(_x32) {\n        return _removeCredential.apply(this, arguments);\n      }\n      return removeCredential;\n    }()\n    /**\n     * Removes all the credentials from the authenticator.\n     */\n  }, {\n    key: \"removeAllCredentials\",\n    value: function () {\n      var _removeAllCredentials = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26() {\n        return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n          while (1) switch (_context26.prev = _context26.next) {\n            case 0:\n              _context26.next = 2;\n              return this.execute(new command.Command(command.Name.REMOVE_ALL_CREDENTIALS).setParameter('authenticatorId', this.authenticatorId_));\n            case 2:\n            case \"end\":\n              return _context26.stop();\n          }\n        }, _callee26, this);\n      }));\n      function removeAllCredentials() {\n        return _removeAllCredentials.apply(this, arguments);\n      }\n      return removeAllCredentials;\n    }()\n    /**\n     * Sets whether the authenticator will simulate success or fail on user verification.\n     * @param verified true if the authenticator will pass user verification, false otherwise.\n     */\n  }, {\n    key: \"setUserVerified\",\n    value: function () {\n      var _setUserVerified = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27(verified) {\n        return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n          while (1) switch (_context27.prev = _context27.next) {\n            case 0:\n              _context27.next = 2;\n              return this.execute(new command.Command(command.Name.SET_USER_VERIFIED).setParameter('authenticatorId', this.authenticatorId_).setParameter('isUserVerified', verified));\n            case 2:\n            case \"end\":\n              return _context27.stop();\n          }\n        }, _callee27, this);\n      }));\n      function setUserVerified(_x33) {\n        return _setUserVerified.apply(this, arguments);\n      }\n      return setUserVerified;\n    }()\n  }], [{\n    key: \"createSession\",\n    value: function createSession(executor, capabilities) {\n      var onQuit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n      var cmd = new command.Command(command.Name.NEW_SESSION);\n\n      // For W3C remote ends.\n      cmd.setParameter('capabilities', {\n        firstMatch: [{}],\n        alwaysMatch: filterNonW3CCaps(capabilities)\n      });\n      var session = executeCommand(executor, cmd);\n      if (typeof onQuit === 'function') {\n        session = session.catch(function (err) {\n          return Promise.resolve(onQuit.call(void 0)).then(function (_) {\n            throw err;\n          });\n        });\n      }\n      return new this(session, executor, onQuit);\n    }\n  }]);\n  return WebDriver;\n}();\n/**\n * Interface for navigating back and forth in the browser history.\n *\n * This class should never be instantiated directly. Instead, obtain an instance\n * with\n *\n *    webdriver.navigate()\n *\n * @see WebDriver#navigate()\n */\nvar Navigation = /*#__PURE__*/function () {\n  /**\n   * @param {!WebDriver} driver The parent driver.\n   * @private\n   */\n  function Navigation(driver) {\n    _classCallCheck(this, Navigation);\n    /** @private {!WebDriver} */\n    this.driver_ = driver;\n  }\n\n  /**\n   * Navigates to a new URL.\n   *\n   * @param {string} url The URL to navigate to.\n   * @return {!Promise<void>} A promise that will be resolved when the URL\n   *     has been loaded.\n   */\n  _createClass(Navigation, [{\n    key: \"to\",\n    value: function to(url) {\n      return this.driver_.execute(new command.Command(command.Name.GET).setParameter('url', url));\n    }\n\n    /**\n     * Moves backwards in the browser history.\n     *\n     * @return {!Promise<void>} A promise that will be resolved when the\n     *     navigation event has completed.\n     */\n  }, {\n    key: \"back\",\n    value: function back() {\n      return this.driver_.execute(new command.Command(command.Name.GO_BACK));\n    }\n\n    /**\n     * Moves forwards in the browser history.\n     *\n     * @return {!Promise<void>} A promise that will be resolved when the\n     *     navigation event has completed.\n     */\n  }, {\n    key: \"forward\",\n    value: function forward() {\n      return this.driver_.execute(new command.Command(command.Name.GO_FORWARD));\n    }\n\n    /**\n     * Refreshes the current page.\n     *\n     * @return {!Promise<void>} A promise that will be resolved when the\n     *     navigation event has completed.\n     */\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      return this.driver_.execute(new command.Command(command.Name.REFRESH));\n    }\n  }]);\n  return Navigation;\n}();\n/**\n * Provides methods for managing browser and driver state.\n *\n * This class should never be instantiated directly. Instead, obtain an instance\n * with {@linkplain WebDriver#manage() webdriver.manage()}.\n */\nvar Options = /*#__PURE__*/function () {\n  /**\n   * @param {!WebDriver} driver The parent driver.\n   * @private\n   */\n  function Options(driver) {\n    _classCallCheck(this, Options);\n    /** @private {!WebDriver} */\n    this.driver_ = driver;\n  }\n\n  /**\n   * Adds a cookie.\n   *\n   * __Sample Usage:__\n   *\n   *     // Set a basic cookie.\n   *     driver.manage().addCookie({name: 'foo', value: 'bar'});\n   *\n   *     // Set a cookie that expires in 10 minutes.\n   *     let expiry = new Date(Date.now() + (10 * 60 * 1000));\n   *     driver.manage().addCookie({name: 'foo', value: 'bar', expiry});\n   *\n   *     // The cookie expiration may also be specified in seconds since epoch.\n   *     driver.manage().addCookie({\n   *       name: 'foo',\n   *       value: 'bar',\n   *       expiry: Math.floor(Date.now() / 1000)\n   *     });\n   *\n   * @param {!Options.Cookie} spec Defines the cookie to add.\n   * @return {!Promise<void>} A promise that will be resolved\n   *     when the cookie has been added to the page.\n   * @throws {error.InvalidArgumentError} if any of the cookie parameters are\n   *     invalid.\n   * @throws {TypeError} if `spec` is not a cookie object.\n   */\n  _createClass(Options, [{\n    key: \"addCookie\",\n    value: function addCookie(_ref5) {\n      var name = _ref5.name,\n        value = _ref5.value,\n        path = _ref5.path,\n        domain = _ref5.domain,\n        secure = _ref5.secure,\n        httpOnly = _ref5.httpOnly,\n        expiry = _ref5.expiry,\n        sameSite = _ref5.sameSite;\n      // We do not allow '=' or ';' in the name.\n      if (/[;=]/.test(name)) {\n        throw new error.InvalidArgumentError('Invalid cookie name \"' + name + '\"');\n      }\n\n      // We do not allow ';' in value.\n      if (/;/.test(value)) {\n        throw new error.InvalidArgumentError('Invalid cookie value \"' + value + '\"');\n      }\n      if (typeof expiry === 'number') {\n        expiry = Math.floor(expiry);\n      } else if (expiry instanceof Date) {\n        var date = /** @type {!Date} */expiry;\n        expiry = Math.floor(date.getTime() / 1000);\n      }\n      if (sameSite && !['Strict', 'Lax', 'None'].includes(sameSite)) {\n        throw new error.InvalidArgumentError(\"Invalid sameSite cookie value '\".concat(sameSite, \"'. It should be one of \\\"Lax\\\", \\\"Strict\\\" or \\\"None\\\"\"));\n      }\n      if (sameSite === 'None' && !secure) {\n        throw new error.InvalidArgumentError('Invalid cookie configuration: SameSite=None must be Secure');\n      }\n      return this.driver_.execute(new command.Command(command.Name.ADD_COOKIE).setParameter('cookie', {\n        name: name,\n        value: value,\n        path: path,\n        domain: domain,\n        secure: !!secure,\n        httpOnly: !!httpOnly,\n        expiry: expiry,\n        sameSite: sameSite\n      }));\n    }\n\n    /**\n     * Deletes all cookies visible to the current page.\n     *\n     * @return {!Promise<void>} A promise that will be resolved\n     *     when all cookies have been deleted.\n     */\n  }, {\n    key: \"deleteAllCookies\",\n    value: function deleteAllCookies() {\n      return this.driver_.execute(new command.Command(command.Name.DELETE_ALL_COOKIES));\n    }\n\n    /**\n     * Deletes the cookie with the given name. This command is a no-op if there is\n     * no cookie with the given name visible to the current page.\n     *\n     * @param {string} name The name of the cookie to delete.\n     * @return {!Promise<void>} A promise that will be resolved\n     *     when the cookie has been deleted.\n     */\n  }, {\n    key: \"deleteCookie\",\n    value: function deleteCookie(name) {\n      return this.driver_.execute(new command.Command(command.Name.DELETE_COOKIE).setParameter('name', name));\n    }\n\n    /**\n     * Retrieves all cookies visible to the current page. Each cookie will be\n     * returned as a JSON object as described by the WebDriver wire protocol.\n     *\n     * @return {!Promise<!Array<!Options.Cookie>>} A promise that will be\n     *     resolved with the cookies visible to the current browsing context.\n     */\n  }, {\n    key: \"getCookies\",\n    value: function getCookies() {\n      return this.driver_.execute(new command.Command(command.Name.GET_ALL_COOKIES));\n    }\n\n    /**\n     * Retrieves the cookie with the given name. Returns null if there is no such\n     * cookie. The cookie will be returned as a JSON object as described by the\n     * WebDriver wire protocol.\n     *\n     * @param {string} name The name of the cookie to retrieve.\n     * @return {!Promise<?Options.Cookie>} A promise that will be resolved\n     *     with the named cookie\n     * @throws {error.NoSuchCookieError} if there is no such cookie.\n     */\n  }, {\n    key: \"getCookie\",\n    value: function () {\n      var _getCookie = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28(name) {\n        var cookie, cookies, _iterator2, _step2, _cookie;\n        return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n          while (1) switch (_context28.prev = _context28.next) {\n            case 0:\n              _context28.prev = 0;\n              _context28.next = 3;\n              return this.driver_.execute(new command.Command(command.Name.GET_COOKIE).setParameter('name', name));\n            case 3:\n              cookie = _context28.sent;\n              return _context28.abrupt(\"return\", cookie);\n            case 7:\n              _context28.prev = 7;\n              _context28.t0 = _context28[\"catch\"](0);\n              if (!(!(_context28.t0 instanceof error.UnknownCommandError) && !(_context28.t0 instanceof error.UnsupportedOperationError))) {\n                _context28.next = 11;\n                break;\n              }\n              throw _context28.t0;\n            case 11:\n              _context28.next = 13;\n              return this.getCookies();\n            case 13:\n              cookies = _context28.sent;\n              _iterator2 = _createForOfIteratorHelper(cookies);\n              _context28.prev = 15;\n              _iterator2.s();\n            case 17:\n              if ((_step2 = _iterator2.n()).done) {\n                _context28.next = 23;\n                break;\n              }\n              _cookie = _step2.value;\n              if (!(_cookie && _cookie['name'] === name)) {\n                _context28.next = 21;\n                break;\n              }\n              return _context28.abrupt(\"return\", _cookie);\n            case 21:\n              _context28.next = 17;\n              break;\n            case 23:\n              _context28.next = 28;\n              break;\n            case 25:\n              _context28.prev = 25;\n              _context28.t1 = _context28[\"catch\"](15);\n              _iterator2.e(_context28.t1);\n            case 28:\n              _context28.prev = 28;\n              _iterator2.f();\n              return _context28.finish(28);\n            case 31:\n              return _context28.abrupt(\"return\", null);\n            case 32:\n            case \"end\":\n              return _context28.stop();\n          }\n        }, _callee28, this, [[0, 7], [15, 25, 28, 31]]);\n      }));\n      function getCookie(_x34) {\n        return _getCookie.apply(this, arguments);\n      }\n      return getCookie;\n    }()\n    /**\n     * Fetches the timeouts currently configured for the current session.\n     *\n     * @return {!Promise<{script: number,\n     *                             pageLoad: number,\n     *                             implicit: number}>} A promise that will be\n     *     resolved with the timeouts currently configured for the current\n     *     session.\n     * @see #setTimeouts()\n     */\n  }, {\n    key: \"getTimeouts\",\n    value: function getTimeouts() {\n      return this.driver_.execute(new command.Command(command.Name.GET_TIMEOUT));\n    }\n\n    /**\n     * Sets the timeout durations associated with the current session.\n     *\n     * The following timeouts are supported (all timeouts are specified in\n     * milliseconds):\n     *\n     * -  `implicit` specifies the maximum amount of time to wait for an element\n     *    locator to succeed when {@linkplain WebDriver#findElement locating}\n     *    {@linkplain WebDriver#findElements elements} on the page.\n     *    Defaults to 0 milliseconds.\n     *\n     * -  `pageLoad` specifies the maximum amount of time to wait for a page to\n     *    finishing loading. Defaults to 300000 milliseconds.\n     *\n     * -  `script` specifies the maximum amount of time to wait for an\n     *    {@linkplain WebDriver#executeScript evaluated script} to run. If set to\n     *    `null`, the script timeout will be indefinite.\n     *    Defaults to 30000 milliseconds.\n     *\n     * @param {{script: (number|null|undefined),\n     *          pageLoad: (number|null|undefined),\n     *          implicit: (number|null|undefined)}} conf\n     *     The desired timeout configuration.\n     * @return {!Promise<void>} A promise that will be resolved when the timeouts\n     *     have been set.\n     * @throws {!TypeError} if an invalid options object is provided.\n     * @see #getTimeouts()\n     * @see <https://w3c.github.io/webdriver/webdriver-spec.html#dfn-set-timeouts>\n     */\n  }, {\n    key: \"setTimeouts\",\n    value: function setTimeouts() {\n      var _this4 = this;\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        script = _ref6.script,\n        pageLoad = _ref6.pageLoad,\n        implicit = _ref6.implicit;\n      var cmd = new command.Command(command.Name.SET_TIMEOUT);\n      var valid = false;\n      function setParam(key, value) {\n        if (value === null || typeof value === 'number') {\n          valid = true;\n          cmd.setParameter(key, value);\n        } else if (typeof value !== 'undefined') {\n          throw TypeError('invalid timeouts configuration:' + \" expected \\\"\".concat(key, \"\\\" to be a number, got \").concat(typeof value));\n        }\n      }\n      setParam('implicit', implicit);\n      setParam('pageLoad', pageLoad);\n      setParam('script', script);\n      if (valid) {\n        return this.driver_.execute(cmd).catch(function () {\n          // Fallback to the legacy method.\n          var cmds = [];\n          if (typeof script === 'number') {\n            cmds.push(legacyTimeout(_this4.driver_, 'script', script));\n          }\n          if (typeof implicit === 'number') {\n            cmds.push(legacyTimeout(_this4.driver_, 'implicit', implicit));\n          }\n          if (typeof pageLoad === 'number') {\n            cmds.push(legacyTimeout(_this4.driver_, 'page load', pageLoad));\n          }\n          return Promise.all(cmds);\n        });\n      }\n      throw TypeError('no timeouts specified');\n    }\n\n    /**\n     * @return {!Logs} The interface for managing driver logs.\n     */\n  }, {\n    key: \"logs\",\n    value: function logs() {\n      return new Logs(this.driver_);\n    }\n\n    /**\n     * @return {!Window} The interface for managing the current window.\n     */\n  }, {\n    key: \"window\",\n    value: function window() {\n      return new Window(this.driver_);\n    }\n  }]);\n  return Options;\n}();\n/**\n * @param {!WebDriver} driver\n * @param {string} type\n * @param {number} ms\n * @return {!Promise<void>}\n */\nfunction legacyTimeout(driver, type, ms) {\n  return driver.execute(new command.Command(command.Name.SET_TIMEOUT).setParameter('type', type).setParameter('ms', ms));\n}\n\n/**\n * A record object describing a browser cookie.\n *\n * @record\n */\nOptions.Cookie = function () {};\n\n/**\n * The name of the cookie.\n *\n * @type {string}\n */\nOptions.Cookie.prototype.name;\n\n/**\n * The cookie value.\n *\n * @type {string}\n */\nOptions.Cookie.prototype.value;\n\n/**\n * The cookie path. Defaults to \"/\" when adding a cookie.\n *\n * @type {(string|undefined)}\n */\nOptions.Cookie.prototype.path;\n\n/**\n * The domain the cookie is visible to. Defaults to the current browsing\n * context's document's URL when adding a cookie.\n *\n * @type {(string|undefined)}\n */\nOptions.Cookie.prototype.domain;\n\n/**\n * Whether the cookie is a secure cookie. Defaults to false when adding a new\n * cookie.\n *\n * @type {(boolean|undefined)}\n */\nOptions.Cookie.prototype.secure;\n\n/**\n * Whether the cookie is an HTTP only cookie. Defaults to false when adding a\n * new cookie.\n *\n * @type {(boolean|undefined)}\n */\nOptions.Cookie.prototype.httpOnly;\n\n/**\n * When the cookie expires.\n *\n * When {@linkplain Options#addCookie() adding a cookie}, this may be specified\n * as a {@link Date} object, or in _seconds_ since Unix epoch (January 1, 1970).\n *\n * The expiry is always returned in seconds since epoch when\n * {@linkplain Options#getCookies() retrieving cookies} from the browser.\n *\n * @type {(!Date|number|undefined)}\n */\nOptions.Cookie.prototype.expiry;\n\n/**\n * When the cookie applies to a SameSite policy.\n *\n * When {@linkplain Options#addCookie() adding a cookie}, this may be specified\n * as a {@link string} object which is one of 'Lax', 'Strict' or 'None'.\n *\n *\n * @type {(string|undefined)}\n */\nOptions.Cookie.prototype.sameSite;\n\n/**\n * An interface for managing the current window.\n *\n * This class should never be instantiated directly. Instead, obtain an instance\n * with\n *\n *    webdriver.manage().window()\n *\n * @see WebDriver#manage()\n * @see Options#window()\n */\nvar Window = /*#__PURE__*/function () {\n  /**\n   * @param {!WebDriver} driver The parent driver.\n   * @private\n   */\n  function Window(driver) {\n    _classCallCheck(this, Window);\n    /** @private {!WebDriver} */\n    this.driver_ = driver;\n  }\n\n  /**\n   * Retrieves a rect describing the current top-level window's size and\n   * position.\n   *\n   * @return {!Promise<{x: number, y: number, width: number, height: number}>}\n   *     A promise that will resolve to the window rect of the current window.\n   */\n  _createClass(Window, [{\n    key: \"getRect\",\n    value: function getRect() {\n      return this.driver_.execute(new command.Command(command.Name.GET_WINDOW_RECT));\n    }\n\n    /**\n     * Sets the current top-level window's size and position. You may update just\n     * the size by omitting `x` & `y`, or just the position by omitting\n     * `width` & `height` options.\n     *\n     * @param {{x: (number|undefined),\n     *          y: (number|undefined),\n     *          width: (number|undefined),\n     *          height: (number|undefined)}} options\n     *     The desired window size and position.\n     * @return {!Promise<{x: number, y: number, width: number, height: number}>}\n     *     A promise that will resolve to the current window's updated window\n     *     rect.\n     */\n  }, {\n    key: \"setRect\",\n    value: function setRect(_ref7) {\n      var x = _ref7.x,\n        y = _ref7.y,\n        width = _ref7.width,\n        height = _ref7.height;\n      return this.driver_.execute(new command.Command(command.Name.SET_WINDOW_RECT).setParameters({\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      }));\n    }\n\n    /**\n     * Maximizes the current window. The exact behavior of this command is\n     * specific to individual window managers, but typically involves increasing\n     * the window to the maximum available size without going full-screen.\n     *\n     * @return {!Promise<void>} A promise that will be resolved when the command\n     *     has completed.\n     */\n  }, {\n    key: \"maximize\",\n    value: function maximize() {\n      return this.driver_.execute(new command.Command(command.Name.MAXIMIZE_WINDOW).setParameter('windowHandle', 'current'));\n    }\n\n    /**\n     * Minimizes the current window. The exact behavior of this command is\n     * specific to individual window managers, but typically involves hiding\n     * the window in the system tray.\n     *\n     * @return {!Promise<void>} A promise that will be resolved when the command\n     *     has completed.\n     */\n  }, {\n    key: \"minimize\",\n    value: function minimize() {\n      return this.driver_.execute(new command.Command(command.Name.MINIMIZE_WINDOW));\n    }\n\n    /**\n     * Invokes the \"full screen\" operation on the current window. The exact\n     * behavior of this command is specific to individual window managers, but\n     * this will typically increase the window size to the size of the physical\n     * display and hide the browser chrome.\n     *\n     * @return {!Promise<void>} A promise that will be resolved when the command\n     *     has completed.\n     * @see <https://fullscreen.spec.whatwg.org/#fullscreen-an-element>\n     */\n  }, {\n    key: \"fullscreen\",\n    value: function fullscreen() {\n      return this.driver_.execute(new command.Command(command.Name.FULLSCREEN_WINDOW));\n    }\n\n    /**\n     * Gets the width and height of the current window\n     * @param windowHandle\n     * @returns {Promise<{width: *, height: *}>}\n     */\n  }, {\n    key: \"getSize\",\n    value: function () {\n      var _getSize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29() {\n        var windowHandle,\n          rect,\n          _args29 = arguments;\n        return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n          while (1) switch (_context29.prev = _context29.next) {\n            case 0:\n              windowHandle = _args29.length > 0 && _args29[0] !== undefined ? _args29[0] : 'current';\n              if (windowHandle !== 'current') {\n                console.warn(\"Only 'current' window is supported for W3C compatible browsers.\");\n              }\n              _context29.next = 4;\n              return this.getRect();\n            case 4:\n              rect = _context29.sent;\n              return _context29.abrupt(\"return\", {\n                height: rect.height,\n                width: rect.width\n              });\n            case 6:\n            case \"end\":\n              return _context29.stop();\n          }\n        }, _callee29, this);\n      }));\n      function getSize() {\n        return _getSize.apply(this, arguments);\n      }\n      return getSize;\n    }()\n    /**\n     * Sets the width and height of the current window. (window.resizeTo)\n     * @param x\n     * @param y\n     * @param width\n     * @param height\n     * @param windowHandle\n     * @returns {Promise<void>}\n     */\n  }, {\n    key: \"setSize\",\n    value: function () {\n      var _setSize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee30(_ref8) {\n        var _ref8$x,\n          x,\n          _ref8$y,\n          y,\n          _ref8$width,\n          width,\n          _ref8$height,\n          height,\n          windowHandle,\n          _args30 = arguments;\n        return _regeneratorRuntime().wrap(function _callee30$(_context30) {\n          while (1) switch (_context30.prev = _context30.next) {\n            case 0:\n              _ref8$x = _ref8.x, x = _ref8$x === void 0 ? 0 : _ref8$x, _ref8$y = _ref8.y, y = _ref8$y === void 0 ? 0 : _ref8$y, _ref8$width = _ref8.width, width = _ref8$width === void 0 ? 0 : _ref8$width, _ref8$height = _ref8.height, height = _ref8$height === void 0 ? 0 : _ref8$height;\n              windowHandle = _args30.length > 1 && _args30[1] !== undefined ? _args30[1] : 'current';\n              if (windowHandle !== 'current') {\n                console.warn(\"Only 'current' window is supported for W3C compatible browsers.\");\n              }\n              _context30.next = 5;\n              return this.setRect({\n                x: x,\n                y: y,\n                width: width,\n                height: height\n              });\n            case 5:\n            case \"end\":\n              return _context30.stop();\n          }\n        }, _callee30, this);\n      }));\n      function setSize(_x35) {\n        return _setSize.apply(this, arguments);\n      }\n      return setSize;\n    }()\n  }]);\n  return Window;\n}();\n/**\n * Interface for managing WebDriver log records.\n *\n * This class should never be instantiated directly. Instead, obtain an\n * instance with\n *\n *     webdriver.manage().logs()\n *\n * @see WebDriver#manage()\n * @see Options#logs()\n */\nvar Logs = /*#__PURE__*/function () {\n  /**\n   * @param {!WebDriver} driver The parent driver.\n   * @private\n   */\n  function Logs(driver) {\n    _classCallCheck(this, Logs);\n    /** @private {!WebDriver} */\n    this.driver_ = driver;\n  }\n\n  /**\n   * Fetches available log entries for the given type.\n   *\n   * Note that log buffers are reset after each call, meaning that available\n   * log entries correspond to those entries not yet returned for a given log\n   * type. In practice, this means that this call will return the available log\n   * entries since the last call, or from the start of the session.\n   *\n   * @param {!logging.Type} type The desired log type.\n   * @return {!Promise<!Array.<!logging.Entry>>} A\n   *   promise that will resolve to a list of log entries for the specified\n   *   type.\n   */\n  _createClass(Logs, [{\n    key: \"get\",\n    value: function get(type) {\n      var cmd = new command.Command(command.Name.GET_LOG).setParameter('type', type);\n      return this.driver_.execute(cmd).then(function (entries) {\n        return entries.map(function (entry) {\n          if (!(entry instanceof logging.Entry)) {\n            return new logging.Entry(entry['level'], entry['message'], entry['timestamp'], entry['type']);\n          }\n          return entry;\n        });\n      });\n    }\n\n    /**\n     * Retrieves the log types available to this driver.\n     * @return {!Promise<!Array<!logging.Type>>} A\n     *     promise that will resolve to a list of available log types.\n     */\n  }, {\n    key: \"getAvailableLogTypes\",\n    value: function getAvailableLogTypes() {\n      return this.driver_.execute(new command.Command(command.Name.GET_AVAILABLE_LOG_TYPES));\n    }\n  }]);\n  return Logs;\n}();\n/**\n * An interface for changing the focus of the driver to another frame or window.\n *\n * This class should never be instantiated directly. Instead, obtain an\n * instance with\n *\n *     webdriver.switchTo()\n *\n * @see WebDriver#switchTo()\n */\nvar TargetLocator = /*#__PURE__*/function () {\n  /**\n   * @param {!WebDriver} driver The parent driver.\n   * @private\n   */\n  function TargetLocator(driver) {\n    _classCallCheck(this, TargetLocator);\n    /** @private {!WebDriver} */\n    this.driver_ = driver;\n  }\n\n  /**\n   * Locates the DOM element on the current page that corresponds to\n   * `document.activeElement` or `document.body` if the active element is not\n   * available.\n   *\n   * @return {!WebElementPromise} The active element.\n   */\n  _createClass(TargetLocator, [{\n    key: \"activeElement\",\n    value: function activeElement() {\n      var id = this.driver_.execute(new command.Command(command.Name.GET_ACTIVE_ELEMENT));\n      return new WebElementPromise(this.driver_, id);\n    }\n\n    /**\n     * Switches focus of all future commands to the topmost frame in the current\n     * window.\n     *\n     * @return {!Promise<void>} A promise that will be resolved\n     *     when the driver has changed focus to the default content.\n     */\n  }, {\n    key: \"defaultContent\",\n    value: function defaultContent() {\n      return this.driver_.execute(new command.Command(command.Name.SWITCH_TO_FRAME).setParameter('id', null));\n    }\n\n    /**\n     * Changes the focus of all future commands to another frame on the page. The\n     * target frame may be specified as one of the following:\n     *\n     * - A number that specifies a (zero-based) index into [window.frames](\n     *   https://developer.mozilla.org/en-US/docs/Web/API/Window.frames).\n     * - A {@link WebElement} reference, which correspond to a `frame` or `iframe`\n     *   DOM element.\n     * - The `null` value, to select the topmost frame on the page. Passing `null`\n     *   is the same as calling {@link #defaultContent defaultContent()}.\n     *\n     * If the specified frame can not be found, the returned promise will be\n     * rejected with a {@linkplain error.NoSuchFrameError}.\n     *\n     * @param {(number|string|WebElement|null)} id The frame locator.\n     * @return {!Promise<void>} A promise that will be resolved\n     *     when the driver has changed focus to the specified frame.\n     */\n  }, {\n    key: \"frame\",\n    value: function frame(id) {\n      var _this5 = this;\n      var frameReference = id;\n      if (typeof id === 'string') {\n        frameReference = this.driver_.findElement({\n          id: id\n        }).catch(function (_) {\n          return _this5.driver_.findElement({\n            name: id\n          });\n        });\n      }\n      return this.driver_.execute(new command.Command(command.Name.SWITCH_TO_FRAME).setParameter('id', frameReference));\n    }\n\n    /**\n     * Changes the focus of all future commands to the parent frame of the\n     * currently selected frame. This command has no effect if the driver is\n     * already focused on the top-level browsing context.\n     *\n     * @return {!Promise<void>} A promise that will be resolved when the command\n     *     has completed.\n     */\n  }, {\n    key: \"parentFrame\",\n    value: function parentFrame() {\n      return this.driver_.execute(new command.Command(command.Name.SWITCH_TO_FRAME_PARENT));\n    }\n\n    /**\n     * Changes the focus of all future commands to another window. Windows may be\n     * specified by their {@code window.name} attribute or by its handle\n     * (as returned by {@link WebDriver#getWindowHandles}).\n     *\n     * If the specified window cannot be found, the returned promise will be\n     * rejected with a {@linkplain error.NoSuchWindowError}.\n     *\n     * @param {string} nameOrHandle The name or window handle of the window to\n     *     switch focus to.\n     * @return {!Promise<void>} A promise that will be resolved\n     *     when the driver has changed focus to the specified window.\n     */\n  }, {\n    key: \"window\",\n    value: function window(nameOrHandle) {\n      return this.driver_.execute(new command.Command(command.Name.SWITCH_TO_WINDOW)\n      // \"name\" supports the legacy drivers. \"handle\" is the W3C\n      // compliant parameter.\n      .setParameter('name', nameOrHandle).setParameter('handle', nameOrHandle));\n    }\n\n    /**\n     * Creates a new browser window and switches the focus for future\n     * commands of this driver to the new window.\n     *\n     * @param {string} typeHint 'window' or 'tab'. The created window is not\n     *     guaranteed to be of the requested type; if the driver does not support\n     *     the requested type, a new browser window will be created of whatever type\n     *     the driver does support.\n     * @return {!Promise<void>} A promise that will be resolved\n     *     when the driver has changed focus to the new window.\n     */\n  }, {\n    key: \"newWindow\",\n    value: function newWindow(typeHint) {\n      var driver = this.driver_;\n      return this.driver_.execute(new command.Command(command.Name.SWITCH_TO_NEW_WINDOW).setParameter('type', typeHint)).then(function (response) {\n        return driver.switchTo().window(response.handle);\n      });\n    }\n\n    /**\n     * Changes focus to the active modal dialog, such as those opened by\n     * `window.alert()`, `window.confirm()`, and `window.prompt()`. The returned\n     * promise will be rejected with a\n     * {@linkplain error.NoSuchAlertError} if there are no open alerts.\n     *\n     * @return {!AlertPromise} The open alert.\n     */\n  }, {\n    key: \"alert\",\n    value: function alert() {\n      var text = this.driver_.execute(new command.Command(command.Name.GET_ALERT_TEXT));\n      var driver = this.driver_;\n      return new AlertPromise(driver, text.then(function (text) {\n        return new Alert(driver, text);\n      }));\n    }\n  }]);\n  return TargetLocator;\n}(); //////////////////////////////////////////////////////////////////////////////\n//\n//  WebElement\n//\n//////////////////////////////////////////////////////////////////////////////\nvar LEGACY_ELEMENT_ID_KEY = 'ELEMENT';\nvar ELEMENT_ID_KEY = 'element-6066-11e4-a52e-4f735466cecf';\nvar SHADOW_ROOT_ID_KEY = 'shadow-6066-11e4-a52e-4f735466cecf';\n\n/**\n * Represents a DOM element. WebElements can be found by searching from the\n * document root using a {@link WebDriver} instance, or by searching\n * under another WebElement:\n *\n *     driver.get('http://www.google.com');\n *     var searchForm = driver.findElement(By.tagName('form'));\n *     var searchBox = searchForm.findElement(By.name('q'));\n *     searchBox.sendKeys('webdriver');\n */\nvar WebElement = /*#__PURE__*/function (_Symbols$serialize) {\n  /**\n   * @param {!WebDriver} driver the parent WebDriver instance for this element.\n   * @param {(!IThenable<string>|string)} id The server-assigned opaque ID for\n   *     the underlying DOM element.\n   */\n  function WebElement(driver, id) {\n    _classCallCheck(this, WebElement);\n    /** @private {!WebDriver} */\n    this.driver_ = driver;\n\n    /** @private {!Promise<string>} */\n    this.id_ = Promise.resolve(id);\n  }\n\n  /**\n   * @param {string} id The raw ID.\n   * @param {boolean=} noLegacy Whether to exclude the legacy element key.\n   * @return {!Object} The element ID for use with WebDriver's wire protocol.\n   */\n  _createClass(WebElement, [{\n    key: \"getDriver\",\n    value: /** @return {!WebDriver} The parent driver for this instance. */\n    function getDriver() {\n      return this.driver_;\n    }\n\n    /**\n     * @return {!Promise<string>} A promise that resolves to\n     *     the server-assigned opaque ID assigned to this element.\n     */\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return this.id_;\n    }\n\n    /**\n     * @return {!Object} Returns the serialized representation of this WebElement.\n     */\n  }, {\n    key: _Symbols$serialize,\n    value: function value() {\n      return this.getId().then(WebElement.buildId);\n    }\n\n    /**\n     * Schedules a command that targets this element with the parent WebDriver\n     * instance. Will ensure this element's ID is included in the command\n     * parameters under the \"id\" key.\n     *\n     * @param {!command.Command} command The command to schedule.\n     * @return {!Promise<T>} A promise that will be resolved with the result.\n     * @template T\n     * @see WebDriver#schedule\n     * @private\n     */\n  }, {\n    key: \"execute_\",\n    value: function execute_(command) {\n      command.setParameter('id', this);\n      return this.driver_.execute(command);\n    }\n\n    /**\n     * Schedule a command to find a descendant of this element. If the element\n     * cannot be found, the returned promise will be rejected with a\n     * {@linkplain error.NoSuchElementError NoSuchElementError}.\n     *\n     * The search criteria for an element may be defined using one of the static\n     * factories on the {@link by.By} class, or as a short-hand\n     * {@link ./by.ByHash} object. For example, the following two statements\n     * are equivalent:\n     *\n     *     var e1 = element.findElement(By.id('foo'));\n     *     var e2 = element.findElement({id:'foo'});\n     *\n     * You may also provide a custom locator function, which takes as input this\n     * instance and returns a {@link WebElement}, or a promise that will resolve\n     * to a WebElement. If the returned promise resolves to an array of\n     * WebElements, WebDriver will use the first element. For example, to find the\n     * first visible link on a page, you could write:\n     *\n     *     var link = element.findElement(firstVisibleLink);\n     *\n     *     function firstVisibleLink(element) {\n     *       var links = element.findElements(By.tagName('a'));\n     *       return promise.filter(links, function(link) {\n     *         return link.isDisplayed();\n     *       });\n     *     }\n     *\n     * @param {!(by.By|Function)} locator The locator strategy to use when\n     *     searching for the element.\n     * @return {!WebElementPromise} A WebElement that can be used to issue\n     *     commands against the located element. If the element is not found, the\n     *     element will be invalidated and all scheduled commands aborted.\n     */\n  }, {\n    key: \"findElement\",\n    value: function findElement(locator) {\n      locator = by.checkedLocator(locator);\n      var id;\n      if (typeof locator === 'function') {\n        id = this.driver_.findElementInternal_(locator, this);\n      } else {\n        var cmd = new command.Command(command.Name.FIND_CHILD_ELEMENT).setParameter('using', locator.using).setParameter('value', locator.value);\n        id = this.execute_(cmd);\n      }\n      return new WebElementPromise(this.driver_, id);\n    }\n\n    /**\n     * Locates all the descendants of this element that match the given search\n     * criteria.\n     *\n     * @param {!(by.By|Function)} locator The locator strategy to use when\n     *     searching for the element.\n     * @return {!Promise<!Array<!WebElement>>} A promise that will resolve to an\n     *     array of WebElements.\n     */\n  }, {\n    key: \"findElements\",\n    value: function () {\n      var _findElements2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee31(locator) {\n        var cmd, result;\n        return _regeneratorRuntime().wrap(function _callee31$(_context31) {\n          while (1) switch (_context31.prev = _context31.next) {\n            case 0:\n              locator = by.checkedLocator(locator);\n              if (!(typeof locator === 'function')) {\n                _context31.next = 5;\n                break;\n              }\n              return _context31.abrupt(\"return\", this.driver_.findElementsInternal_(locator, this));\n            case 5:\n              cmd = new command.Command(command.Name.FIND_CHILD_ELEMENTS).setParameter('using', locator.using).setParameter('value', locator.value);\n              _context31.next = 8;\n              return this.execute_(cmd);\n            case 8:\n              result = _context31.sent;\n              return _context31.abrupt(\"return\", Array.isArray(result) ? result : []);\n            case 10:\n            case \"end\":\n              return _context31.stop();\n          }\n        }, _callee31, this);\n      }));\n      function findElements(_x36) {\n        return _findElements2.apply(this, arguments);\n      }\n      return findElements;\n    }()\n    /**\n     * Clicks on this element.\n     *\n     * @return {!Promise<void>} A promise that will be resolved when the click\n     *     command has completed.\n     */\n  }, {\n    key: \"click\",\n    value: function click() {\n      return this.execute_(new command.Command(command.Name.CLICK_ELEMENT));\n    }\n\n    /**\n     * Types a key sequence on the DOM element represented by this instance.\n     *\n     * Modifier keys (SHIFT, CONTROL, ALT, META) are stateful; once a modifier is\n     * processed in the key sequence, that key state is toggled until one of the\n     * following occurs:\n     *\n     * - The modifier key is encountered again in the sequence. At this point the\n     *   state of the key is toggled (along with the appropriate keyup/down\n     *   events).\n     * - The {@link input.Key.NULL} key is encountered in the sequence. When\n     *   this key is encountered, all modifier keys current in the down state are\n     *   released (with accompanying keyup events). The NULL key can be used to\n     *   simulate common keyboard shortcuts:\n     *\n     *         element.sendKeys(\"text was\",\n     *                          Key.CONTROL, \"a\", Key.NULL,\n     *                          \"now text is\");\n     *         // Alternatively:\n     *         element.sendKeys(\"text was\",\n     *                          Key.chord(Key.CONTROL, \"a\"),\n     *                          \"now text is\");\n     *\n     * - The end of the key sequence is encountered. When there are no more keys\n     *   to type, all depressed modifier keys are released (with accompanying\n     *   keyup events).\n     *\n     * If this element is a file input ({@code <input type=\"file\">}), the\n     * specified key sequence should specify the path to the file to attach to\n     * the element. This is analogous to the user clicking \"Browse...\" and entering\n     * the path into the file select dialog.\n     *\n     *     var form = driver.findElement(By.css('form'));\n     *     var element = form.findElement(By.css('input[type=file]'));\n     *     element.sendKeys('/path/to/file.txt');\n     *     form.submit();\n     *\n     * For uploads to function correctly, the entered path must reference a file\n     * on the _browser's_ machine, not the local machine running this script. When\n     * running against a remote Selenium server, a {@link input.FileDetector}\n     * may be used to transparently copy files to the remote machine before\n     * attempting to upload them in the browser.\n     *\n     * __Note:__ On browsers where native keyboard events are not supported\n     * (e.g. Firefox on OS X), key events will be synthesized. Special\n     * punctuation keys will be synthesized according to a standard QWERTY en-us\n     * keyboard layout.\n     *\n     * @param {...(number|string|!IThenable<(number|string)>)} args The\n     *     sequence of keys to type. Number keys may be referenced numerically or\n     *     by string (1 or '1'). All arguments will be joined into a single\n     *     sequence.\n     * @return {!Promise<void>} A promise that will be resolved when all keys\n     *     have been typed.\n     */\n  }, {\n    key: \"sendKeys\",\n    value: function () {\n      var _sendKeys = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee32() {\n        var keys,\n          _len3,\n          args,\n          _key3,\n          _args32 = arguments;\n        return _regeneratorRuntime().wrap(function _callee32$(_context32) {\n          while (1) switch (_context32.prev = _context32.next) {\n            case 0:\n              keys = [];\n              for (_len3 = _args32.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = _args32[_key3];\n              }\n              _context32.next = 4;\n              return Promise.all(args);\n            case 4:\n              _context32.sent.forEach(function (key) {\n                var _keys;\n                var type = typeof key;\n                if (type === 'number') {\n                  key = String(key);\n                } else if (type !== 'string') {\n                  throw TypeError('each key must be a number or string; got ' + type);\n                }\n\n                // The W3C protocol requires keys to be specified as an array where\n                // each element is a single key.\n                (_keys = keys).push.apply(_keys, _toConsumableArray(key));\n              });\n              if (this.driver_.fileDetector_) {\n                _context32.next = 7;\n                break;\n              }\n              return _context32.abrupt(\"return\", this.execute_(new command.Command(command.Name.SEND_KEYS_TO_ELEMENT).setParameter('text', keys.join('')).setParameter('value', keys)));\n            case 7:\n              _context32.prev = 7;\n              _context32.next = 10;\n              return this.driver_.fileDetector_.handleFile(this.driver_, keys.join(''));\n            case 10:\n              keys = _context32.sent;\n              _context32.next = 16;\n              break;\n            case 13:\n              _context32.prev = 13;\n              _context32.t0 = _context32[\"catch\"](7);\n              console.log('Error trying parse string as a file with file detector; sending keys instead' + _context32.t0);\n            case 16:\n              return _context32.abrupt(\"return\", this.execute_(new command.Command(command.Name.SEND_KEYS_TO_ELEMENT).setParameter('text', keys).setParameter('value', keys.split(''))));\n            case 17:\n            case \"end\":\n              return _context32.stop();\n          }\n        }, _callee32, this, [[7, 13]]);\n      }));\n      function sendKeys() {\n        return _sendKeys.apply(this, arguments);\n      }\n      return sendKeys;\n    }()\n    /**\n     * Retrieves the element's tag name.\n     *\n     * @return {!Promise<string>} A promise that will be resolved with the\n     *     element's tag name.\n     */\n  }, {\n    key: \"getTagName\",\n    value: function getTagName() {\n      return this.execute_(new command.Command(command.Name.GET_ELEMENT_TAG_NAME));\n    }\n\n    /**\n     * Retrieves the value of a computed style property for this instance. If\n     * the element inherits the named style from its parent, the parent will be\n     * queried for its value.  Where possible, color values will be converted to\n     * their hex representation (e.g. #00ff00 instead of rgb(0, 255, 0)).\n     *\n     * _Warning:_ the value returned will be as the browser interprets it, so\n     * it may be tricky to form a proper assertion.\n     *\n     * @param {string} cssStyleProperty The name of the CSS style property to look\n     *     up.\n     * @return {!Promise<string>} A promise that will be resolved with the\n     *     requested CSS value.\n     */\n  }, {\n    key: \"getCssValue\",\n    value: function getCssValue(cssStyleProperty) {\n      var name = command.Name.GET_ELEMENT_VALUE_OF_CSS_PROPERTY;\n      return this.execute_(new command.Command(name).setParameter('propertyName', cssStyleProperty));\n    }\n\n    /**\n     * Retrieves the current value of the given attribute of this element.\n     * Will return the current value, even if it has been modified after the page\n     * has been loaded. More exactly, this method will return the value\n     * of the given attribute, unless that attribute is not present, in which case\n     * the value of the property with the same name is returned. If neither value\n     * is set, null is returned (for example, the \"value\" property of a textarea\n     * element). The \"style\" attribute is converted as best can be to a\n     * text representation with a trailing semicolon. The following are deemed to\n     * be \"boolean\" attributes and will return either \"true\" or null:\n     *\n     * async, autofocus, autoplay, checked, compact, complete, controls, declare,\n     * defaultchecked, defaultselected, defer, disabled, draggable, ended,\n     * formnovalidate, hidden, indeterminate, iscontenteditable, ismap, itemscope,\n     * loop, multiple, muted, nohref, noresize, noshade, novalidate, nowrap, open,\n     * paused, pubdate, readonly, required, reversed, scoped, seamless, seeking,\n     * selected, spellcheck, truespeed, willvalidate\n     *\n     * Finally, the following commonly mis-capitalized attribute/property names\n     * are evaluated as expected:\n     *\n     * - \"class\"\n     * - \"readonly\"\n     *\n     * @param {string} attributeName The name of the attribute to query.\n     * @return {!Promise<?string>} A promise that will be\n     *     resolved with the attribute's value. The returned value will always be\n     *     either a string or null.\n     */\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(attributeName) {\n      return this.execute_(new command.Command(command.Name.GET_ELEMENT_ATTRIBUTE).setParameter('name', attributeName));\n    }\n\n    /**\n     * Get the value of the given attribute of the element.\n     * <p>\n     * This method, unlike {@link #getAttribute(String)}, returns the value of the attribute with the\n     * given name but not the property with the same name.\n     * <p>\n     * The following are deemed to be \"boolean\" attributes, and will return either \"true\" or null:\n     * <p>\n     * async, autofocus, autoplay, checked, compact, complete, controls, declare, defaultchecked,\n     * defaultselected, defer, disabled, draggable, ended, formnovalidate, hidden, indeterminate,\n     * iscontenteditable, ismap, itemscope, loop, multiple, muted, nohref, noresize, noshade,\n     * novalidate, nowrap, open, paused, pubdate, readonly, required, reversed, scoped, seamless,\n     * seeking, selected, truespeed, willvalidate\n     * <p>\n     * See <a href=\"https://w3c.github.io/webdriver/#get-element-attribute\">W3C WebDriver specification</a>\n     * for more details.\n     *\n     * @param attributeName The name of the attribute.\n     * @return The attribute's value or null if the value is not set.\n     */\n  }, {\n    key: \"getDomAttribute\",\n    value: function getDomAttribute(attributeName) {\n      return this.execute_(new command.Command(command.Name.GET_DOM_ATTRIBUTE).setParameter('name', attributeName));\n    }\n\n    /**\n     * Get the given property of the referenced web element\n     * @param {string} propertyName The name of the attribute to query.\n     * @return {!Promise<string>} A promise that will be\n     *     resolved with the element's property value\n     */\n  }, {\n    key: \"getProperty\",\n    value: function getProperty(propertyName) {\n      return this.execute_(new command.Command(command.Name.GET_ELEMENT_PROPERTY).setParameter('name', propertyName));\n    }\n\n    /**\n     * Get the shadow root of the current web element.\n     * @returns {!Promise<ShadowRoot>} A promise that will be\n     *      resolved with the elements shadow root or rejected\n     *      with {@link NoSuchShadowRootError}\n     */\n  }, {\n    key: \"getShadowRoot\",\n    value: function getShadowRoot() {\n      return this.execute_(new command.Command(command.Name.GET_SHADOW_ROOT));\n    }\n\n    /**\n     * Get the visible (i.e. not hidden by CSS) innerText of this element,\n     * including sub-elements, without any leading or trailing whitespace.\n     *\n     * @return {!Promise<string>} A promise that will be\n     *     resolved with the element's visible text.\n     */\n  }, {\n    key: \"getText\",\n    value: function getText() {\n      return this.execute_(new command.Command(command.Name.GET_ELEMENT_TEXT));\n    }\n\n    /**\n     * Get the computed WAI-ARIA role of element.\n     *\n     * @return {!Promise<string>} A promise that will be\n     *     resolved with the element's computed role.\n     */\n  }, {\n    key: \"getAriaRole\",\n    value: function getAriaRole() {\n      return this.execute_(new command.Command(command.Name.GET_COMPUTED_ROLE));\n    }\n\n    /**\n     * Get the computed WAI-ARIA label of element.\n     *\n     * @return {!Promise<string>} A promise that will be\n     *     resolved with the element's computed label.\n     */\n  }, {\n    key: \"getAccessibleName\",\n    value: function getAccessibleName() {\n      return this.execute_(new command.Command(command.Name.GET_COMPUTED_LABEL));\n    }\n    /**\n     * Returns an object describing an element's location, in pixels relative to\n     * the document element, and the element's size in pixels.\n     *\n     * @return {!Promise<{width: number, height: number, x: number, y: number}>}\n     *     A promise that will resolve with the element's rect.\n     */\n  }, {\n    key: \"getRect\",\n    value: function getRect() {\n      return this.execute_(new command.Command(command.Name.GET_ELEMENT_RECT));\n    }\n\n    /**\n     * Tests whether this element is enabled, as dictated by the `disabled`\n     * attribute.\n     *\n     * @return {!Promise<boolean>} A promise that will be\n     *     resolved with whether this element is currently enabled.\n     */\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.execute_(new command.Command(command.Name.IS_ELEMENT_ENABLED));\n    }\n\n    /**\n     * Tests whether this element is selected.\n     *\n     * @return {!Promise<boolean>} A promise that will be\n     *     resolved with whether this element is currently selected.\n     */\n  }, {\n    key: \"isSelected\",\n    value: function isSelected() {\n      return this.execute_(new command.Command(command.Name.IS_ELEMENT_SELECTED));\n    }\n\n    /**\n     * Submits the form containing this element (or this element if it is itself\n     * a FORM element). his command is a no-op if the element is not contained in\n     * a form.\n     *\n     * @return {!Promise<void>} A promise that will be resolved\n     *     when the form has been submitted.\n     */\n  }, {\n    key: \"submit\",\n    value: function submit() {\n      var script = '/* submitForm */var form = arguments[0];\\n' + 'while (form.nodeName != \"FORM\" && form.parentNode) {\\n' + '  form = form.parentNode;\\n' + '}\\n' + \"if (!form) { throw Error('Unable to find containing form element'); }\\n\" + \"if (!form.ownerDocument) { throw Error('Unable to find owning document'); }\\n\" + \"var e = form.ownerDocument.createEvent('Event');\\n\" + \"e.initEvent('submit', true, true);\\n\" + 'if (form.dispatchEvent(e)) { HTMLFormElement.prototype.submit.call(form) }\\n';\n      return this.driver_.executeScript(script, this);\n    }\n\n    /**\n     * Clear the `value` of this element. This command has no effect if the\n     * underlying DOM element is neither a text INPUT element nor a TEXTAREA\n     * element.\n     *\n     * @return {!Promise<void>} A promise that will be resolved\n     *     when the element has been cleared.\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      return this.execute_(new command.Command(command.Name.CLEAR_ELEMENT));\n    }\n\n    /**\n     * Test whether this element is currently displayed.\n     *\n     * @return {!Promise<boolean>} A promise that will be\n     *     resolved with whether this element is currently visible on the page.\n     */\n  }, {\n    key: \"isDisplayed\",\n    value: function isDisplayed() {\n      return this.execute_(new command.Command(command.Name.IS_ELEMENT_DISPLAYED));\n    }\n\n    /**\n     * Take a screenshot of the visible region encompassed by this element's\n     * bounding rectangle.\n     *\n     * @return {!Promise<string>} A promise that will be\n     *     resolved to the screenshot as a base-64 encoded PNG.\n     */\n  }, {\n    key: \"takeScreenshot\",\n    value: function takeScreenshot() {\n      return this.execute_(new command.Command(command.Name.TAKE_ELEMENT_SCREENSHOT));\n    }\n  }], [{\n    key: \"buildId\",\n    value: function buildId(id) {\n      var _ref10;\n      var noLegacy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return noLegacy ? _defineProperty({}, ELEMENT_ID_KEY, id) : (_ref10 = {}, _defineProperty(_ref10, ELEMENT_ID_KEY, id), _defineProperty(_ref10, LEGACY_ELEMENT_ID_KEY, id), _ref10);\n    }\n\n    /**\n     * Extracts the encoded WebElement ID from the object.\n     *\n     * @param {?} obj The object to extract the ID from.\n     * @return {string} the extracted ID.\n     * @throws {TypeError} if the object is not a valid encoded ID.\n     */\n  }, {\n    key: \"extractId\",\n    value: function extractId(obj) {\n      return webElement.extractId(obj);\n    }\n\n    /**\n     * @param {?} obj the object to test.\n     * @return {boolean} whether the object is a valid encoded WebElement ID.\n     */\n  }, {\n    key: \"isId\",\n    value: function isId(obj) {\n      return webElement.isId(obj);\n    }\n\n    /**\n     * Compares two WebElements for equality.\n     *\n     * @param {!WebElement} a A WebElement.\n     * @param {!WebElement} b A WebElement.\n     * @return {!Promise<boolean>} A promise that will be\n     *     resolved to whether the two WebElements are equal.\n     */\n  }, {\n    key: \"equals\",\n    value: function () {\n      var _equals = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee33(a, b) {\n        return _regeneratorRuntime().wrap(function _callee33$(_context33) {\n          while (1) switch (_context33.prev = _context33.next) {\n            case 0:\n              if (!(a === b)) {\n                _context33.next = 2;\n                break;\n              }\n              return _context33.abrupt(\"return\", true);\n            case 2:\n              return _context33.abrupt(\"return\", a.driver_.executeScript('return arguments[0] === arguments[1]', a, b));\n            case 3:\n            case \"end\":\n              return _context33.stop();\n          }\n        }, _callee33);\n      }));\n      function equals(_x37, _x38) {\n        return _equals.apply(this, arguments);\n      }\n      return equals;\n    }()\n  }]);\n  return WebElement;\n}(Symbols.serialize);\n/**\n * WebElementPromise is a promise that will be fulfilled with a WebElement.\n * This serves as a forward proxy on WebElement, allowing calls to be\n * scheduled without directly on this instance before the underlying\n * WebElement has been fulfilled. In other words, the following two statements\n * are equivalent:\n *\n *     driver.findElement({id: 'my-button'}).click();\n *     driver.findElement({id: 'my-button'}).then(function(el) {\n *       return el.click();\n *     });\n *\n * @implements {IThenable<!WebElement>}\n * @final\n */\nvar WebElementPromise = /*#__PURE__*/function (_WebElement) {\n  _inherits(WebElementPromise, _WebElement);\n  var _super2 = _createSuper(WebElementPromise);\n  /**\n   * @param {!WebDriver} driver The parent WebDriver instance for this\n   *     element.\n   * @param {!Promise<!WebElement>} el A promise\n   *     that will resolve to the promised element.\n   */\n  function WebElementPromise(driver, el) {\n    var _this6;\n    _classCallCheck(this, WebElementPromise);\n    _this6 = _super2.call(this, driver, 'unused');\n\n    /** @override */\n    _this6.then = el.then.bind(el);\n\n    /** @override */\n    _this6.catch = el.catch.bind(el);\n\n    /**\n     * Defers returning the element ID until the wrapped WebElement has been\n     * resolved.\n     * @override\n     */\n    _this6.getId = function () {\n      return el.then(function (el) {\n        return el.getId();\n      });\n    };\n    return _this6;\n  }\n  return _createClass(WebElementPromise);\n}(WebElement); //////////////////////////////////////////////////////////////////////////////\n//\n//  ShadowRoot\n//\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Represents a ShadowRoot of a {@link WebElement}. Provides functions to\n * retrieve elements that live in the DOM below the ShadowRoot.\n */\nvar ShadowRoot = /*#__PURE__*/function (_Symbols$serialize2) {\n  function ShadowRoot(driver, id) {\n    _classCallCheck(this, ShadowRoot);\n    this.driver_ = driver;\n    this.id_ = id;\n  }\n\n  /**\n   * Extracts the encoded ShadowRoot ID from the object.\n   *\n   * @param {?} obj The object to extract the ID from.\n   * @return {string} the extracted ID.\n   * @throws {TypeError} if the object is not a valid encoded ID.\n   */\n  _createClass(ShadowRoot, [{\n    key: _Symbols$serialize2,\n    value:\n    /**\n     * @return {!Object} Returns the serialized representation of this ShadowRoot.\n     */\n    function value() {\n      return this.getId();\n    }\n\n    /**\n     * Schedules a command that targets this element with the parent WebDriver\n     * instance. Will ensure this element's ID is included in the command\n     * parameters under the \"id\" key.\n     *\n     * @param {!command.Command} command The command to schedule.\n     * @return {!Promise<T>} A promise that will be resolved with the result.\n     * @template T\n     * @see WebDriver#schedule\n     * @private\n     */\n  }, {\n    key: \"execute_\",\n    value: function execute_(command) {\n      command.setParameter('id', this);\n      return this.driver_.execute(command);\n    }\n\n    /**\n     * Schedule a command to find a descendant of this ShadowROot. If the element\n     * cannot be found, the returned promise will be rejected with a\n     * {@linkplain error.NoSuchElementError NoSuchElementError}.\n     *\n     * The search criteria for an element may be defined using one of the static\n     * factories on the {@link by.By} class, or as a short-hand\n     * {@link ./by.ByHash} object. For example, the following two statements\n     * are equivalent:\n     *\n     *     var e1 = shadowroot.findElement(By.id('foo'));\n     *     var e2 = shadowroot.findElement({id:'foo'});\n     *\n     * You may also provide a custom locator function, which takes as input this\n     * instance and returns a {@link WebElement}, or a promise that will resolve\n     * to a WebElement. If the returned promise resolves to an array of\n     * WebElements, WebDriver will use the first element. For example, to find the\n     * first visible link on a page, you could write:\n     *\n     *     var link = element.findElement(firstVisibleLink);\n     *\n     *     function firstVisibleLink(shadowRoot) {\n     *       var links = shadowRoot.findElements(By.tagName('a'));\n     *       return promise.filter(links, function(link) {\n     *         return link.isDisplayed();\n     *       });\n     *     }\n     *\n     * @param {!(by.By|Function)} locator The locator strategy to use when\n     *     searching for the element.\n     * @return {!WebElementPromise} A WebElement that can be used to issue\n     *     commands against the located element. If the element is not found, the\n     *     element will be invalidated and all scheduled commands aborted.\n     */\n  }, {\n    key: \"findElement\",\n    value: function findElement(locator) {\n      locator = by.checkedLocator(locator);\n      var id;\n      if (typeof locator === 'function') {\n        id = this.driver_.findElementInternal_(locator, this);\n      } else {\n        var cmd = new command.Command(command.Name.FIND_ELEMENT_FROM_SHADOWROOT).setParameter('using', locator.using).setParameter('value', locator.value);\n        id = this.execute_(cmd);\n      }\n      return new ShadowRootPromise(this.driver_, id);\n    }\n\n    /**\n     * Locates all the descendants of this element that match the given search\n     * criteria.\n     *\n     * @param {!(by.By|Function)} locator The locator strategy to use when\n     *     searching for the element.\n     * @return {!Promise<!Array<!WebElement>>} A promise that will resolve to an\n     *     array of WebElements.\n     */\n  }, {\n    key: \"findElements\",\n    value: function () {\n      var _findElements3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee34(locator) {\n        var cmd, result;\n        return _regeneratorRuntime().wrap(function _callee34$(_context34) {\n          while (1) switch (_context34.prev = _context34.next) {\n            case 0:\n              locator = by.checkedLocator(locator);\n              if (!(typeof locator === 'function')) {\n                _context34.next = 5;\n                break;\n              }\n              return _context34.abrupt(\"return\", this.driver_.findElementsInternal_(locator, this));\n            case 5:\n              cmd = new command.Command(command.Name.FIND_ELEMENTS_FROM_SHADOWROOT).setParameter('using', locator.using).setParameter('value', locator.value);\n              _context34.next = 8;\n              return this.execute_(cmd);\n            case 8:\n              result = _context34.sent;\n              return _context34.abrupt(\"return\", Array.isArray(result) ? result : []);\n            case 10:\n            case \"end\":\n              return _context34.stop();\n          }\n        }, _callee34, this);\n      }));\n      function findElements(_x39) {\n        return _findElements3.apply(this, arguments);\n      }\n      return findElements;\n    }()\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return this.id_;\n    }\n  }], [{\n    key: \"extractId\",\n    value: function extractId(obj) {\n      if (obj && typeof obj === 'object') {\n        if (typeof obj[SHADOW_ROOT_ID_KEY] === 'string') {\n          return obj[SHADOW_ROOT_ID_KEY];\n        }\n      }\n      throw new TypeError('object is not a ShadowRoot ID');\n    }\n\n    /**\n     * @param {?} obj the object to test.\n     * @return {boolean} whether the object is a valid encoded WebElement ID.\n     */\n  }, {\n    key: \"isId\",\n    value: function isId(obj) {\n      return obj && typeof obj === 'object' && typeof obj[SHADOW_ROOT_ID_KEY] === 'string';\n    }\n  }]);\n  return ShadowRoot;\n}(Symbols.serialize);\n/**\n * ShadowRootPromise is a promise that will be fulfilled with a WebElement.\n * This serves as a forward proxy on ShadowRoot, allowing calls to be\n * scheduled without directly on this instance before the underlying\n * ShadowRoot has been fulfilled.\n *\n * @implements { IThenable<!ShadowRoot>}\n * @final\n */\nvar ShadowRootPromise = /*#__PURE__*/function (_ShadowRoot) {\n  _inherits(ShadowRootPromise, _ShadowRoot);\n  var _super3 = _createSuper(ShadowRootPromise);\n  /**\n   * @param {!WebDriver} driver The parent WebDriver instance for this\n   *     element.\n   * @param {!Promise<!ShadowRoot>} shadow A promise\n   *     that will resolve to the promised element.\n   */\n  function ShadowRootPromise(driver, shadow) {\n    var _this7;\n    _classCallCheck(this, ShadowRootPromise);\n    _this7 = _super3.call(this, driver, 'unused');\n\n    /** @override */\n    _this7.then = shadow.then.bind(shadow);\n\n    /** @override */\n    _this7.catch = shadow.catch.bind(shadow);\n\n    /**\n     * Defers returning the ShadowRoot ID until the wrapped WebElement has been\n     * resolved.\n     * @override\n     */\n    _this7.getId = function () {\n      return shadow.then(function (shadow) {\n        return shadow.getId();\n      });\n    };\n    return _this7;\n  }\n  return _createClass(ShadowRootPromise);\n}(ShadowRoot); //////////////////////////////////////////////////////////////////////////////\n//\n//  Alert\n//\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Represents a modal dialog such as {@code alert}, {@code confirm}, or\n * {@code prompt}. Provides functions to retrieve the message displayed with\n * the alert, accept or dismiss the alert, and set the response text (in the\n * case of {@code prompt}).\n */\nvar Alert = /*#__PURE__*/function () {\n  /**\n   * @param {!WebDriver} driver The driver controlling the browser this alert\n   *     is attached to.\n   * @param {string} text The message text displayed with this alert.\n   */\n  function Alert(driver, text) {\n    _classCallCheck(this, Alert);\n    /** @private {!WebDriver} */\n    this.driver_ = driver;\n\n    /** @private {!Promise<string>} */\n    this.text_ = Promise.resolve(text);\n  }\n\n  /**\n   * Retrieves the message text displayed with this alert. For instance, if the\n   * alert were opened with alert(\"hello\"), then this would return \"hello\".\n   *\n   * @return {!Promise<string>} A promise that will be\n   *     resolved to the text displayed with this alert.\n   */\n  _createClass(Alert, [{\n    key: \"getText\",\n    value: function getText() {\n      return this.text_;\n    }\n\n    /**\n     * Accepts this alert.\n     *\n     * @return {!Promise<void>} A promise that will be resolved\n     *     when this command has completed.\n     */\n  }, {\n    key: \"accept\",\n    value: function accept() {\n      return this.driver_.execute(new command.Command(command.Name.ACCEPT_ALERT));\n    }\n\n    /**\n     * Dismisses this alert.\n     *\n     * @return {!Promise<void>} A promise that will be resolved\n     *     when this command has completed.\n     */\n  }, {\n    key: \"dismiss\",\n    value: function dismiss() {\n      return this.driver_.execute(new command.Command(command.Name.DISMISS_ALERT));\n    }\n\n    /**\n     * Sets the response text on this alert. This command will return an error if\n     * the underlying alert does not support response text (e.g. window.alert and\n     * window.confirm).\n     *\n     * @param {string} text The text to set.\n     * @return {!Promise<void>} A promise that will be resolved\n     *     when this command has completed.\n     */\n  }, {\n    key: \"sendKeys\",\n    value: function sendKeys(text) {\n      return this.driver_.execute(new command.Command(command.Name.SET_ALERT_TEXT).setParameter('text', text));\n    }\n  }]);\n  return Alert;\n}();\n/**\n * AlertPromise is a promise that will be fulfilled with an Alert. This promise\n * serves as a forward proxy on an Alert, allowing calls to be scheduled\n * directly on this instance before the underlying Alert has been fulfilled. In\n * other words, the following two statements are equivalent:\n *\n *     driver.switchTo().alert().dismiss();\n *     driver.switchTo().alert().then(function(alert) {\n *       return alert.dismiss();\n *     });\n *\n * @implements {IThenable<!Alert>}\n * @final\n */\nvar AlertPromise = /*#__PURE__*/function (_Alert) {\n  _inherits(AlertPromise, _Alert);\n  var _super4 = _createSuper(AlertPromise);\n  /**\n   * @param {!WebDriver} driver The driver controlling the browser this\n   *     alert is attached to.\n   * @param {!Promise<!Alert>} alert A thenable\n   *     that will be fulfilled with the promised alert.\n   */\n  function AlertPromise(driver, alert) {\n    var _this8;\n    _classCallCheck(this, AlertPromise);\n    _this8 = _super4.call(this, driver, 'unused');\n\n    /** @override */\n    _this8.then = alert.then.bind(alert);\n\n    /** @override */\n    _this8.catch = alert.catch.bind(alert);\n\n    /**\n     * Defer returning text until the promised alert has been resolved.\n     * @override\n     */\n    _this8.getText = function () {\n      return alert.then(function (alert) {\n        return alert.getText();\n      });\n    };\n\n    /**\n     * Defers action until the alert has been located.\n     * @override\n     */\n    _this8.accept = function () {\n      return alert.then(function (alert) {\n        return alert.accept();\n      });\n    };\n\n    /**\n     * Defers action until the alert has been located.\n     * @override\n     */\n    _this8.dismiss = function () {\n      return alert.then(function (alert) {\n        return alert.dismiss();\n      });\n    };\n\n    /**\n     * Defers action until the alert has been located.\n     * @override\n     */\n    _this8.sendKeys = function (text) {\n      return alert.then(function (alert) {\n        return alert.sendKeys(text);\n      });\n    };\n    return _this8;\n  }\n  return _createClass(AlertPromise);\n}(Alert); // PUBLIC API\nmodule.exports = {\n  Alert: Alert,\n  AlertPromise: AlertPromise,\n  Condition: Condition,\n  Logs: Logs,\n  Navigation: Navigation,\n  Options: Options,\n  ShadowRoot: ShadowRoot,\n  TargetLocator: TargetLocator,\n  IWebDriver: IWebDriver,\n  WebDriver: WebDriver,\n  WebElement: WebElement,\n  WebElementCondition: WebElementCondition,\n  WebElementPromise: WebElementPromise,\n  Window: Window\n};","map":{"version":3,"names":["_defineProperty","require","default","_toConsumableArray","_regeneratorRuntime","_createForOfIteratorHelper","_asyncToGenerator","_inherits","_createSuper","_classCallCheck","_createClass","by","_require","RelativeBy","command","error","input","logging","promise","Symbols","cdp","WebSocket","http","fs","_require2","Capabilities","path","_require3","NoSuchElementError","cdpTargets","_require4","Credential","webElement","_require5","isObject","BIDI","_require6","PinnedScript","W3C_CAPABILITY_NAMES","Set","Condition","message","fn","description_","key","value","description","WebElementCondition","_Condition","_super","call","executeCommand","executor","toWireValue","getParameters","then","parameters","setParameters","execute","_x","_toWireValue","apply","arguments","mark","_callee35","obj","wrap","_callee35$","_context35","prev","next","Promise","resolve","sent","abrupt","Array","isArray","convertKeys","serialize","toJSON","stop","_x2","_convertKeys","_callee38","numKeys","ret","forEachKey","_forEachKey","_callee38$","_context38","_forEachKey3","_callee37","i","n","_callee37$","_context37","length","t0","keys","t1","done","_forEachKey2","_x40","_x41","Object","_ref11","_callee36","_callee36$","_context36","_x42","_x43","fromWireValue","driver","map","v","WebElement","isId","id","extractId","ShadowRoot","result","prototype","hasOwnProperty","resolveWaitMessage","concat","IWebDriver","setFileDetector","detector","getExecutor","getSession","getCapabilities","quit","actions","options","executeScript","script","executeAsyncScript","wait","condition","timeout","undefined","pollTimeout","sleep","ms","getWindowHandle","getAllWindowHandles","getPageSource","close","get","url","getCurrentUrl","getTitle","findElement","locator","findElements","takeScreenshot","manage","navigate","switchTo","printPage","filterNonW3CCaps","capabilities","newCaps","_iterator","_step","s","k","has","indexOf","delete","err","e","f","WebDriver","session","onQuit","session_","catch","executor_","fileDetector_","onQuit_","authenticatorId_","pinnedScripts_","_execute","_callee","_callee$","_context","setParameter","_x3","_this","Command","Name","QUIT","finally","reject","NoSuchSessionError","Actions","_len","args","_key","EXECUTE_SCRIPT","executionScript","_len2","_key2","EXECUTE_ASYNC_SCRIPT","TypeError","isPromise","start","Date","now","timer","setTimeout","timeoutMessage","TimeoutError","ex","clearTimer","clearTimeout","evaluateCondition","startTime","pollCondition","_ref","_callee2","_callee2$","_context2","elapsed","WebElementPromise","toString","GET_CURRENT_WINDOW_HANDLE","GET_WINDOW_HANDLES","GET_PAGE_SOURCE","CLOSE","to","GET_CURRENT_URL","GET_TITLE","cmd","FIND_ELEMENTS_RELATIVE","marshall","checkedLocator","findElementInternal_","FIND_ELEMENT","using","normalize_","_normalize_","_callee3","webElementPromise","_callee3$","_context3","_x4","_findElementInternal_","_callee4","locatorFn","context","_callee4$","_context4","_x5","_x6","_findElements","_callee5","res","_callee5$","_context5","findElementsInternal_","FIND_ELEMENTS","_x7","_findElementsInternal_","_callee6","_callee6$","_context6","filter","item","_x8","_x9","SCREENSHOT","Options","Navigation","TargetLocator","validatePrintPageParams","object","page","margin","data","forEach","orientation","scale","background","width","height","top","left","bottom","right","shrinkToFit","pageRanges","InvalidArgumentError","params","resultObj","self","PRINT_PAGE","_createCDPConnection","_callee9","target","_this2","debuggerUrl","caps","host","sessionId","seCdp","vendorInfo","_callee9$","_context9","process","env","SELENIUM_REMOTE_URL","URL","getId","VENDOR_COMMAND_PREFIX","VENDOR_CAPABILITY_PREFIX","Map","getWsUrl","_wsUrl","_wsConnection","replace","_cdpConnection","CdpConnection","on","_callee7","_callee7$","_context7","getCdpTargets","_ref3","_callee8","targets","_callee8$","_context8","JSON","parse","targetInfos","find","info","type","targetID","targetId","flatten","_x11","createCDPConnection","_x10","_getCdpTargets","_callee10","_callee10$","_context10","_getBidi","_callee11","WebSocketUrl","_callee11$","_context11","getBidi","_getWsUrl","_callee12","debuggerAddress","request","client","response","_callee12$","_context12","toLowerCase","match","Request","HttpClient","send","body","_x12","_x13","_x14","_register","_callee13","username","password","connection","_callee13$","_context13","method","requestParams","requestId","authChallengeResponse","requestPausedParams","handleAuthRequests","cacheDisabled","register","_x15","_x16","_x17","_onIntercept","_callee14","httpResponse","callback","_callee14$","_context14","urlToIntercept","responseCode","status","responseHeaders","headers","onIntercept","_x18","_x19","_x20","_onLogEvent","_callee15","_callee15$","_context15","consoleEventParams","event","timestamp","logEventParams","logEntry","level","onLogEvent","_x21","_x22","_onLogException","_callee16","_callee16$","_context16","exceptionEventParams","exceptionDetails","onLogException","_x23","_x24","_logMutationEvents","_callee18","_this3","mutationListener","_callee18$","_context18","name","readFileSync","_unused","__dirname","source","_ref4","_callee17","payload","elements","_callee17$","_context17","css","escapeCss","element","attribute_name","current_value","old_value","_x27","logMutationEvents","_x25","_x26","_pinScript","_callee19","pinnedScript","_callee19$","_context19","is","expression","creationScript","scriptId","handle","pinScript","_x28","_unpinScript","_callee20","_callee20$","_context20","Error","removalScript","identifier","unpinScript","_x29","virtualAuthenticatorId","_addVirtualAuthenticator","_callee21","_callee21$","_context21","ADD_VIRTUAL_AUTHENTICATOR","toDict","addVirtualAuthenticator","_x30","_removeVirtualAuthenticator","_callee22","_callee22$","_context22","REMOVE_VIRTUAL_AUTHENTICATOR","removeVirtualAuthenticator","_addCredential","_callee23","credential","_callee23$","_context23","ADD_CREDENTIAL","addCredential","_x31","_getCredentials","_callee24","credential_data","credential_list","_callee24$","_context24","GET_CREDENTIALS","push","fromDict","getCredentials","_removeCredential","_callee25","credential_id","_callee25$","_context25","Buffer","from","REMOVE_CREDENTIAL","removeCredential","_x32","_removeAllCredentials","_callee26","_callee26$","_context26","REMOVE_ALL_CREDENTIALS","removeAllCredentials","_setUserVerified","_callee27","verified","_callee27$","_context27","SET_USER_VERIFIED","setUserVerified","_x33","createSession","NEW_SESSION","firstMatch","alwaysMatch","_","driver_","GET","back","GO_BACK","forward","GO_FORWARD","refresh","REFRESH","addCookie","_ref5","domain","secure","httpOnly","expiry","sameSite","test","Math","floor","date","getTime","includes","ADD_COOKIE","deleteAllCookies","DELETE_ALL_COOKIES","deleteCookie","DELETE_COOKIE","getCookies","GET_ALL_COOKIES","_getCookie","_callee28","cookie","cookies","_iterator2","_step2","_cookie","_callee28$","_context28","GET_COOKIE","UnknownCommandError","UnsupportedOperationError","finish","getCookie","_x34","getTimeouts","GET_TIMEOUT","setTimeouts","_this4","_ref6","pageLoad","implicit","SET_TIMEOUT","valid","setParam","cmds","legacyTimeout","all","logs","Logs","window","Window","Cookie","getRect","GET_WINDOW_RECT","setRect","_ref7","x","y","SET_WINDOW_RECT","maximize","MAXIMIZE_WINDOW","minimize","MINIMIZE_WINDOW","fullscreen","FULLSCREEN_WINDOW","_getSize","_callee29","windowHandle","rect","_args29","_callee29$","_context29","console","warn","getSize","_setSize","_callee30","_ref8","_ref8$x","_ref8$y","_ref8$width","_ref8$height","_args30","_callee30$","_context30","setSize","_x35","GET_LOG","entries","entry","Entry","getAvailableLogTypes","GET_AVAILABLE_LOG_TYPES","activeElement","GET_ACTIVE_ELEMENT","defaultContent","SWITCH_TO_FRAME","frame","_this5","frameReference","parentFrame","SWITCH_TO_FRAME_PARENT","nameOrHandle","SWITCH_TO_WINDOW","newWindow","typeHint","SWITCH_TO_NEW_WINDOW","alert","text","GET_ALERT_TEXT","AlertPromise","Alert","LEGACY_ELEMENT_ID_KEY","ELEMENT_ID_KEY","SHADOW_ROOT_ID_KEY","_Symbols$serialize","id_","getDriver","buildId","execute_","FIND_CHILD_ELEMENT","_findElements2","_callee31","_callee31$","_context31","FIND_CHILD_ELEMENTS","_x36","click","CLICK_ELEMENT","_sendKeys","_callee32","_len3","_key3","_args32","_callee32$","_context32","_keys","String","SEND_KEYS_TO_ELEMENT","join","handleFile","log","split","sendKeys","getTagName","GET_ELEMENT_TAG_NAME","getCssValue","cssStyleProperty","GET_ELEMENT_VALUE_OF_CSS_PROPERTY","getAttribute","attributeName","GET_ELEMENT_ATTRIBUTE","getDomAttribute","GET_DOM_ATTRIBUTE","getProperty","propertyName","GET_ELEMENT_PROPERTY","getShadowRoot","GET_SHADOW_ROOT","getText","GET_ELEMENT_TEXT","getAriaRole","GET_COMPUTED_ROLE","getAccessibleName","GET_COMPUTED_LABEL","GET_ELEMENT_RECT","isEnabled","IS_ELEMENT_ENABLED","isSelected","IS_ELEMENT_SELECTED","submit","clear","CLEAR_ELEMENT","isDisplayed","IS_ELEMENT_DISPLAYED","TAKE_ELEMENT_SCREENSHOT","_ref10","noLegacy","_equals","_callee33","a","b","_callee33$","_context33","equals","_x37","_x38","_WebElement","_super2","el","_this6","bind","_Symbols$serialize2","FIND_ELEMENT_FROM_SHADOWROOT","ShadowRootPromise","_findElements3","_callee34","_callee34$","_context34","FIND_ELEMENTS_FROM_SHADOWROOT","_x39","_ShadowRoot","_super3","shadow","_this7","text_","accept","ACCEPT_ALERT","dismiss","DISMISS_ALERT","SET_ALERT_TEXT","_Alert","_super4","_this8","module","exports"],"sources":["D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/selenium-webdriver/lib/webdriver.js"],"sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview The heart of the WebDriver JavaScript API.\n */\n\n'use strict'\n\nconst by = require('./by')\nconst { RelativeBy } = require('./by')\nconst command = require('./command')\nconst error = require('./error')\nconst input = require('./input')\nconst logging = require('./logging')\nconst promise = require('./promise')\nconst Symbols = require('./symbols')\nconst cdp = require('../devtools/CDPConnection')\nconst WebSocket = require('ws')\nconst http = require('../http/index')\nconst fs = require('fs')\nconst { Capabilities } = require('./capabilities')\nconst path = require('path')\nconst { NoSuchElementError } = require('./error')\nconst cdpTargets = ['page', 'browser']\nconst { Credential } = require('./virtual_authenticator')\nconst webElement = require('./webelement')\nconst { isObject } = require('./util')\nconst BIDI = require('../bidi')\nconst { PinnedScript } = require('./pinnedScript')\n\n// Capability names that are defined in the W3C spec.\nconst W3C_CAPABILITY_NAMES = new Set([\n  'acceptInsecureCerts',\n  'browserName',\n  'browserVersion',\n  'pageLoadStrategy',\n  'platformName',\n  'proxy',\n  'setWindowRect',\n  'strictFileInteractability',\n  'timeouts',\n  'unhandledPromptBehavior',\n  'webSocketUrl',\n])\n\n/**\n * Defines a condition for use with WebDriver's {@linkplain WebDriver#wait wait\n * command}.\n *\n * @template OUT\n */\nclass Condition {\n  /**\n   * @param {string} message A descriptive error message. Should complete the\n   *     sentence \"Waiting [...]\"\n   * @param {function(!WebDriver): OUT} fn The condition function to\n   *     evaluate on each iteration of the wait loop.\n   */\n  constructor(message, fn) {\n    /** @private {string} */\n    this.description_ = 'Waiting ' + message\n\n    /** @type {function(!WebDriver): OUT} */\n    this.fn = fn\n  }\n\n  /** @return {string} A description of this condition. */\n  description() {\n    return this.description_\n  }\n}\n\n/**\n * Defines a condition that will result in a {@link WebElement}.\n *\n * @extends {Condition<!(WebElement|IThenable<!WebElement>)>}\n */\nclass WebElementCondition extends Condition {\n  /**\n   * @param {string} message A descriptive error message. Should complete the\n   *     sentence \"Waiting [...]\"\n   * @param {function(!WebDriver): !(WebElement|IThenable<!WebElement>)}\n   *     fn The condition function to evaluate on each iteration of the wait\n   *     loop.\n   */\n  constructor(message, fn) {\n    super(message, fn)\n  }\n}\n\n//////////////////////////////////////////////////////////////////////////////\n//\n//  WebDriver\n//\n//////////////////////////////////////////////////////////////////////////////\n\n/**\n * Translates a command to its wire-protocol representation before passing it\n * to the given `executor` for execution.\n * @param {!command.Executor} executor The executor to use.\n * @param {!command.Command} command The command to execute.\n * @return {!Promise} A promise that will resolve with the command response.\n */\nfunction executeCommand(executor, command) {\n  return toWireValue(command.getParameters()).then(function (parameters) {\n    command.setParameters(parameters)\n    return executor.execute(command)\n  })\n}\n\n/**\n * Converts an object to its JSON representation in the WebDriver wire protocol.\n * When converting values of type object, the following steps will be taken:\n * <ol>\n * <li>if the object is a WebElement, the return value will be the element's\n *     server ID\n * <li>if the object defines a {@link Symbols.serialize} method, this algorithm\n *     will be recursively applied to the object's serialized representation\n * <li>if the object provides a \"toJSON\" function, this algorithm will\n *     recursively be applied to the result of that function\n * <li>otherwise, the value of each key will be recursively converted according\n *     to the rules above.\n * </ol>\n *\n * @param {*} obj The object to convert.\n * @return {!Promise<?>} A promise that will resolve to the input value's JSON\n *     representation.\n */\nasync function toWireValue(obj) {\n  let value = await Promise.resolve(obj)\n  if (value === void 0 || value === null) {\n    return value\n  }\n\n  if (\n    typeof value === 'boolean' ||\n    typeof value === 'number' ||\n    typeof value === 'string'\n  ) {\n    return value\n  }\n\n  if (Array.isArray(value)) {\n    return convertKeys(value)\n  }\n\n  if (typeof value === 'function') {\n    return '' + value\n  }\n\n  if (typeof value[Symbols.serialize] === 'function') {\n    return toWireValue(value[Symbols.serialize]())\n  } else if (typeof value.toJSON === 'function') {\n    return toWireValue(value.toJSON())\n  }\n  return convertKeys(value)\n}\n\nasync function convertKeys(obj) {\n  const isArray = Array.isArray(obj)\n  const numKeys = isArray ? obj.length : Object.keys(obj).length\n  const ret = isArray ? new Array(numKeys) : {}\n  if (!numKeys) {\n    return ret\n  }\n\n  async function forEachKey(obj, fn) {\n    if (Array.isArray(obj)) {\n      for (let i = 0, n = obj.length; i < n; i++) {\n        await fn(obj[i], i)\n      }\n    } else {\n      for (let key in obj) {\n        await fn(obj[key], key)\n      }\n    }\n  }\n\n  await forEachKey(obj, async function (value, key) {\n    ret[key] = await toWireValue(value)\n  })\n\n  return ret\n}\n\n/**\n * Converts a value from its JSON representation according to the WebDriver wire\n * protocol. Any JSON object that defines a WebElement ID will be decoded to a\n * {@link WebElement} object. All other values will be passed through as is.\n *\n * @param {!WebDriver} driver The driver to use as the parent of any unwrapped\n *     {@link WebElement} values.\n * @param {*} value The value to convert.\n * @return {*} The converted value.\n */\nfunction fromWireValue(driver, value) {\n  if (Array.isArray(value)) {\n    value = value.map((v) => fromWireValue(driver, v))\n  } else if (WebElement.isId(value)) {\n    let id = WebElement.extractId(value)\n    value = new WebElement(driver, id)\n  } else if (ShadowRoot.isId(value)) {\n    let id = ShadowRoot.extractId(value)\n    value = new ShadowRoot(driver, id)\n  } else if (isObject(value)) {\n    let result = {}\n    for (let key in value) {\n      if (Object.prototype.hasOwnProperty.call(value, key)) {\n        result[key] = fromWireValue(driver, value[key])\n      }\n    }\n    value = result\n  }\n  return value\n}\n\n/**\n * Resolves a wait message from either a function or a string.\n * @param {(string|Function)=} message An optional message to use if the wait times out.\n * @return {string} The resolved message\n */\nfunction resolveWaitMessage(message) {\n  return message\n    ? `${typeof message === 'function' ? message() : message}\\n`\n    : ''\n}\n\n/**\n * Structural interface for a WebDriver client.\n *\n * @record\n */\nclass IWebDriver {\n  /**\n   * Executes the provided {@link command.Command} using this driver's\n   * {@link command.Executor}.\n   *\n   * @param {!command.Command} command The command to schedule.\n   * @return {!Promise<T>} A promise that will be resolved with the command\n   *     result.\n   * @template T\n   */\n  execute(command) {} // eslint-disable-line\n\n  /**\n   * Sets the {@linkplain input.FileDetector file detector} that should be\n   * used with this instance.\n   * @param {input.FileDetector} detector The detector to use or `null`.\n   */\n  setFileDetector(detector) {} // eslint-disable-line\n\n  /**\n   * @return {!command.Executor} The command executor used by this instance.\n   */\n  getExecutor() {}\n\n  /**\n   * @return {!Promise<!Session>} A promise for this client's session.\n   */\n  getSession() {}\n\n  /**\n   * @return {!Promise<!Capabilities>} A promise that will resolve with\n   *     the instance's capabilities.\n   */\n  getCapabilities() {}\n\n  /**\n   * Terminates the browser session. After calling quit, this instance will be\n   * invalidated and may no longer be used to issue commands against the\n   * browser.\n   *\n   * @return {!Promise<void>} A promise that will be resolved when the\n   *     command has completed.\n   */\n  quit() {}\n\n  /**\n   * Creates a new action sequence using this driver. The sequence will not be\n   * submitted for execution until\n   * {@link ./input.Actions#perform Actions.perform()} is called.\n   *\n   * @param {{async: (boolean|undefined),\n   *          bridge: (boolean|undefined)}=} options Configuration options for\n   *     the action sequence (see {@link ./input.Actions Actions} documentation\n   *     for details).\n   * @return {!input.Actions} A new action sequence for this instance.\n   */\n  actions(options) {} // eslint-disable-line\n\n  /**\n   * Executes a snippet of JavaScript in the context of the currently selected\n   * frame or window. The script fragment will be executed as the body of an\n   * anonymous function. If the script is provided as a function object, that\n   * function will be converted to a string for injection into the target\n   * window.\n   *\n   * Any arguments provided in addition to the script will be included as script\n   * arguments and may be referenced using the `arguments` object. Arguments may\n   * be a boolean, number, string, or {@linkplain WebElement}. Arrays and\n   * objects may also be used as script arguments as long as each item adheres\n   * to the types previously mentioned.\n   *\n   * The script may refer to any variables accessible from the current window.\n   * Furthermore, the script will execute in the window's context, thus\n   * `document` may be used to refer to the current document. Any local\n   * variables will not be available once the script has finished executing,\n   * though global variables will persist.\n   *\n   * If the script has a return value (i.e. if the script contains a return\n   * statement), then the following steps will be taken for resolving this\n   * functions return value:\n   *\n   * - For a HTML element, the value will resolve to a {@linkplain WebElement}\n   * - Null and undefined return values will resolve to null</li>\n   * - Booleans, numbers, and strings will resolve as is</li>\n   * - Functions will resolve to their string representation</li>\n   * - For arrays and objects, each member item will be converted according to\n   *     the rules above\n   *\n   * @param {!(string|Function)} script The script to execute.\n   * @param {...*} args The arguments to pass to the script.\n   * @return {!IThenable<T>} A promise that will resolve to the\n   *    scripts return value.\n   * @template T\n   */\n  executeScript(script, ...args) {} // eslint-disable-line\n\n  /**\n   * Executes a snippet of asynchronous JavaScript in the context of the\n   * currently selected frame or window. The script fragment will be executed as\n   * the body of an anonymous function. If the script is provided as a function\n   * object, that function will be converted to a string for injection into the\n   * target window.\n   *\n   * Any arguments provided in addition to the script will be included as script\n   * arguments and may be referenced using the `arguments` object. Arguments may\n   * be a boolean, number, string, or {@linkplain WebElement}. Arrays and\n   * objects may also be used as script arguments as long as each item adheres\n   * to the types previously mentioned.\n   *\n   * Unlike executing synchronous JavaScript with {@link #executeScript},\n   * scripts executed with this function must explicitly signal they are\n   * finished by invoking the provided callback. This callback will always be\n   * injected into the executed function as the last argument, and thus may be\n   * referenced with  `arguments[arguments.length - 1]`. The following steps\n   * will be taken for resolving this functions return value against the first\n   * argument to the script's callback function:\n   *\n   * - For a HTML element, the value will resolve to a {@link WebElement}\n   * - Null and undefined return values will resolve to null\n   * - Booleans, numbers, and strings will resolve as is\n   * - Functions will resolve to their string representation\n   * - For arrays and objects, each member item will be converted according to\n   *     the rules above\n   *\n   * __Example #1:__ Performing a sleep that is synchronized with the currently\n   * selected window:\n   *\n   *     var start = new Date().getTime();\n   *     driver.executeAsyncScript(\n   *         'window.setTimeout(arguments[arguments.length - 1], 500);').\n   *         then(function() {\n   *           console.log(\n   *               'Elapsed time: ' + (new Date().getTime() - start) + ' ms');\n   *         });\n   *\n   * __Example #2:__ Synchronizing a test with an AJAX application:\n   *\n   *     var button = driver.findElement(By.id('compose-button'));\n   *     button.click();\n   *     driver.executeAsyncScript(\n   *         'var callback = arguments[arguments.length - 1];' +\n   *         'mailClient.getComposeWindowWidget().onload(callback);');\n   *     driver.switchTo().frame('composeWidget');\n   *     driver.findElement(By.id('to')).sendKeys('dog@example.com');\n   *\n   * __Example #3:__ Injecting a XMLHttpRequest and waiting for the result. In\n   * this example, the inject script is specified with a function literal. When\n   * using this format, the function is converted to a string for injection, so\n   * it should not reference any symbols not defined in the scope of the page\n   * under test.\n   *\n   *     driver.executeAsyncScript(function() {\n   *       var callback = arguments[arguments.length - 1];\n   *       var xhr = new XMLHttpRequest();\n   *       xhr.open(\"GET\", \"/resource/data.json\", true);\n   *       xhr.onreadystatechange = function() {\n   *         if (xhr.readyState == 4) {\n   *           callback(xhr.responseText);\n   *         }\n   *       };\n   *       xhr.send('');\n   *     }).then(function(str) {\n   *       console.log(JSON.parse(str)['food']);\n   *     });\n   *\n   * @param {!(string|Function)} script The script to execute.\n   * @param {...*} args The arguments to pass to the script.\n   * @return {!IThenable<T>} A promise that will resolve to the scripts return\n   *     value.\n   * @template T\n   */\n  executeAsyncScript(script, ...args) {} // eslint-disable-line\n\n  /**\n   * Waits for a condition to evaluate to a \"truthy\" value. The condition may be\n   * specified by a {@link Condition}, as a custom function, or as any\n   * promise-like thenable.\n   *\n   * For a {@link Condition} or function, the wait will repeatedly\n   * evaluate the condition until it returns a truthy value. If any errors occur\n   * while evaluating the condition, they will be allowed to propagate. In the\n   * event a condition returns a {@linkplain Promise}, the polling loop will\n   * wait for it to be resolved and use the resolved value for whether the\n   * condition has been satisfied. The resolution time for a promise is always\n   * factored into whether a wait has timed out.\n   *\n   * If the provided condition is a {@link WebElementCondition}, then\n   * the wait will return a {@link WebElementPromise} that will resolve to the\n   * element that satisfied the condition.\n   *\n   * _Example:_ waiting up to 10 seconds for an element to be present on the\n   * page.\n   *\n   *     async function example() {\n   *       let button =\n   *           await driver.wait(until.elementLocated(By.id('foo')), 10000);\n   *       await button.click();\n   *     }\n   *\n   * @param {!(IThenable<T>|\n   *           Condition<T>|\n   *           function(!WebDriver): T)} condition The condition to\n   *     wait on, defined as a promise, condition object, or  a function to\n   *     evaluate as a condition.\n   * @param {number=} timeout The duration in milliseconds, how long to wait\n   *     for the condition to be true.\n   * @param {(string|Function)=} message An optional message to use if the wait times out.\n   * @param {number=} pollTimeout The duration in milliseconds, how long to\n   *     wait between polling the condition.\n   * @return {!(IThenable<T>|WebElementPromise)} A promise that will be\n   *     resolved with the first truthy value returned by the condition\n   *     function, or rejected if the condition times out. If the input\n   *     condition is an instance of a {@link WebElementCondition},\n   *     the returned value will be a {@link WebElementPromise}.\n   * @throws {TypeError} if the provided `condition` is not a valid type.\n   * @template T\n   */\n  wait(\n    condition, // eslint-disable-line\n    timeout = undefined, // eslint-disable-line\n    message = undefined, // eslint-disable-line\n    pollTimeout = undefined // eslint-disable-line\n  ) {}\n\n  /**\n   * Makes the driver sleep for the given amount of time.\n   *\n   * @param {number} ms The amount of time, in milliseconds, to sleep.\n   * @return {!Promise<void>} A promise that will be resolved when the sleep has\n   *     finished.\n   */\n  sleep(ms) {} // eslint-disable-line\n\n  /**\n   * Retrieves the current window handle.\n   *\n   * @return {!Promise<string>} A promise that will be resolved with the current\n   *     window handle.\n   */\n  getWindowHandle() {}\n\n  /**\n   * Retrieves a list of all available window handles.\n   *\n   * @return {!Promise<!Array<string>>} A promise that will be resolved with an\n   *     array of window handles.\n   */\n  getAllWindowHandles() {}\n\n  /**\n   * Retrieves the current page's source. The returned source is a representation\n   * of the underlying DOM: do not expect it to be formatted or escaped in the\n   * same way as the raw response sent from the web server.\n   *\n   * @return {!Promise<string>} A promise that will be resolved with the current\n   *     page source.\n   */\n  getPageSource() {}\n\n  /**\n   * Closes the current window.\n   *\n   * @return {!Promise<void>} A promise that will be resolved when this command\n   *     has completed.\n   */\n  close() {}\n\n  /**\n   * Navigates to the given URL.\n   *\n   * @param {string} url The fully qualified URL to open.\n   * @return {!Promise<void>} A promise that will be resolved when the document\n   *     has finished loading.\n   */\n  get(url) {} // eslint-disable-line\n\n  /**\n   * Retrieves the URL for the current page.\n   *\n   * @return {!Promise<string>} A promise that will be resolved with the\n   *     current URL.\n   */\n  getCurrentUrl() {}\n\n  /**\n   * Retrieves the current page title.\n   *\n   * @return {!Promise<string>} A promise that will be resolved with the current\n   *     page's title.\n   */\n  getTitle() {}\n\n  /**\n   * Locates an element on the page. If the element cannot be found, a\n   * {@link error.NoSuchElementError} will be returned by the driver.\n   *\n   * This function should not be used to test whether an element is present on\n   * the page. Rather, you should use {@link #findElements}:\n   *\n   *     driver.findElements(By.id('foo'))\n   *         .then(found => console.log('Element found? %s', !!found.length));\n   *\n   * The search criteria for an element may be defined using one of the\n   * factories in the {@link webdriver.By} namespace, or as a short-hand\n   * {@link webdriver.By.Hash} object. For example, the following two statements\n   * are equivalent:\n   *\n   *     var e1 = driver.findElement(By.id('foo'));\n   *     var e2 = driver.findElement({id:'foo'});\n   *\n   * You may also provide a custom locator function, which takes as input this\n   * instance and returns a {@link WebElement}, or a promise that will resolve\n   * to a WebElement. If the returned promise resolves to an array of\n   * WebElements, WebDriver will use the first element. For example, to find the\n   * first visible link on a page, you could write:\n   *\n   *     var link = driver.findElement(firstVisibleLink);\n   *\n   *     function firstVisibleLink(driver) {\n   *       var links = driver.findElements(By.tagName('a'));\n   *       return promise.filter(links, function(link) {\n   *         return link.isDisplayed();\n   *       });\n   *     }\n   *\n   * @param {!(by.By|Function)} locator The locator to use.\n   * @return {!WebElementPromise} A WebElement that can be used to issue\n   *     commands against the located element. If the element is not found, the\n   *     element will be invalidated and all scheduled commands aborted.\n   */\n  findElement(locator) {} // eslint-disable-line\n\n  /**\n   * Search for multiple elements on the page. Refer to the documentation on\n   * {@link #findElement(by)} for information on element locator strategies.\n   *\n   * @param {!(by.By|Function)} locator The locator to use.\n   * @return {!Promise<!Array<!WebElement>>} A promise that will resolve to an\n   *     array of WebElements.\n   */\n  findElements(locator) {} // eslint-disable-line\n\n  /**\n   * Takes a screenshot of the current page. The driver makes the best effort to\n   * return a screenshot of the following, in order of preference:\n   *\n   * 1. Entire page\n   * 2. Current window\n   * 3. Visible portion of the current frame\n   * 4. The entire display containing the browser\n   *\n   * @return {!Promise<string>} A promise that will be resolved to the\n   *     screenshot as a base-64 encoded PNG.\n   */\n  takeScreenshot() {}\n\n  /**\n   * @return {!Options} The options interface for this instance.\n   */\n  manage() {}\n\n  /**\n   * @return {!Navigation} The navigation interface for this instance.\n   */\n  navigate() {}\n\n  /**\n   * @return {!TargetLocator} The target locator interface for this\n   *     instance.\n   */\n  switchTo() {}\n\n  /**\n   *\n   * Takes a PDF of the current page. The driver makes a best effort to\n   * return a PDF based on the provided parameters.\n   *\n   * @param {{orientation:(string|undefined),\n   *         scale:(number|undefined),\n   *         background:(boolean|undefined),\n   *         width:(number|undefined),\n   *         height:(number|undefined),\n   *         top:(number|undefined),\n   *         bottom:(number|undefined),\n   *         left:(number|undefined),\n   *         right:(number|undefined),\n   *         shrinkToFit:(boolean|undefined),\n   *         pageRanges:(Array|undefined)}} options\n   */\n  printPage(options) {} // eslint-disable-line\n}\n\n/**\n * @param {!Capabilities} capabilities A capabilities object.\n * @return {!Capabilities} A copy of the parameter capabilities, omitting\n *     capability names that are not valid W3C names.\n */\nfunction filterNonW3CCaps(capabilities) {\n  let newCaps = new Capabilities(capabilities)\n  for (let k of newCaps.keys()) {\n    // Any key containing a colon is a vendor-prefixed capability.\n    if (!(W3C_CAPABILITY_NAMES.has(k) || k.indexOf(':') >= 0)) {\n      newCaps.delete(k)\n    }\n  }\n  return newCaps\n}\n\n/**\n * Each WebDriver instance provides automated control over a browser session.\n *\n * @implements {IWebDriver}\n */\nclass WebDriver {\n  /**\n   * @param {!(./session.Session|IThenable<!./session.Session>)} session Either\n   *     a known session or a promise that will be resolved to a session.\n   * @param {!command.Executor} executor The executor to use when sending\n   *     commands to the browser.\n   * @param {(function(this: void): ?)=} onQuit A function to call, if any,\n   *     when the session is terminated.\n   */\n  constructor(session, executor, onQuit = undefined) {\n    /** @private {!Promise<!Session>} */\n    this.session_ = Promise.resolve(session)\n\n    // If session is a rejected promise, add a no-op rejection handler.\n    // This effectively hides setup errors until users attempt to interact\n    // with the session.\n    this.session_.catch(function () {})\n\n    /** @private {!command.Executor} */\n    this.executor_ = executor\n\n    /** @private {input.FileDetector} */\n    this.fileDetector_ = null\n\n    /** @private @const {(function(this: void): ?|undefined)} */\n    this.onQuit_ = onQuit\n\n    /** @private {./virtual_authenticator}*/\n    this.authenticatorId_ = null\n\n    this.pinnedScripts_ = {}\n  }\n\n  /**\n   * Creates a new WebDriver session.\n   *\n   * This function will always return a WebDriver instance. If there is an error\n   * creating the session, such as the aforementioned SessionNotCreatedError,\n   * the driver will have a rejected {@linkplain #getSession session} promise.\n   * This rejection will propagate through any subsequent commands scheduled\n   * on the returned WebDriver instance.\n   *\n   *     let required = Capabilities.firefox();\n   *     let driver = WebDriver.createSession(executor, {required});\n   *\n   *     // If the createSession operation failed, then this command will also\n   *     // also fail, propagating the creation failure.\n   *     driver.get('http://www.google.com').catch(e => console.log(e));\n   *\n   * @param {!command.Executor} executor The executor to create the new session\n   *     with.\n   * @param {!Capabilities} capabilities The desired capabilities for the new\n   *     session.\n   * @param {(function(this: void): ?)=} onQuit A callback to invoke when\n   *    the newly created session is terminated. This should be used to clean\n   *    up any resources associated with the session.\n   * @return {!WebDriver} The driver for the newly created session.\n   */\n  static createSession(executor, capabilities, onQuit = undefined) {\n    let cmd = new command.Command(command.Name.NEW_SESSION)\n\n    // For W3C remote ends.\n    cmd.setParameter('capabilities', {\n      firstMatch: [{}],\n      alwaysMatch: filterNonW3CCaps(capabilities),\n    })\n\n    let session = executeCommand(executor, cmd)\n    if (typeof onQuit === 'function') {\n      session = session.catch((err) => {\n        return Promise.resolve(onQuit.call(void 0)).then((_) => {\n          throw err\n        })\n      })\n    }\n    return new this(session, executor, onQuit)\n  }\n\n  /** @override */\n  async execute(command) {\n    command.setParameter('sessionId', this.session_)\n\n    let parameters = await toWireValue(command.getParameters())\n    command.setParameters(parameters)\n    let value = await this.executor_.execute(command)\n    return fromWireValue(this, value)\n  }\n\n  /** @override */\n  setFileDetector(detector) {\n    this.fileDetector_ = detector\n  }\n\n  /** @override */\n  getExecutor() {\n    return this.executor_\n  }\n\n  /** @override */\n  getSession() {\n    return this.session_\n  }\n\n  /** @override */\n  getCapabilities() {\n    return this.session_.then((s) => s.getCapabilities())\n  }\n\n  /** @override */\n  quit() {\n    let result = this.execute(new command.Command(command.Name.QUIT))\n    // Delete our session ID when the quit command finishes; this will allow us\n    // to throw an error when attempting to use a driver post-quit.\n    return promise.finally(result, () => {\n      this.session_ = Promise.reject(\n        new error.NoSuchSessionError(\n          'This driver instance does not have a valid session ID ' +\n            '(did you call WebDriver.quit()?) and may no longer be used.'\n        )\n      )\n\n      // Only want the session rejection to bubble if accessed.\n      this.session_.catch(function () {})\n\n      if (this.onQuit_) {\n        return this.onQuit_.call(void 0)\n      }\n    })\n  }\n\n  /** @override */\n  actions(options) {\n    return new input.Actions(this, options || undefined)\n  }\n\n  /** @override */\n  executeScript(script, ...args) {\n    if (typeof script === 'function') {\n      script = 'return (' + script + ').apply(null, arguments);'\n    }\n\n    if (script && script instanceof PinnedScript) {\n      return this.execute(\n        new command.Command(command.Name.EXECUTE_SCRIPT)\n          .setParameter('script', script.executionScript())\n          .setParameter('args', args)\n      )\n    }\n\n    return this.execute(\n      new command.Command(command.Name.EXECUTE_SCRIPT)\n        .setParameter('script', script)\n        .setParameter('args', args)\n    )\n  }\n\n  /** @override */\n  executeAsyncScript(script, ...args) {\n    if (typeof script === 'function') {\n      script = 'return (' + script + ').apply(null, arguments);'\n    }\n\n    if (script && script instanceof PinnedScript) {\n      return this.execute(\n        new command.Command(command.Name.EXECUTE_ASYNC_SCRIPT)\n          .setParameter('script', script.executionScript())\n          .setParameter('args', args)\n      )\n    }\n\n    return this.execute(\n      new command.Command(command.Name.EXECUTE_ASYNC_SCRIPT)\n        .setParameter('script', script)\n        .setParameter('args', args)\n    )\n  }\n\n  /** @override */\n  wait(condition, timeout = 0, message = undefined, pollTimeout = 200) {\n    if (typeof timeout !== 'number' || timeout < 0) {\n      throw TypeError('timeout must be a number >= 0: ' + timeout)\n    }\n\n    if (typeof pollTimeout !== 'number' || pollTimeout < 0) {\n      throw TypeError('pollTimeout must be a number >= 0: ' + pollTimeout)\n    }\n\n    if (promise.isPromise(condition)) {\n      return new Promise((resolve, reject) => {\n        if (!timeout) {\n          resolve(condition)\n          return\n        }\n\n        let start = Date.now()\n        let timer = setTimeout(function () {\n          timer = null\n          try {\n            let timeoutMessage = resolveWaitMessage(message)\n            reject(\n              new error.TimeoutError(\n                `${timeoutMessage}Timed out waiting for promise to resolve after ${\n                  Date.now() - start\n                }ms`\n              )\n            )\n          } catch (ex) {\n            reject(\n              new error.TimeoutError(\n                `${\n                  ex.message\n                }\\nTimed out waiting for promise to resolve after ${\n                  Date.now() - start\n                }ms`\n              )\n            )\n          }\n        }, timeout)\n        const clearTimer = () => timer && clearTimeout(timer)\n\n        /** @type {!IThenable} */ condition.then(\n          function (value) {\n            clearTimer()\n            resolve(value)\n          },\n          function (error) {\n            clearTimer()\n            reject(error)\n          }\n        )\n      })\n    }\n\n    let fn = /** @type {!Function} */ (condition)\n    if (condition instanceof Condition) {\n      message = message || condition.description()\n      fn = condition.fn\n    }\n\n    if (typeof fn !== 'function') {\n      throw TypeError(\n        'Wait condition must be a promise-like object, function, or a ' +\n          'Condition object'\n      )\n    }\n\n    const driver = this\n    function evaluateCondition() {\n      return new Promise((resolve, reject) => {\n        try {\n          resolve(fn(driver))\n        } catch (ex) {\n          reject(ex)\n        }\n      })\n    }\n\n    let result = new Promise((resolve, reject) => {\n      const startTime = Date.now()\n      const pollCondition = async () => {\n        evaluateCondition().then(function (value) {\n          const elapsed = Date.now() - startTime\n          if (value) {\n            resolve(value)\n          } else if (timeout && elapsed >= timeout) {\n            try {\n              let timeoutMessage = resolveWaitMessage(message)\n              reject(\n                new error.TimeoutError(\n                  `${timeoutMessage}Wait timed out after ${elapsed}ms`\n                )\n              )\n            } catch (ex) {\n              reject(\n                new error.TimeoutError(\n                  `${ex.message}\\nWait timed out after ${elapsed}ms`\n                )\n              )\n            }\n          } else {\n            setTimeout(pollCondition, pollTimeout)\n          }\n        }, reject)\n      }\n      pollCondition()\n    })\n\n    if (condition instanceof WebElementCondition) {\n      result = new WebElementPromise(\n        this,\n        result.then(function (value) {\n          if (!(value instanceof WebElement)) {\n            throw TypeError(\n              'WebElementCondition did not resolve to a WebElement: ' +\n                Object.prototype.toString.call(value)\n            )\n          }\n          return value\n        })\n      )\n    }\n    return result\n  }\n\n  /** @override */\n  sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms))\n  }\n\n  /** @override */\n  getWindowHandle() {\n    return this.execute(\n      new command.Command(command.Name.GET_CURRENT_WINDOW_HANDLE)\n    )\n  }\n\n  /** @override */\n  getAllWindowHandles() {\n    return this.execute(new command.Command(command.Name.GET_WINDOW_HANDLES))\n  }\n\n  /** @override */\n  getPageSource() {\n    return this.execute(new command.Command(command.Name.GET_PAGE_SOURCE))\n  }\n\n  /** @override */\n  close() {\n    return this.execute(new command.Command(command.Name.CLOSE))\n  }\n\n  /** @override */\n  get(url) {\n    return this.navigate().to(url)\n  }\n\n  /** @override */\n  getCurrentUrl() {\n    return this.execute(new command.Command(command.Name.GET_CURRENT_URL))\n  }\n\n  /** @override */\n  getTitle() {\n    return this.execute(new command.Command(command.Name.GET_TITLE))\n  }\n\n  /** @override */\n  findElement(locator) {\n    let id\n    let cmd = null\n\n    if (locator instanceof RelativeBy) {\n      cmd = new command.Command(\n        command.Name.FIND_ELEMENTS_RELATIVE\n      ).setParameter('args', locator.marshall())\n    } else {\n      locator = by.checkedLocator(locator)\n    }\n\n    if (typeof locator === 'function') {\n      id = this.findElementInternal_(locator, this)\n      return new WebElementPromise(this, id)\n    } else if (cmd === null) {\n      cmd = new command.Command(command.Name.FIND_ELEMENT)\n        .setParameter('using', locator.using)\n        .setParameter('value', locator.value)\n    }\n\n    id = this.execute(cmd)\n    if (locator instanceof RelativeBy) {\n      return this.normalize_(id)\n    } else {\n      return new WebElementPromise(this, id)\n    }\n  }\n\n  /**\n   * @param {!Function} webElementPromise The webElement in unresolved state\n   * @return {!Promise<!WebElement>} First single WebElement from array of resolved promises\n   */\n  async normalize_(webElementPromise) {\n    let result = await webElementPromise\n    if (result.length === 0) {\n      throw new NoSuchElementError(\n        'Cannot locate an element with provided parameters'\n      )\n    } else {\n      return result[0]\n    }\n  }\n\n  /**\n   * @param {!Function} locatorFn The locator function to use.\n   * @param {!(WebDriver|WebElement)} context The search context.\n   * @return {!Promise<!WebElement>} A promise that will resolve to a list of\n   *     WebElements.\n   * @private\n   */\n  async findElementInternal_(locatorFn, context) {\n    let result = await locatorFn(context)\n    if (Array.isArray(result)) {\n      result = result[0]\n    }\n    if (!(result instanceof WebElement)) {\n      throw new TypeError('Custom locator did not return a WebElement')\n    }\n    return result\n  }\n\n  /** @override */\n  async findElements(locator) {\n    let cmd = null\n    if (locator instanceof RelativeBy) {\n      cmd = new command.Command(\n        command.Name.FIND_ELEMENTS_RELATIVE\n      ).setParameter('args', locator.marshall())\n    } else {\n      locator = by.checkedLocator(locator)\n    }\n\n    if (typeof locator === 'function') {\n      return this.findElementsInternal_(locator, this)\n    } else if (cmd === null) {\n      cmd = new command.Command(command.Name.FIND_ELEMENTS)\n        .setParameter('using', locator.using)\n        .setParameter('value', locator.value)\n    }\n    try {\n      let res = await this.execute(cmd)\n      return Array.isArray(res) ? res : []\n    } catch (ex) {\n      if (ex instanceof error.NoSuchElementError) {\n        return []\n      }\n      throw ex\n    }\n  }\n\n  /**\n   * @param {!Function} locatorFn The locator function to use.\n   * @param {!(WebDriver|WebElement)} context The search context.\n   * @return {!Promise<!Array<!WebElement>>} A promise that will resolve to an\n   *     array of WebElements.\n   * @private\n   */\n  async findElementsInternal_(locatorFn, context) {\n    const result = await locatorFn(context)\n    if (result instanceof WebElement) {\n      return [result]\n    }\n\n    if (!Array.isArray(result)) {\n      return []\n    }\n\n    return result.filter(function (item) {\n      return item instanceof WebElement\n    })\n  }\n\n  /** @override */\n  takeScreenshot() {\n    return this.execute(new command.Command(command.Name.SCREENSHOT))\n  }\n\n  /** @override */\n  manage() {\n    return new Options(this)\n  }\n\n  /** @override */\n  navigate() {\n    return new Navigation(this)\n  }\n\n  /** @override */\n  switchTo() {\n    return new TargetLocator(this)\n  }\n\n  validatePrintPageParams(keys, object) {\n    let page = {}\n    let margin = {}\n    let data\n    Object.keys(keys).forEach(function (key) {\n      data = keys[key]\n      let obj = {\n        orientation: function () {\n          object.orientation = data\n        },\n\n        scale: function () {\n          object.scale = data\n        },\n\n        background: function () {\n          object.background = data\n        },\n\n        width: function () {\n          page.width = data\n          object.page = page\n        },\n\n        height: function () {\n          page.height = data\n          object.page = page\n        },\n\n        top: function () {\n          margin.top = data\n          object.margin = margin\n        },\n\n        left: function () {\n          margin.left = data\n          object.margin = margin\n        },\n\n        bottom: function () {\n          margin.bottom = data\n          object.margin = margin\n        },\n\n        right: function () {\n          margin.right = data\n          object.margin = margin\n        },\n\n        shrinkToFit: function () {\n          object.shrinkToFit = data\n        },\n\n        pageRanges: function () {\n          object.pageRanges = data\n        },\n      }\n\n      if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n        throw new error.InvalidArgumentError(`Invalid Argument '${key}'`)\n      } else {\n        obj[key]()\n      }\n    })\n\n    return object\n  }\n\n  /** @override */\n  printPage(options = {}) {\n    let keys = options\n    let params = {}\n    let resultObj\n\n    let self = this\n    resultObj = self.validatePrintPageParams(keys, params)\n\n    return this.execute(\n      new command.Command(command.Name.PRINT_PAGE).setParameters(resultObj)\n    )\n  }\n\n  /**\n   * Creates a new WebSocket connection.\n   * @return {!Promise<resolved>} A new CDP instance.\n   */\n  async createCDPConnection(target) {\n    let debuggerUrl = null\n\n    const caps = await this.getCapabilities()\n\n    if (process.env.SELENIUM_REMOTE_URL) {\n      const host = new URL(process.env.SELENIUM_REMOTE_URL).host\n      const sessionId = await this.getSession().then((session) =>\n        session.getId()\n      )\n      debuggerUrl = `ws://${host}/session/${sessionId}/se/cdp`\n    } else {\n      const seCdp = caps['map_'].get('se:cdp')\n      const vendorInfo =\n        caps['map_'].get(this.VENDOR_COMMAND_PREFIX + ':chromeOptions') ||\n        caps['map_'].get(this.VENDOR_CAPABILITY_PREFIX + ':edgeOptions') ||\n        caps['map_'].get('moz:debuggerAddress') ||\n        new Map()\n      debuggerUrl = seCdp || vendorInfo['debuggerAddress'] || vendorInfo\n    }\n    this._wsUrl = await this.getWsUrl(debuggerUrl, target, caps)\n    return new Promise((resolve, reject) => {\n      try {\n        this._wsConnection = new WebSocket(\n          this._wsUrl.replace('localhost', '127.0.0.1')\n        )\n        this._cdpConnection = new cdp.CdpConnection(this._wsConnection)\n      } catch (err) {\n        reject(err)\n        return\n      }\n\n      this._wsConnection.on('open', async () => {\n        await this.getCdpTargets()\n      })\n\n      this._wsConnection.on('message', async (message) => {\n        const params = JSON.parse(message)\n        if (params.result) {\n          if (params.result.targetInfos) {\n            const targets = params.result.targetInfos\n            const page = targets.find((info) => info.type === 'page')\n            if (page) {\n              this.targetID = page.targetId\n              this._cdpConnection.execute(\n                'Target.attachToTarget',\n                { targetId: this.targetID, flatten: true },\n                null\n              )\n            } else {\n              reject('Unable to find Page target.')\n            }\n          }\n          if (params.result.sessionId) {\n            this.sessionId = params.result.sessionId\n            this._cdpConnection.sessionId = this.sessionId\n            resolve(this._cdpConnection)\n          }\n        }\n      })\n\n      this._wsConnection.on('error', (error) => {\n        reject(error)\n      })\n    })\n  }\n\n  async getCdpTargets() {\n    this._cdpConnection.execute('Target.getTargets')\n  }\n\n  /**\n   * Initiates bidi connection using 'webSocketUrl'\n   * @returns {BIDI}\n   */\n  async getBidi() {\n    const caps = await this.getCapabilities()\n    let WebSocketUrl = caps['map_'].get('webSocketUrl')\n    return new BIDI(WebSocketUrl.replace('localhost', '127.0.0.1'))\n  }\n\n  /**\n   * Retrieves 'webSocketDebuggerUrl' by sending a http request using debugger address\n   * @param {string} debuggerAddress\n   * @param target\n   * @param caps\n   * @return {string} Returns parsed webSocketDebuggerUrl obtained from the http request\n   */\n  async getWsUrl(debuggerAddress, target, caps) {\n    if (target && cdpTargets.indexOf(target.toLowerCase()) === -1) {\n      throw new error.InvalidArgumentError('invalid target value')\n    }\n\n    if (debuggerAddress.match(/\\/se\\/cdp/)) {\n      return debuggerAddress\n    }\n\n    let path\n    if (target === 'page' && caps['map_'].get('browserName') !== 'firefox') {\n      path = '/json'\n    } else if (\n      target === 'page' &&\n      caps['map_'].get('browserName') === 'firefox'\n    ) {\n      path = '/json/list'\n    } else {\n      path = '/json/version'\n    }\n\n    let request = new http.Request('GET', path)\n    let client = new http.HttpClient('http://' + debuggerAddress)\n    let response = await client.send(request)\n\n    if (target.toLowerCase() === 'page') {\n      return JSON.parse(response.body)[0]['webSocketDebuggerUrl']\n    } else {\n      return JSON.parse(response.body)['webSocketDebuggerUrl']\n    }\n  }\n\n  /**\n   * Sets a listener for Fetch.authRequired event from CDP\n   * If event is triggered, it enters username and password\n   * and allows the test to move forward\n   * @param {string} username\n   * @param {string} password\n   * @param connection CDP Connection\n   */\n  async register(username, password, connection) {\n    this._wsConnection.on('message', (message) => {\n      const params = JSON.parse(message)\n\n      if (params.method === 'Fetch.authRequired') {\n        const requestParams = params['params']\n        connection.execute('Fetch.continueWithAuth', {\n          requestId: requestParams['requestId'],\n          authChallengeResponse: {\n            response: 'ProvideCredentials',\n            username: username,\n            password: password,\n          },\n        })\n      } else if (params.method === 'Fetch.requestPaused') {\n        const requestPausedParams = params['params']\n        connection.execute('Fetch.continueRequest', {\n          requestId: requestPausedParams['requestId'],\n        })\n      }\n    })\n\n    await connection.execute(\n      'Fetch.enable',\n      {\n        handleAuthRequests: true,\n      },\n      null\n    )\n    await connection.execute(\n      'Network.setCacheDisabled',\n      {\n        cacheDisabled: true,\n      },\n      null\n    )\n  }\n\n  /**\n   * Handle Network interception requests\n   * @param connection WebSocket connection to the browser\n   * @param httpResponse Object representing what we are intercepting\n   *                     as well as what should be returned.\n   * @param callback callback called when we intercept requests.\n   */\n  async onIntercept(connection, httpResponse, callback) {\n    this._wsConnection.on('message', (message) => {\n      const params = JSON.parse(message)\n      if (params.method === 'Fetch.requestPaused') {\n        const requestPausedParams = params['params']\n        if (requestPausedParams.request.url == httpResponse.urlToIntercept) {\n          connection.execute('Fetch.fulfillRequest', {\n            requestId: requestPausedParams['requestId'],\n            responseCode: httpResponse.status,\n            responseHeaders: httpResponse.headers,\n            body: httpResponse.body,\n          })\n          callback()\n        } else {\n          connection.execute('Fetch.continueRequest', {\n            requestId: requestPausedParams['requestId'],\n          })\n        }\n      }\n    })\n\n    await connection.execute('Fetch.enable', {}, null)\n    await connection.execute(\n      'Network.setCacheDisabled',\n      {\n        cacheDisabled: true,\n      },\n      null\n    )\n  }\n  /**\n   *\n   * @param connection\n   * @param callback\n   * @returns {Promise<void>}\n   */\n  async onLogEvent(connection, callback) {\n    this._wsConnection.on('message', (message) => {\n      const params = JSON.parse(message)\n      if (params.method === 'Runtime.consoleAPICalled') {\n        const consoleEventParams = params['params']\n        let event = {\n          type: consoleEventParams['type'],\n          timestamp: new Date(consoleEventParams['timestamp']),\n          args: consoleEventParams['args'],\n        }\n\n        callback(event)\n      }\n\n      if (params.method === 'Log.entryAdded') {\n        const logEventParams = params['params']\n        const logEntry = logEventParams['entry']\n        let event = {\n          level: logEntry['level'],\n          timestamp: new Date(logEntry['timestamp']),\n          message: logEntry['text'],\n        }\n\n        callback(event)\n      }\n    })\n    await connection.execute('Runtime.enable', {}, null)\n  }\n\n  /**\n   *\n   * @param connection\n   * @param callback\n   * @returns {Promise<void>}\n   */\n  async onLogException(connection, callback) {\n    await connection.execute('Runtime.enable', {}, null)\n\n    this._wsConnection.on('message', (message) => {\n      const params = JSON.parse(message)\n\n      if (params.method === 'Runtime.exceptionThrown') {\n        const exceptionEventParams = params['params']\n        let event = {\n          exceptionDetails: exceptionEventParams['exceptionDetails'],\n          timestamp: new Date(exceptionEventParams['timestamp']),\n        }\n\n        callback(event)\n      }\n    })\n  }\n\n  /**\n   * @param connection\n   * @param callback\n   * @returns {Promise<void>}\n   */\n  async logMutationEvents(connection, callback) {\n    await connection.execute('Runtime.enable', {}, null)\n    await connection.execute('Page.enable', {}, null)\n\n    await connection.execute(\n      'Runtime.addBinding',\n      {\n        name: '__webdriver_attribute',\n      },\n      null\n    )\n\n    let mutationListener = ''\n    try {\n      // Depending on what is running the code it could appear in 2 different places which is why we try\n      // here and then the other location\n      mutationListener = fs\n        .readFileSync(\n          './javascript/node/selenium-webdriver/lib/atoms/mutation-listener.js',\n          'utf-8'\n        )\n        .toString()\n    } catch {\n      mutationListener = fs\n        .readFileSync(\n          path.resolve(__dirname, './atoms/mutation-listener.js'),\n          'utf-8'\n        )\n        .toString()\n    }\n\n    this.executeScript(mutationListener)\n\n    await connection.execute(\n      'Page.addScriptToEvaluateOnNewDocument',\n      {\n        source: mutationListener,\n      },\n      null\n    )\n\n    this._wsConnection.on('message', async (message) => {\n      const params = JSON.parse(message)\n      if (params.method === 'Runtime.bindingCalled') {\n        let payload = JSON.parse(params['params']['payload'])\n        let elements = await this.findElements({\n          css: '*[data-__webdriver_id=' + by.escapeCss(payload['target']) + ']',\n        })\n\n        if (elements.length === 0) {\n          return\n        }\n\n        let event = {\n          element: elements[0],\n          attribute_name: payload['name'],\n          current_value: payload['value'],\n          old_value: payload['oldValue'],\n        }\n        callback(event)\n      }\n    })\n  }\n\n  async pinScript(script) {\n    let pinnedScript = new PinnedScript(script)\n    let connection\n    if (Object.is(this._cdpConnection, undefined)) {\n      connection = await this.createCDPConnection('page')\n    } else {\n      connection = this._cdpConnection\n    }\n\n    await connection.execute('Page.enable', {}, null)\n\n    await connection.execute(\n      'Runtime.evaluate',\n      {\n        expression: pinnedScript.creationScript(),\n      },\n      null\n    )\n\n    let result = await connection.send(\n      'Page.addScriptToEvaluateOnNewDocument',\n      {\n        source: pinnedScript.creationScript(),\n      }\n    )\n\n    pinnedScript.scriptId = result['result']['identifier']\n\n    this.pinnedScripts_[pinnedScript.handle] = pinnedScript\n\n    return pinnedScript\n  }\n\n  async unpinScript(script) {\n    if (script && !(script instanceof PinnedScript)) {\n      throw Error(`Pass valid PinnedScript object. Received: ${script}`)\n    }\n\n    if (script.handle in this.pinnedScripts_) {\n      let connection\n      if (Object.is(this._cdpConnection, undefined)) {\n        connection = this.createCDPConnection('page')\n      } else {\n        connection = this._cdpConnection\n      }\n\n      await connection.execute('Page.enable', {}, null)\n\n      await connection.execute(\n        'Runtime.evaluate',\n        {\n          expression: script.removalScript(),\n        },\n        null\n      )\n\n      await connection.execute(\n        'Page.removeScriptToEvaluateOnLoad',\n        {\n          identifier: script.scriptId,\n        },\n        null\n      )\n\n      delete this.pinnedScripts_[script.handle]\n    }\n  }\n\n  /**\n   *\n   * @returns The value of authenticator ID added\n   */\n  virtualAuthenticatorId() {\n    return this.authenticatorId_\n  }\n\n  /**\n   * Adds a virtual authenticator with the given options.\n   * @param options VirtualAuthenticatorOptions object to set authenticator options.\n   */\n  async addVirtualAuthenticator(options) {\n    this.authenticatorId_ = await this.execute(\n      new command.Command(command.Name.ADD_VIRTUAL_AUTHENTICATOR).setParameters(\n        options.toDict()\n      )\n    )\n  }\n\n  /**\n   * Removes a previously added virtual authenticator. The authenticator is no\n   * longer valid after removal, so no methods may be called.\n   */\n  async removeVirtualAuthenticator() {\n    await this.execute(\n      new command.Command(\n        command.Name.REMOVE_VIRTUAL_AUTHENTICATOR\n      ).setParameter('authenticatorId', this.authenticatorId_)\n    )\n    this.authenticatorId_ = null\n  }\n\n  /**\n   * Injects a credential into the authenticator.\n   * @param credential Credential to be added\n   */\n  async addCredential(credential) {\n    credential = credential.toDict()\n    credential['authenticatorId'] = this.authenticatorId_\n    await this.execute(\n      new command.Command(command.Name.ADD_CREDENTIAL).setParameters(credential)\n    )\n  }\n\n  /**\n   *\n   * @returns The list of credentials owned by the authenticator.\n   */\n  async getCredentials() {\n    let credential_data = await this.execute(\n      new command.Command(command.Name.GET_CREDENTIALS).setParameter(\n        'authenticatorId',\n        this.virtualAuthenticatorId()\n      )\n    )\n    var credential_list = []\n    for (var i = 0; i < credential_data.length; i++) {\n      credential_list.push(new Credential().fromDict(credential_data[i]))\n    }\n    return credential_list\n  }\n\n  /**\n   * Removes a credential from the authenticator.\n   * @param credential_id The ID of the credential to be removed.\n   */\n  async removeCredential(credential_id) {\n    // If credential_id is not a base64url, then convert it to base64url.\n    if (Array.isArray(credential_id)) {\n      credential_id = Buffer.from(credential_id).toString('base64url')\n    }\n\n    await this.execute(\n      new command.Command(command.Name.REMOVE_CREDENTIAL)\n        .setParameter('credentialId', credential_id)\n        .setParameter('authenticatorId', this.authenticatorId_)\n    )\n  }\n\n  /**\n   * Removes all the credentials from the authenticator.\n   */\n  async removeAllCredentials() {\n    await this.execute(\n      new command.Command(command.Name.REMOVE_ALL_CREDENTIALS).setParameter(\n        'authenticatorId',\n        this.authenticatorId_\n      )\n    )\n  }\n\n  /**\n   * Sets whether the authenticator will simulate success or fail on user verification.\n   * @param verified true if the authenticator will pass user verification, false otherwise.\n   */\n  async setUserVerified(verified) {\n    await this.execute(\n      new command.Command(command.Name.SET_USER_VERIFIED)\n        .setParameter('authenticatorId', this.authenticatorId_)\n        .setParameter('isUserVerified', verified)\n    )\n  }\n}\n\n/**\n * Interface for navigating back and forth in the browser history.\n *\n * This class should never be instantiated directly. Instead, obtain an instance\n * with\n *\n *    webdriver.navigate()\n *\n * @see WebDriver#navigate()\n */\nclass Navigation {\n  /**\n   * @param {!WebDriver} driver The parent driver.\n   * @private\n   */\n  constructor(driver) {\n    /** @private {!WebDriver} */\n    this.driver_ = driver\n  }\n\n  /**\n   * Navigates to a new URL.\n   *\n   * @param {string} url The URL to navigate to.\n   * @return {!Promise<void>} A promise that will be resolved when the URL\n   *     has been loaded.\n   */\n  to(url) {\n    return this.driver_.execute(\n      new command.Command(command.Name.GET).setParameter('url', url)\n    )\n  }\n\n  /**\n   * Moves backwards in the browser history.\n   *\n   * @return {!Promise<void>} A promise that will be resolved when the\n   *     navigation event has completed.\n   */\n  back() {\n    return this.driver_.execute(new command.Command(command.Name.GO_BACK))\n  }\n\n  /**\n   * Moves forwards in the browser history.\n   *\n   * @return {!Promise<void>} A promise that will be resolved when the\n   *     navigation event has completed.\n   */\n  forward() {\n    return this.driver_.execute(new command.Command(command.Name.GO_FORWARD))\n  }\n\n  /**\n   * Refreshes the current page.\n   *\n   * @return {!Promise<void>} A promise that will be resolved when the\n   *     navigation event has completed.\n   */\n  refresh() {\n    return this.driver_.execute(new command.Command(command.Name.REFRESH))\n  }\n}\n\n/**\n * Provides methods for managing browser and driver state.\n *\n * This class should never be instantiated directly. Instead, obtain an instance\n * with {@linkplain WebDriver#manage() webdriver.manage()}.\n */\nclass Options {\n  /**\n   * @param {!WebDriver} driver The parent driver.\n   * @private\n   */\n  constructor(driver) {\n    /** @private {!WebDriver} */\n    this.driver_ = driver\n  }\n\n  /**\n   * Adds a cookie.\n   *\n   * __Sample Usage:__\n   *\n   *     // Set a basic cookie.\n   *     driver.manage().addCookie({name: 'foo', value: 'bar'});\n   *\n   *     // Set a cookie that expires in 10 minutes.\n   *     let expiry = new Date(Date.now() + (10 * 60 * 1000));\n   *     driver.manage().addCookie({name: 'foo', value: 'bar', expiry});\n   *\n   *     // The cookie expiration may also be specified in seconds since epoch.\n   *     driver.manage().addCookie({\n   *       name: 'foo',\n   *       value: 'bar',\n   *       expiry: Math.floor(Date.now() / 1000)\n   *     });\n   *\n   * @param {!Options.Cookie} spec Defines the cookie to add.\n   * @return {!Promise<void>} A promise that will be resolved\n   *     when the cookie has been added to the page.\n   * @throws {error.InvalidArgumentError} if any of the cookie parameters are\n   *     invalid.\n   * @throws {TypeError} if `spec` is not a cookie object.\n   */\n  addCookie({ name, value, path, domain, secure, httpOnly, expiry, sameSite }) {\n    // We do not allow '=' or ';' in the name.\n    if (/[;=]/.test(name)) {\n      throw new error.InvalidArgumentError('Invalid cookie name \"' + name + '\"')\n    }\n\n    // We do not allow ';' in value.\n    if (/;/.test(value)) {\n      throw new error.InvalidArgumentError(\n        'Invalid cookie value \"' + value + '\"'\n      )\n    }\n\n    if (typeof expiry === 'number') {\n      expiry = Math.floor(expiry)\n    } else if (expiry instanceof Date) {\n      let date = /** @type {!Date} */ (expiry)\n      expiry = Math.floor(date.getTime() / 1000)\n    }\n\n    if (sameSite && !['Strict', 'Lax', 'None'].includes(sameSite)) {\n      throw new error.InvalidArgumentError(\n        `Invalid sameSite cookie value '${sameSite}'. It should be one of \"Lax\", \"Strict\" or \"None\"`\n      )\n    }\n\n    if (sameSite === 'None' && !secure) {\n      throw new error.InvalidArgumentError(\n        'Invalid cookie configuration: SameSite=None must be Secure'\n      )\n    }\n\n    return this.driver_.execute(\n      new command.Command(command.Name.ADD_COOKIE).setParameter('cookie', {\n        name: name,\n        value: value,\n        path: path,\n        domain: domain,\n        secure: !!secure,\n        httpOnly: !!httpOnly,\n        expiry: expiry,\n        sameSite: sameSite,\n      })\n    )\n  }\n\n  /**\n   * Deletes all cookies visible to the current page.\n   *\n   * @return {!Promise<void>} A promise that will be resolved\n   *     when all cookies have been deleted.\n   */\n  deleteAllCookies() {\n    return this.driver_.execute(\n      new command.Command(command.Name.DELETE_ALL_COOKIES)\n    )\n  }\n\n  /**\n   * Deletes the cookie with the given name. This command is a no-op if there is\n   * no cookie with the given name visible to the current page.\n   *\n   * @param {string} name The name of the cookie to delete.\n   * @return {!Promise<void>} A promise that will be resolved\n   *     when the cookie has been deleted.\n   */\n  deleteCookie(name) {\n    return this.driver_.execute(\n      new command.Command(command.Name.DELETE_COOKIE).setParameter('name', name)\n    )\n  }\n\n  /**\n   * Retrieves all cookies visible to the current page. Each cookie will be\n   * returned as a JSON object as described by the WebDriver wire protocol.\n   *\n   * @return {!Promise<!Array<!Options.Cookie>>} A promise that will be\n   *     resolved with the cookies visible to the current browsing context.\n   */\n  getCookies() {\n    return this.driver_.execute(\n      new command.Command(command.Name.GET_ALL_COOKIES)\n    )\n  }\n\n  /**\n   * Retrieves the cookie with the given name. Returns null if there is no such\n   * cookie. The cookie will be returned as a JSON object as described by the\n   * WebDriver wire protocol.\n   *\n   * @param {string} name The name of the cookie to retrieve.\n   * @return {!Promise<?Options.Cookie>} A promise that will be resolved\n   *     with the named cookie\n   * @throws {error.NoSuchCookieError} if there is no such cookie.\n   */\n  async getCookie(name) {\n    try {\n      const cookie = await this.driver_.execute(\n        new command.Command(command.Name.GET_COOKIE).setParameter('name', name)\n      )\n      return cookie\n    } catch (err) {\n      if (\n        !(err instanceof error.UnknownCommandError) &&\n        !(err instanceof error.UnsupportedOperationError)\n      ) {\n        throw err\n      }\n\n      const cookies = await this.getCookies()\n      for (let cookie of cookies) {\n        if (cookie && cookie['name'] === name) {\n          return cookie\n        }\n      }\n      return null\n    }\n  }\n\n  /**\n   * Fetches the timeouts currently configured for the current session.\n   *\n   * @return {!Promise<{script: number,\n   *                             pageLoad: number,\n   *                             implicit: number}>} A promise that will be\n   *     resolved with the timeouts currently configured for the current\n   *     session.\n   * @see #setTimeouts()\n   */\n  getTimeouts() {\n    return this.driver_.execute(new command.Command(command.Name.GET_TIMEOUT))\n  }\n\n  /**\n   * Sets the timeout durations associated with the current session.\n   *\n   * The following timeouts are supported (all timeouts are specified in\n   * milliseconds):\n   *\n   * -  `implicit` specifies the maximum amount of time to wait for an element\n   *    locator to succeed when {@linkplain WebDriver#findElement locating}\n   *    {@linkplain WebDriver#findElements elements} on the page.\n   *    Defaults to 0 milliseconds.\n   *\n   * -  `pageLoad` specifies the maximum amount of time to wait for a page to\n   *    finishing loading. Defaults to 300000 milliseconds.\n   *\n   * -  `script` specifies the maximum amount of time to wait for an\n   *    {@linkplain WebDriver#executeScript evaluated script} to run. If set to\n   *    `null`, the script timeout will be indefinite.\n   *    Defaults to 30000 milliseconds.\n   *\n   * @param {{script: (number|null|undefined),\n   *          pageLoad: (number|null|undefined),\n   *          implicit: (number|null|undefined)}} conf\n   *     The desired timeout configuration.\n   * @return {!Promise<void>} A promise that will be resolved when the timeouts\n   *     have been set.\n   * @throws {!TypeError} if an invalid options object is provided.\n   * @see #getTimeouts()\n   * @see <https://w3c.github.io/webdriver/webdriver-spec.html#dfn-set-timeouts>\n   */\n  setTimeouts({ script, pageLoad, implicit } = {}) {\n    let cmd = new command.Command(command.Name.SET_TIMEOUT)\n\n    let valid = false\n    function setParam(key, value) {\n      if (value === null || typeof value === 'number') {\n        valid = true\n        cmd.setParameter(key, value)\n      } else if (typeof value !== 'undefined') {\n        throw TypeError(\n          'invalid timeouts configuration:' +\n            ` expected \"${key}\" to be a number, got ${typeof value}`\n        )\n      }\n    }\n    setParam('implicit', implicit)\n    setParam('pageLoad', pageLoad)\n    setParam('script', script)\n\n    if (valid) {\n      return this.driver_.execute(cmd).catch(() => {\n        // Fallback to the legacy method.\n        let cmds = []\n        if (typeof script === 'number') {\n          cmds.push(legacyTimeout(this.driver_, 'script', script))\n        }\n        if (typeof implicit === 'number') {\n          cmds.push(legacyTimeout(this.driver_, 'implicit', implicit))\n        }\n        if (typeof pageLoad === 'number') {\n          cmds.push(legacyTimeout(this.driver_, 'page load', pageLoad))\n        }\n        return Promise.all(cmds)\n      })\n    }\n    throw TypeError('no timeouts specified')\n  }\n\n  /**\n   * @return {!Logs} The interface for managing driver logs.\n   */\n  logs() {\n    return new Logs(this.driver_)\n  }\n\n  /**\n   * @return {!Window} The interface for managing the current window.\n   */\n  window() {\n    return new Window(this.driver_)\n  }\n}\n\n/**\n * @param {!WebDriver} driver\n * @param {string} type\n * @param {number} ms\n * @return {!Promise<void>}\n */\nfunction legacyTimeout(driver, type, ms) {\n  return driver.execute(\n    new command.Command(command.Name.SET_TIMEOUT)\n      .setParameter('type', type)\n      .setParameter('ms', ms)\n  )\n}\n\n/**\n * A record object describing a browser cookie.\n *\n * @record\n */\nOptions.Cookie = function () {}\n\n/**\n * The name of the cookie.\n *\n * @type {string}\n */\nOptions.Cookie.prototype.name\n\n/**\n * The cookie value.\n *\n * @type {string}\n */\nOptions.Cookie.prototype.value\n\n/**\n * The cookie path. Defaults to \"/\" when adding a cookie.\n *\n * @type {(string|undefined)}\n */\nOptions.Cookie.prototype.path\n\n/**\n * The domain the cookie is visible to. Defaults to the current browsing\n * context's document's URL when adding a cookie.\n *\n * @type {(string|undefined)}\n */\nOptions.Cookie.prototype.domain\n\n/**\n * Whether the cookie is a secure cookie. Defaults to false when adding a new\n * cookie.\n *\n * @type {(boolean|undefined)}\n */\nOptions.Cookie.prototype.secure\n\n/**\n * Whether the cookie is an HTTP only cookie. Defaults to false when adding a\n * new cookie.\n *\n * @type {(boolean|undefined)}\n */\nOptions.Cookie.prototype.httpOnly\n\n/**\n * When the cookie expires.\n *\n * When {@linkplain Options#addCookie() adding a cookie}, this may be specified\n * as a {@link Date} object, or in _seconds_ since Unix epoch (January 1, 1970).\n *\n * The expiry is always returned in seconds since epoch when\n * {@linkplain Options#getCookies() retrieving cookies} from the browser.\n *\n * @type {(!Date|number|undefined)}\n */\nOptions.Cookie.prototype.expiry\n\n/**\n * When the cookie applies to a SameSite policy.\n *\n * When {@linkplain Options#addCookie() adding a cookie}, this may be specified\n * as a {@link string} object which is one of 'Lax', 'Strict' or 'None'.\n *\n *\n * @type {(string|undefined)}\n */\nOptions.Cookie.prototype.sameSite\n\n/**\n * An interface for managing the current window.\n *\n * This class should never be instantiated directly. Instead, obtain an instance\n * with\n *\n *    webdriver.manage().window()\n *\n * @see WebDriver#manage()\n * @see Options#window()\n */\nclass Window {\n  /**\n   * @param {!WebDriver} driver The parent driver.\n   * @private\n   */\n  constructor(driver) {\n    /** @private {!WebDriver} */\n    this.driver_ = driver\n  }\n\n  /**\n   * Retrieves a rect describing the current top-level window's size and\n   * position.\n   *\n   * @return {!Promise<{x: number, y: number, width: number, height: number}>}\n   *     A promise that will resolve to the window rect of the current window.\n   */\n  getRect() {\n    return this.driver_.execute(\n      new command.Command(command.Name.GET_WINDOW_RECT)\n    )\n  }\n\n  /**\n   * Sets the current top-level window's size and position. You may update just\n   * the size by omitting `x` & `y`, or just the position by omitting\n   * `width` & `height` options.\n   *\n   * @param {{x: (number|undefined),\n   *          y: (number|undefined),\n   *          width: (number|undefined),\n   *          height: (number|undefined)}} options\n   *     The desired window size and position.\n   * @return {!Promise<{x: number, y: number, width: number, height: number}>}\n   *     A promise that will resolve to the current window's updated window\n   *     rect.\n   */\n  setRect({ x, y, width, height }) {\n    return this.driver_.execute(\n      new command.Command(command.Name.SET_WINDOW_RECT).setParameters({\n        x,\n        y,\n        width,\n        height,\n      })\n    )\n  }\n\n  /**\n   * Maximizes the current window. The exact behavior of this command is\n   * specific to individual window managers, but typically involves increasing\n   * the window to the maximum available size without going full-screen.\n   *\n   * @return {!Promise<void>} A promise that will be resolved when the command\n   *     has completed.\n   */\n  maximize() {\n    return this.driver_.execute(\n      new command.Command(command.Name.MAXIMIZE_WINDOW).setParameter(\n        'windowHandle',\n        'current'\n      )\n    )\n  }\n\n  /**\n   * Minimizes the current window. The exact behavior of this command is\n   * specific to individual window managers, but typically involves hiding\n   * the window in the system tray.\n   *\n   * @return {!Promise<void>} A promise that will be resolved when the command\n   *     has completed.\n   */\n  minimize() {\n    return this.driver_.execute(\n      new command.Command(command.Name.MINIMIZE_WINDOW)\n    )\n  }\n\n  /**\n   * Invokes the \"full screen\" operation on the current window. The exact\n   * behavior of this command is specific to individual window managers, but\n   * this will typically increase the window size to the size of the physical\n   * display and hide the browser chrome.\n   *\n   * @return {!Promise<void>} A promise that will be resolved when the command\n   *     has completed.\n   * @see <https://fullscreen.spec.whatwg.org/#fullscreen-an-element>\n   */\n  fullscreen() {\n    return this.driver_.execute(\n      new command.Command(command.Name.FULLSCREEN_WINDOW)\n    )\n  }\n\n  /**\n   * Gets the width and height of the current window\n   * @param windowHandle\n   * @returns {Promise<{width: *, height: *}>}\n   */\n  async getSize(windowHandle = 'current') {\n    if (windowHandle !== 'current') {\n      console.warn(\n        `Only 'current' window is supported for W3C compatible browsers.`\n      )\n    }\n\n    const rect = await this.getRect()\n    return { height: rect.height, width: rect.width }\n  }\n\n  /**\n   * Sets the width and height of the current window. (window.resizeTo)\n   * @param x\n   * @param y\n   * @param width\n   * @param height\n   * @param windowHandle\n   * @returns {Promise<void>}\n   */\n  async setSize(\n    { x = 0, y = 0, width = 0, height = 0 },\n    windowHandle = 'current'\n  ) {\n    if (windowHandle !== 'current') {\n      console.warn(\n        `Only 'current' window is supported for W3C compatible browsers.`\n      )\n    }\n\n    await this.setRect({ x, y, width, height })\n  }\n}\n\n/**\n * Interface for managing WebDriver log records.\n *\n * This class should never be instantiated directly. Instead, obtain an\n * instance with\n *\n *     webdriver.manage().logs()\n *\n * @see WebDriver#manage()\n * @see Options#logs()\n */\nclass Logs {\n  /**\n   * @param {!WebDriver} driver The parent driver.\n   * @private\n   */\n  constructor(driver) {\n    /** @private {!WebDriver} */\n    this.driver_ = driver\n  }\n\n  /**\n   * Fetches available log entries for the given type.\n   *\n   * Note that log buffers are reset after each call, meaning that available\n   * log entries correspond to those entries not yet returned for a given log\n   * type. In practice, this means that this call will return the available log\n   * entries since the last call, or from the start of the session.\n   *\n   * @param {!logging.Type} type The desired log type.\n   * @return {!Promise<!Array.<!logging.Entry>>} A\n   *   promise that will resolve to a list of log entries for the specified\n   *   type.\n   */\n  get(type) {\n    let cmd = new command.Command(command.Name.GET_LOG).setParameter(\n      'type',\n      type\n    )\n    return this.driver_.execute(cmd).then(function (entries) {\n      return entries.map(function (entry) {\n        if (!(entry instanceof logging.Entry)) {\n          return new logging.Entry(\n            entry['level'],\n            entry['message'],\n            entry['timestamp'],\n            entry['type']\n          )\n        }\n        return entry\n      })\n    })\n  }\n\n  /**\n   * Retrieves the log types available to this driver.\n   * @return {!Promise<!Array<!logging.Type>>} A\n   *     promise that will resolve to a list of available log types.\n   */\n  getAvailableLogTypes() {\n    return this.driver_.execute(\n      new command.Command(command.Name.GET_AVAILABLE_LOG_TYPES)\n    )\n  }\n}\n\n/**\n * An interface for changing the focus of the driver to another frame or window.\n *\n * This class should never be instantiated directly. Instead, obtain an\n * instance with\n *\n *     webdriver.switchTo()\n *\n * @see WebDriver#switchTo()\n */\nclass TargetLocator {\n  /**\n   * @param {!WebDriver} driver The parent driver.\n   * @private\n   */\n  constructor(driver) {\n    /** @private {!WebDriver} */\n    this.driver_ = driver\n  }\n\n  /**\n   * Locates the DOM element on the current page that corresponds to\n   * `document.activeElement` or `document.body` if the active element is not\n   * available.\n   *\n   * @return {!WebElementPromise} The active element.\n   */\n  activeElement() {\n    const id = this.driver_.execute(\n      new command.Command(command.Name.GET_ACTIVE_ELEMENT)\n    )\n    return new WebElementPromise(this.driver_, id)\n  }\n\n  /**\n   * Switches focus of all future commands to the topmost frame in the current\n   * window.\n   *\n   * @return {!Promise<void>} A promise that will be resolved\n   *     when the driver has changed focus to the default content.\n   */\n  defaultContent() {\n    return this.driver_.execute(\n      new command.Command(command.Name.SWITCH_TO_FRAME).setParameter('id', null)\n    )\n  }\n\n  /**\n   * Changes the focus of all future commands to another frame on the page. The\n   * target frame may be specified as one of the following:\n   *\n   * - A number that specifies a (zero-based) index into [window.frames](\n   *   https://developer.mozilla.org/en-US/docs/Web/API/Window.frames).\n   * - A {@link WebElement} reference, which correspond to a `frame` or `iframe`\n   *   DOM element.\n   * - The `null` value, to select the topmost frame on the page. Passing `null`\n   *   is the same as calling {@link #defaultContent defaultContent()}.\n   *\n   * If the specified frame can not be found, the returned promise will be\n   * rejected with a {@linkplain error.NoSuchFrameError}.\n   *\n   * @param {(number|string|WebElement|null)} id The frame locator.\n   * @return {!Promise<void>} A promise that will be resolved\n   *     when the driver has changed focus to the specified frame.\n   */\n  frame(id) {\n    let frameReference = id\n    if (typeof id === 'string') {\n      frameReference = this.driver_\n        .findElement({ id })\n        .catch((_) => this.driver_.findElement({ name: id }))\n    }\n\n    return this.driver_.execute(\n      new command.Command(command.Name.SWITCH_TO_FRAME).setParameter(\n        'id',\n        frameReference\n      )\n    )\n  }\n\n  /**\n   * Changes the focus of all future commands to the parent frame of the\n   * currently selected frame. This command has no effect if the driver is\n   * already focused on the top-level browsing context.\n   *\n   * @return {!Promise<void>} A promise that will be resolved when the command\n   *     has completed.\n   */\n  parentFrame() {\n    return this.driver_.execute(\n      new command.Command(command.Name.SWITCH_TO_FRAME_PARENT)\n    )\n  }\n\n  /**\n   * Changes the focus of all future commands to another window. Windows may be\n   * specified by their {@code window.name} attribute or by its handle\n   * (as returned by {@link WebDriver#getWindowHandles}).\n   *\n   * If the specified window cannot be found, the returned promise will be\n   * rejected with a {@linkplain error.NoSuchWindowError}.\n   *\n   * @param {string} nameOrHandle The name or window handle of the window to\n   *     switch focus to.\n   * @return {!Promise<void>} A promise that will be resolved\n   *     when the driver has changed focus to the specified window.\n   */\n  window(nameOrHandle) {\n    return this.driver_.execute(\n      new command.Command(command.Name.SWITCH_TO_WINDOW)\n        // \"name\" supports the legacy drivers. \"handle\" is the W3C\n        // compliant parameter.\n        .setParameter('name', nameOrHandle)\n        .setParameter('handle', nameOrHandle)\n    )\n  }\n\n  /**\n   * Creates a new browser window and switches the focus for future\n   * commands of this driver to the new window.\n   *\n   * @param {string} typeHint 'window' or 'tab'. The created window is not\n   *     guaranteed to be of the requested type; if the driver does not support\n   *     the requested type, a new browser window will be created of whatever type\n   *     the driver does support.\n   * @return {!Promise<void>} A promise that will be resolved\n   *     when the driver has changed focus to the new window.\n   */\n  newWindow(typeHint) {\n    const driver = this.driver_\n    return this.driver_\n      .execute(\n        new command.Command(command.Name.SWITCH_TO_NEW_WINDOW).setParameter(\n          'type',\n          typeHint\n        )\n      )\n      .then(function (response) {\n        return driver.switchTo().window(response.handle)\n      })\n  }\n\n  /**\n   * Changes focus to the active modal dialog, such as those opened by\n   * `window.alert()`, `window.confirm()`, and `window.prompt()`. The returned\n   * promise will be rejected with a\n   * {@linkplain error.NoSuchAlertError} if there are no open alerts.\n   *\n   * @return {!AlertPromise} The open alert.\n   */\n  alert() {\n    const text = this.driver_.execute(\n      new command.Command(command.Name.GET_ALERT_TEXT)\n    )\n    const driver = this.driver_\n    return new AlertPromise(\n      driver,\n      text.then(function (text) {\n        return new Alert(driver, text)\n      })\n    )\n  }\n}\n\n//////////////////////////////////////////////////////////////////////////////\n//\n//  WebElement\n//\n//////////////////////////////////////////////////////////////////////////////\n\nconst LEGACY_ELEMENT_ID_KEY = 'ELEMENT'\nconst ELEMENT_ID_KEY = 'element-6066-11e4-a52e-4f735466cecf'\nconst SHADOW_ROOT_ID_KEY = 'shadow-6066-11e4-a52e-4f735466cecf'\n\n/**\n * Represents a DOM element. WebElements can be found by searching from the\n * document root using a {@link WebDriver} instance, or by searching\n * under another WebElement:\n *\n *     driver.get('http://www.google.com');\n *     var searchForm = driver.findElement(By.tagName('form'));\n *     var searchBox = searchForm.findElement(By.name('q'));\n *     searchBox.sendKeys('webdriver');\n */\nclass WebElement {\n  /**\n   * @param {!WebDriver} driver the parent WebDriver instance for this element.\n   * @param {(!IThenable<string>|string)} id The server-assigned opaque ID for\n   *     the underlying DOM element.\n   */\n  constructor(driver, id) {\n    /** @private {!WebDriver} */\n    this.driver_ = driver\n\n    /** @private {!Promise<string>} */\n    this.id_ = Promise.resolve(id)\n  }\n\n  /**\n   * @param {string} id The raw ID.\n   * @param {boolean=} noLegacy Whether to exclude the legacy element key.\n   * @return {!Object} The element ID for use with WebDriver's wire protocol.\n   */\n  static buildId(id, noLegacy = false) {\n    return noLegacy\n      ? { [ELEMENT_ID_KEY]: id }\n      : { [ELEMENT_ID_KEY]: id, [LEGACY_ELEMENT_ID_KEY]: id }\n  }\n\n  /**\n   * Extracts the encoded WebElement ID from the object.\n   *\n   * @param {?} obj The object to extract the ID from.\n   * @return {string} the extracted ID.\n   * @throws {TypeError} if the object is not a valid encoded ID.\n   */\n  static extractId(obj) {\n    return webElement.extractId(obj)\n  }\n\n  /**\n   * @param {?} obj the object to test.\n   * @return {boolean} whether the object is a valid encoded WebElement ID.\n   */\n  static isId(obj) {\n    return webElement.isId(obj)\n  }\n\n  /**\n   * Compares two WebElements for equality.\n   *\n   * @param {!WebElement} a A WebElement.\n   * @param {!WebElement} b A WebElement.\n   * @return {!Promise<boolean>} A promise that will be\n   *     resolved to whether the two WebElements are equal.\n   */\n  static async equals(a, b) {\n    if (a === b) {\n      return true\n    }\n    return a.driver_.executeScript('return arguments[0] === arguments[1]', a, b)\n  }\n\n  /** @return {!WebDriver} The parent driver for this instance. */\n  getDriver() {\n    return this.driver_\n  }\n\n  /**\n   * @return {!Promise<string>} A promise that resolves to\n   *     the server-assigned opaque ID assigned to this element.\n   */\n  getId() {\n    return this.id_\n  }\n\n  /**\n   * @return {!Object} Returns the serialized representation of this WebElement.\n   */\n  [Symbols.serialize]() {\n    return this.getId().then(WebElement.buildId)\n  }\n\n  /**\n   * Schedules a command that targets this element with the parent WebDriver\n   * instance. Will ensure this element's ID is included in the command\n   * parameters under the \"id\" key.\n   *\n   * @param {!command.Command} command The command to schedule.\n   * @return {!Promise<T>} A promise that will be resolved with the result.\n   * @template T\n   * @see WebDriver#schedule\n   * @private\n   */\n  execute_(command) {\n    command.setParameter('id', this)\n    return this.driver_.execute(command)\n  }\n\n  /**\n   * Schedule a command to find a descendant of this element. If the element\n   * cannot be found, the returned promise will be rejected with a\n   * {@linkplain error.NoSuchElementError NoSuchElementError}.\n   *\n   * The search criteria for an element may be defined using one of the static\n   * factories on the {@link by.By} class, or as a short-hand\n   * {@link ./by.ByHash} object. For example, the following two statements\n   * are equivalent:\n   *\n   *     var e1 = element.findElement(By.id('foo'));\n   *     var e2 = element.findElement({id:'foo'});\n   *\n   * You may also provide a custom locator function, which takes as input this\n   * instance and returns a {@link WebElement}, or a promise that will resolve\n   * to a WebElement. If the returned promise resolves to an array of\n   * WebElements, WebDriver will use the first element. For example, to find the\n   * first visible link on a page, you could write:\n   *\n   *     var link = element.findElement(firstVisibleLink);\n   *\n   *     function firstVisibleLink(element) {\n   *       var links = element.findElements(By.tagName('a'));\n   *       return promise.filter(links, function(link) {\n   *         return link.isDisplayed();\n   *       });\n   *     }\n   *\n   * @param {!(by.By|Function)} locator The locator strategy to use when\n   *     searching for the element.\n   * @return {!WebElementPromise} A WebElement that can be used to issue\n   *     commands against the located element. If the element is not found, the\n   *     element will be invalidated and all scheduled commands aborted.\n   */\n  findElement(locator) {\n    locator = by.checkedLocator(locator)\n    let id\n    if (typeof locator === 'function') {\n      id = this.driver_.findElementInternal_(locator, this)\n    } else {\n      let cmd = new command.Command(command.Name.FIND_CHILD_ELEMENT)\n        .setParameter('using', locator.using)\n        .setParameter('value', locator.value)\n      id = this.execute_(cmd)\n    }\n    return new WebElementPromise(this.driver_, id)\n  }\n\n  /**\n   * Locates all the descendants of this element that match the given search\n   * criteria.\n   *\n   * @param {!(by.By|Function)} locator The locator strategy to use when\n   *     searching for the element.\n   * @return {!Promise<!Array<!WebElement>>} A promise that will resolve to an\n   *     array of WebElements.\n   */\n  async findElements(locator) {\n    locator = by.checkedLocator(locator)\n    if (typeof locator === 'function') {\n      return this.driver_.findElementsInternal_(locator, this)\n    } else {\n      let cmd = new command.Command(command.Name.FIND_CHILD_ELEMENTS)\n        .setParameter('using', locator.using)\n        .setParameter('value', locator.value)\n      let result = await this.execute_(cmd)\n      return Array.isArray(result) ? result : []\n    }\n  }\n\n  /**\n   * Clicks on this element.\n   *\n   * @return {!Promise<void>} A promise that will be resolved when the click\n   *     command has completed.\n   */\n  click() {\n    return this.execute_(new command.Command(command.Name.CLICK_ELEMENT))\n  }\n\n  /**\n   * Types a key sequence on the DOM element represented by this instance.\n   *\n   * Modifier keys (SHIFT, CONTROL, ALT, META) are stateful; once a modifier is\n   * processed in the key sequence, that key state is toggled until one of the\n   * following occurs:\n   *\n   * - The modifier key is encountered again in the sequence. At this point the\n   *   state of the key is toggled (along with the appropriate keyup/down\n   *   events).\n   * - The {@link input.Key.NULL} key is encountered in the sequence. When\n   *   this key is encountered, all modifier keys current in the down state are\n   *   released (with accompanying keyup events). The NULL key can be used to\n   *   simulate common keyboard shortcuts:\n   *\n   *         element.sendKeys(\"text was\",\n   *                          Key.CONTROL, \"a\", Key.NULL,\n   *                          \"now text is\");\n   *         // Alternatively:\n   *         element.sendKeys(\"text was\",\n   *                          Key.chord(Key.CONTROL, \"a\"),\n   *                          \"now text is\");\n   *\n   * - The end of the key sequence is encountered. When there are no more keys\n   *   to type, all depressed modifier keys are released (with accompanying\n   *   keyup events).\n   *\n   * If this element is a file input ({@code <input type=\"file\">}), the\n   * specified key sequence should specify the path to the file to attach to\n   * the element. This is analogous to the user clicking \"Browse...\" and entering\n   * the path into the file select dialog.\n   *\n   *     var form = driver.findElement(By.css('form'));\n   *     var element = form.findElement(By.css('input[type=file]'));\n   *     element.sendKeys('/path/to/file.txt');\n   *     form.submit();\n   *\n   * For uploads to function correctly, the entered path must reference a file\n   * on the _browser's_ machine, not the local machine running this script. When\n   * running against a remote Selenium server, a {@link input.FileDetector}\n   * may be used to transparently copy files to the remote machine before\n   * attempting to upload them in the browser.\n   *\n   * __Note:__ On browsers where native keyboard events are not supported\n   * (e.g. Firefox on OS X), key events will be synthesized. Special\n   * punctuation keys will be synthesized according to a standard QWERTY en-us\n   * keyboard layout.\n   *\n   * @param {...(number|string|!IThenable<(number|string)>)} args The\n   *     sequence of keys to type. Number keys may be referenced numerically or\n   *     by string (1 or '1'). All arguments will be joined into a single\n   *     sequence.\n   * @return {!Promise<void>} A promise that will be resolved when all keys\n   *     have been typed.\n   */\n  async sendKeys(...args) {\n    let keys = []\n    ;(await Promise.all(args)).forEach((key) => {\n      let type = typeof key\n      if (type === 'number') {\n        key = String(key)\n      } else if (type !== 'string') {\n        throw TypeError('each key must be a number or string; got ' + type)\n      }\n\n      // The W3C protocol requires keys to be specified as an array where\n      // each element is a single key.\n      keys.push(...key)\n    })\n\n    if (!this.driver_.fileDetector_) {\n      return this.execute_(\n        new command.Command(command.Name.SEND_KEYS_TO_ELEMENT)\n          .setParameter('text', keys.join(''))\n          .setParameter('value', keys)\n      )\n    }\n\n    try {\n      keys = await this.driver_.fileDetector_.handleFile(\n        this.driver_,\n        keys.join('')\n      )\n    } catch (ex) {\n      console.log(\n        'Error trying parse string as a file with file detector; sending keys instead' +\n          ex\n      )\n    }\n\n    return this.execute_(\n      new command.Command(command.Name.SEND_KEYS_TO_ELEMENT)\n        .setParameter('text', keys)\n        .setParameter('value', keys.split(''))\n    )\n  }\n\n  /**\n   * Retrieves the element's tag name.\n   *\n   * @return {!Promise<string>} A promise that will be resolved with the\n   *     element's tag name.\n   */\n  getTagName() {\n    return this.execute_(new command.Command(command.Name.GET_ELEMENT_TAG_NAME))\n  }\n\n  /**\n   * Retrieves the value of a computed style property for this instance. If\n   * the element inherits the named style from its parent, the parent will be\n   * queried for its value.  Where possible, color values will be converted to\n   * their hex representation (e.g. #00ff00 instead of rgb(0, 255, 0)).\n   *\n   * _Warning:_ the value returned will be as the browser interprets it, so\n   * it may be tricky to form a proper assertion.\n   *\n   * @param {string} cssStyleProperty The name of the CSS style property to look\n   *     up.\n   * @return {!Promise<string>} A promise that will be resolved with the\n   *     requested CSS value.\n   */\n  getCssValue(cssStyleProperty) {\n    const name = command.Name.GET_ELEMENT_VALUE_OF_CSS_PROPERTY\n    return this.execute_(\n      new command.Command(name).setParameter('propertyName', cssStyleProperty)\n    )\n  }\n\n  /**\n   * Retrieves the current value of the given attribute of this element.\n   * Will return the current value, even if it has been modified after the page\n   * has been loaded. More exactly, this method will return the value\n   * of the given attribute, unless that attribute is not present, in which case\n   * the value of the property with the same name is returned. If neither value\n   * is set, null is returned (for example, the \"value\" property of a textarea\n   * element). The \"style\" attribute is converted as best can be to a\n   * text representation with a trailing semicolon. The following are deemed to\n   * be \"boolean\" attributes and will return either \"true\" or null:\n   *\n   * async, autofocus, autoplay, checked, compact, complete, controls, declare,\n   * defaultchecked, defaultselected, defer, disabled, draggable, ended,\n   * formnovalidate, hidden, indeterminate, iscontenteditable, ismap, itemscope,\n   * loop, multiple, muted, nohref, noresize, noshade, novalidate, nowrap, open,\n   * paused, pubdate, readonly, required, reversed, scoped, seamless, seeking,\n   * selected, spellcheck, truespeed, willvalidate\n   *\n   * Finally, the following commonly mis-capitalized attribute/property names\n   * are evaluated as expected:\n   *\n   * - \"class\"\n   * - \"readonly\"\n   *\n   * @param {string} attributeName The name of the attribute to query.\n   * @return {!Promise<?string>} A promise that will be\n   *     resolved with the attribute's value. The returned value will always be\n   *     either a string or null.\n   */\n  getAttribute(attributeName) {\n    return this.execute_(\n      new command.Command(command.Name.GET_ELEMENT_ATTRIBUTE).setParameter(\n        'name',\n        attributeName\n      )\n    )\n  }\n\n  /**\n   * Get the value of the given attribute of the element.\n   * <p>\n   * This method, unlike {@link #getAttribute(String)}, returns the value of the attribute with the\n   * given name but not the property with the same name.\n   * <p>\n   * The following are deemed to be \"boolean\" attributes, and will return either \"true\" or null:\n   * <p>\n   * async, autofocus, autoplay, checked, compact, complete, controls, declare, defaultchecked,\n   * defaultselected, defer, disabled, draggable, ended, formnovalidate, hidden, indeterminate,\n   * iscontenteditable, ismap, itemscope, loop, multiple, muted, nohref, noresize, noshade,\n   * novalidate, nowrap, open, paused, pubdate, readonly, required, reversed, scoped, seamless,\n   * seeking, selected, truespeed, willvalidate\n   * <p>\n   * See <a href=\"https://w3c.github.io/webdriver/#get-element-attribute\">W3C WebDriver specification</a>\n   * for more details.\n   *\n   * @param attributeName The name of the attribute.\n   * @return The attribute's value or null if the value is not set.\n   */\n\n  getDomAttribute(attributeName) {\n    return this.execute_(\n      new command.Command(command.Name.GET_DOM_ATTRIBUTE).setParameter(\n        'name',\n        attributeName\n      )\n    )\n  }\n\n  /**\n   * Get the given property of the referenced web element\n   * @param {string} propertyName The name of the attribute to query.\n   * @return {!Promise<string>} A promise that will be\n   *     resolved with the element's property value\n   */\n  getProperty(propertyName) {\n    return this.execute_(\n      new command.Command(command.Name.GET_ELEMENT_PROPERTY).setParameter(\n        'name',\n        propertyName\n      )\n    )\n  }\n\n  /**\n   * Get the shadow root of the current web element.\n   * @returns {!Promise<ShadowRoot>} A promise that will be\n   *      resolved with the elements shadow root or rejected\n   *      with {@link NoSuchShadowRootError}\n   */\n  getShadowRoot() {\n    return this.execute_(new command.Command(command.Name.GET_SHADOW_ROOT))\n  }\n\n  /**\n   * Get the visible (i.e. not hidden by CSS) innerText of this element,\n   * including sub-elements, without any leading or trailing whitespace.\n   *\n   * @return {!Promise<string>} A promise that will be\n   *     resolved with the element's visible text.\n   */\n  getText() {\n    return this.execute_(new command.Command(command.Name.GET_ELEMENT_TEXT))\n  }\n\n  /**\n   * Get the computed WAI-ARIA role of element.\n   *\n   * @return {!Promise<string>} A promise that will be\n   *     resolved with the element's computed role.\n   */\n  getAriaRole() {\n    return this.execute_(new command.Command(command.Name.GET_COMPUTED_ROLE))\n  }\n\n  /**\n   * Get the computed WAI-ARIA label of element.\n   *\n   * @return {!Promise<string>} A promise that will be\n   *     resolved with the element's computed label.\n   */\n  getAccessibleName() {\n    return this.execute_(new command.Command(command.Name.GET_COMPUTED_LABEL))\n  }\n  /**\n   * Returns an object describing an element's location, in pixels relative to\n   * the document element, and the element's size in pixels.\n   *\n   * @return {!Promise<{width: number, height: number, x: number, y: number}>}\n   *     A promise that will resolve with the element's rect.\n   */\n  getRect() {\n    return this.execute_(new command.Command(command.Name.GET_ELEMENT_RECT))\n  }\n\n  /**\n   * Tests whether this element is enabled, as dictated by the `disabled`\n   * attribute.\n   *\n   * @return {!Promise<boolean>} A promise that will be\n   *     resolved with whether this element is currently enabled.\n   */\n  isEnabled() {\n    return this.execute_(new command.Command(command.Name.IS_ELEMENT_ENABLED))\n  }\n\n  /**\n   * Tests whether this element is selected.\n   *\n   * @return {!Promise<boolean>} A promise that will be\n   *     resolved with whether this element is currently selected.\n   */\n  isSelected() {\n    return this.execute_(new command.Command(command.Name.IS_ELEMENT_SELECTED))\n  }\n\n  /**\n   * Submits the form containing this element (or this element if it is itself\n   * a FORM element). his command is a no-op if the element is not contained in\n   * a form.\n   *\n   * @return {!Promise<void>} A promise that will be resolved\n   *     when the form has been submitted.\n   */\n  submit() {\n    const script =\n      '/* submitForm */var form = arguments[0];\\n' +\n      'while (form.nodeName != \"FORM\" && form.parentNode) {\\n' +\n      '  form = form.parentNode;\\n' +\n      '}\\n' +\n      \"if (!form) { throw Error('Unable to find containing form element'); }\\n\" +\n      \"if (!form.ownerDocument) { throw Error('Unable to find owning document'); }\\n\" +\n      \"var e = form.ownerDocument.createEvent('Event');\\n\" +\n      \"e.initEvent('submit', true, true);\\n\" +\n      'if (form.dispatchEvent(e)) { HTMLFormElement.prototype.submit.call(form) }\\n'\n\n    return this.driver_.executeScript(script, this)\n  }\n\n  /**\n   * Clear the `value` of this element. This command has no effect if the\n   * underlying DOM element is neither a text INPUT element nor a TEXTAREA\n   * element.\n   *\n   * @return {!Promise<void>} A promise that will be resolved\n   *     when the element has been cleared.\n   */\n  clear() {\n    return this.execute_(new command.Command(command.Name.CLEAR_ELEMENT))\n  }\n\n  /**\n   * Test whether this element is currently displayed.\n   *\n   * @return {!Promise<boolean>} A promise that will be\n   *     resolved with whether this element is currently visible on the page.\n   */\n  isDisplayed() {\n    return this.execute_(new command.Command(command.Name.IS_ELEMENT_DISPLAYED))\n  }\n\n  /**\n   * Take a screenshot of the visible region encompassed by this element's\n   * bounding rectangle.\n   *\n   * @return {!Promise<string>} A promise that will be\n   *     resolved to the screenshot as a base-64 encoded PNG.\n   */\n  takeScreenshot() {\n    return this.execute_(\n      new command.Command(command.Name.TAKE_ELEMENT_SCREENSHOT)\n    )\n  }\n}\n\n/**\n * WebElementPromise is a promise that will be fulfilled with a WebElement.\n * This serves as a forward proxy on WebElement, allowing calls to be\n * scheduled without directly on this instance before the underlying\n * WebElement has been fulfilled. In other words, the following two statements\n * are equivalent:\n *\n *     driver.findElement({id: 'my-button'}).click();\n *     driver.findElement({id: 'my-button'}).then(function(el) {\n *       return el.click();\n *     });\n *\n * @implements {IThenable<!WebElement>}\n * @final\n */\nclass WebElementPromise extends WebElement {\n  /**\n   * @param {!WebDriver} driver The parent WebDriver instance for this\n   *     element.\n   * @param {!Promise<!WebElement>} el A promise\n   *     that will resolve to the promised element.\n   */\n  constructor(driver, el) {\n    super(driver, 'unused')\n\n    /** @override */\n    this.then = el.then.bind(el)\n\n    /** @override */\n    this.catch = el.catch.bind(el)\n\n    /**\n     * Defers returning the element ID until the wrapped WebElement has been\n     * resolved.\n     * @override\n     */\n    this.getId = function () {\n      return el.then(function (el) {\n        return el.getId()\n      })\n    }\n  }\n}\n\n//////////////////////////////////////////////////////////////////////////////\n//\n//  ShadowRoot\n//\n//////////////////////////////////////////////////////////////////////////////\n\n/**\n * Represents a ShadowRoot of a {@link WebElement}. Provides functions to\n * retrieve elements that live in the DOM below the ShadowRoot.\n */\nclass ShadowRoot {\n  constructor(driver, id) {\n    this.driver_ = driver\n    this.id_ = id\n  }\n\n  /**\n   * Extracts the encoded ShadowRoot ID from the object.\n   *\n   * @param {?} obj The object to extract the ID from.\n   * @return {string} the extracted ID.\n   * @throws {TypeError} if the object is not a valid encoded ID.\n   */\n  static extractId(obj) {\n    if (obj && typeof obj === 'object') {\n      if (typeof obj[SHADOW_ROOT_ID_KEY] === 'string') {\n        return obj[SHADOW_ROOT_ID_KEY]\n      }\n    }\n    throw new TypeError('object is not a ShadowRoot ID')\n  }\n\n  /**\n   * @param {?} obj the object to test.\n   * @return {boolean} whether the object is a valid encoded WebElement ID.\n   */\n  static isId(obj) {\n    return (\n      obj &&\n      typeof obj === 'object' &&\n      typeof obj[SHADOW_ROOT_ID_KEY] === 'string'\n    )\n  }\n\n  /**\n   * @return {!Object} Returns the serialized representation of this ShadowRoot.\n   */\n  [Symbols.serialize]() {\n    return this.getId()\n  }\n\n  /**\n   * Schedules a command that targets this element with the parent WebDriver\n   * instance. Will ensure this element's ID is included in the command\n   * parameters under the \"id\" key.\n   *\n   * @param {!command.Command} command The command to schedule.\n   * @return {!Promise<T>} A promise that will be resolved with the result.\n   * @template T\n   * @see WebDriver#schedule\n   * @private\n   */\n  execute_(command) {\n    command.setParameter('id', this)\n    return this.driver_.execute(command)\n  }\n\n  /**\n   * Schedule a command to find a descendant of this ShadowROot. If the element\n   * cannot be found, the returned promise will be rejected with a\n   * {@linkplain error.NoSuchElementError NoSuchElementError}.\n   *\n   * The search criteria for an element may be defined using one of the static\n   * factories on the {@link by.By} class, or as a short-hand\n   * {@link ./by.ByHash} object. For example, the following two statements\n   * are equivalent:\n   *\n   *     var e1 = shadowroot.findElement(By.id('foo'));\n   *     var e2 = shadowroot.findElement({id:'foo'});\n   *\n   * You may also provide a custom locator function, which takes as input this\n   * instance and returns a {@link WebElement}, or a promise that will resolve\n   * to a WebElement. If the returned promise resolves to an array of\n   * WebElements, WebDriver will use the first element. For example, to find the\n   * first visible link on a page, you could write:\n   *\n   *     var link = element.findElement(firstVisibleLink);\n   *\n   *     function firstVisibleLink(shadowRoot) {\n   *       var links = shadowRoot.findElements(By.tagName('a'));\n   *       return promise.filter(links, function(link) {\n   *         return link.isDisplayed();\n   *       });\n   *     }\n   *\n   * @param {!(by.By|Function)} locator The locator strategy to use when\n   *     searching for the element.\n   * @return {!WebElementPromise} A WebElement that can be used to issue\n   *     commands against the located element. If the element is not found, the\n   *     element will be invalidated and all scheduled commands aborted.\n   */\n  findElement(locator) {\n    locator = by.checkedLocator(locator)\n    let id\n    if (typeof locator === 'function') {\n      id = this.driver_.findElementInternal_(locator, this)\n    } else {\n      let cmd = new command.Command(command.Name.FIND_ELEMENT_FROM_SHADOWROOT)\n        .setParameter('using', locator.using)\n        .setParameter('value', locator.value)\n      id = this.execute_(cmd)\n    }\n    return new ShadowRootPromise(this.driver_, id)\n  }\n\n  /**\n   * Locates all the descendants of this element that match the given search\n   * criteria.\n   *\n   * @param {!(by.By|Function)} locator The locator strategy to use when\n   *     searching for the element.\n   * @return {!Promise<!Array<!WebElement>>} A promise that will resolve to an\n   *     array of WebElements.\n   */\n  async findElements(locator) {\n    locator = by.checkedLocator(locator)\n    if (typeof locator === 'function') {\n      return this.driver_.findElementsInternal_(locator, this)\n    } else {\n      let cmd = new command.Command(command.Name.FIND_ELEMENTS_FROM_SHADOWROOT)\n        .setParameter('using', locator.using)\n        .setParameter('value', locator.value)\n      let result = await this.execute_(cmd)\n      return Array.isArray(result) ? result : []\n    }\n  }\n\n  getId() {\n    return this.id_\n  }\n}\n\n/**\n * ShadowRootPromise is a promise that will be fulfilled with a WebElement.\n * This serves as a forward proxy on ShadowRoot, allowing calls to be\n * scheduled without directly on this instance before the underlying\n * ShadowRoot has been fulfilled.\n *\n * @implements { IThenable<!ShadowRoot>}\n * @final\n */\nclass ShadowRootPromise extends ShadowRoot {\n  /**\n   * @param {!WebDriver} driver The parent WebDriver instance for this\n   *     element.\n   * @param {!Promise<!ShadowRoot>} shadow A promise\n   *     that will resolve to the promised element.\n   */\n  constructor(driver, shadow) {\n    super(driver, 'unused')\n\n    /** @override */\n    this.then = shadow.then.bind(shadow)\n\n    /** @override */\n    this.catch = shadow.catch.bind(shadow)\n\n    /**\n     * Defers returning the ShadowRoot ID until the wrapped WebElement has been\n     * resolved.\n     * @override\n     */\n    this.getId = function () {\n      return shadow.then(function (shadow) {\n        return shadow.getId()\n      })\n    }\n  }\n}\n\n//////////////////////////////////////////////////////////////////////////////\n//\n//  Alert\n//\n//////////////////////////////////////////////////////////////////////////////\n\n/**\n * Represents a modal dialog such as {@code alert}, {@code confirm}, or\n * {@code prompt}. Provides functions to retrieve the message displayed with\n * the alert, accept or dismiss the alert, and set the response text (in the\n * case of {@code prompt}).\n */\nclass Alert {\n  /**\n   * @param {!WebDriver} driver The driver controlling the browser this alert\n   *     is attached to.\n   * @param {string} text The message text displayed with this alert.\n   */\n  constructor(driver, text) {\n    /** @private {!WebDriver} */\n    this.driver_ = driver\n\n    /** @private {!Promise<string>} */\n    this.text_ = Promise.resolve(text)\n  }\n\n  /**\n   * Retrieves the message text displayed with this alert. For instance, if the\n   * alert were opened with alert(\"hello\"), then this would return \"hello\".\n   *\n   * @return {!Promise<string>} A promise that will be\n   *     resolved to the text displayed with this alert.\n   */\n  getText() {\n    return this.text_\n  }\n\n  /**\n   * Accepts this alert.\n   *\n   * @return {!Promise<void>} A promise that will be resolved\n   *     when this command has completed.\n   */\n  accept() {\n    return this.driver_.execute(new command.Command(command.Name.ACCEPT_ALERT))\n  }\n\n  /**\n   * Dismisses this alert.\n   *\n   * @return {!Promise<void>} A promise that will be resolved\n   *     when this command has completed.\n   */\n  dismiss() {\n    return this.driver_.execute(new command.Command(command.Name.DISMISS_ALERT))\n  }\n\n  /**\n   * Sets the response text on this alert. This command will return an error if\n   * the underlying alert does not support response text (e.g. window.alert and\n   * window.confirm).\n   *\n   * @param {string} text The text to set.\n   * @return {!Promise<void>} A promise that will be resolved\n   *     when this command has completed.\n   */\n  sendKeys(text) {\n    return this.driver_.execute(\n      new command.Command(command.Name.SET_ALERT_TEXT).setParameter(\n        'text',\n        text\n      )\n    )\n  }\n}\n\n/**\n * AlertPromise is a promise that will be fulfilled with an Alert. This promise\n * serves as a forward proxy on an Alert, allowing calls to be scheduled\n * directly on this instance before the underlying Alert has been fulfilled. In\n * other words, the following two statements are equivalent:\n *\n *     driver.switchTo().alert().dismiss();\n *     driver.switchTo().alert().then(function(alert) {\n *       return alert.dismiss();\n *     });\n *\n * @implements {IThenable<!Alert>}\n * @final\n */\nclass AlertPromise extends Alert {\n  /**\n   * @param {!WebDriver} driver The driver controlling the browser this\n   *     alert is attached to.\n   * @param {!Promise<!Alert>} alert A thenable\n   *     that will be fulfilled with the promised alert.\n   */\n  constructor(driver, alert) {\n    super(driver, 'unused')\n\n    /** @override */\n    this.then = alert.then.bind(alert)\n\n    /** @override */\n    this.catch = alert.catch.bind(alert)\n\n    /**\n     * Defer returning text until the promised alert has been resolved.\n     * @override\n     */\n    this.getText = function () {\n      return alert.then(function (alert) {\n        return alert.getText()\n      })\n    }\n\n    /**\n     * Defers action until the alert has been located.\n     * @override\n     */\n    this.accept = function () {\n      return alert.then(function (alert) {\n        return alert.accept()\n      })\n    }\n\n    /**\n     * Defers action until the alert has been located.\n     * @override\n     */\n    this.dismiss = function () {\n      return alert.then(function (alert) {\n        return alert.dismiss()\n      })\n    }\n\n    /**\n     * Defers action until the alert has been located.\n     * @override\n     */\n    this.sendKeys = function (text) {\n      return alert.then(function (alert) {\n        return alert.sendKeys(text)\n      })\n    }\n  }\n}\n\n// PUBLIC API\n\nmodule.exports = {\n  Alert,\n  AlertPromise,\n  Condition,\n  Logs,\n  Navigation,\n  Options,\n  ShadowRoot,\n  TargetLocator,\n  IWebDriver,\n  WebDriver,\n  WebElement,\n  WebElementCondition,\n  WebElementPromise,\n  Window,\n}\n"],"mappings":"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;AACA;EAFE;IAAApF,GAAA;IAAAC,KAAA,EAGA,SAAAoF,WAAA,EAAa,CAAC;;IAEd;AACF;AACA;AACA;EAHE;IAAArF,GAAA;IAAAC,KAAA,EAIA,SAAAqF,gBAAA,EAAkB,CAAC;;IAEnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAtF,GAAA;IAAAC,KAAA,EAQA,SAAAsF,KAAA,EAAO,CAAC;;IAER;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVE;IAAAvF,GAAA;IAAAC,KAAA,EAWA,SAAAuF,QAAQC,OAAO,EAAE,CAAC,CAAC,CAAC;;IAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAnCE;IAAAzF,GAAA;IAAAC,KAAA,EAoCA,SAAAyF,cAAcC,MAAM,EAAW,CAAC,CAAC,CAAC;;IAElC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EA1EE;IAAA3F,GAAA;IAAAC,KAAA,EA2EA,SAAA2F,mBAAmBD,MAAM,EAAW,CAAC,CAAC,CAAC;;IAEvC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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"},"metadata":{},"sourceType":"script","externalDependencies":[]}