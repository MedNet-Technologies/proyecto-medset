{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\n/**\n * @fileoverview Defines types related to describing the capabilities of a\n * WebDriver session.\n */\nvar _createForOfIteratorHelper = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar Symbols = require('./symbols');\n\n/**\n * Recognized browser names.\n * @enum {string}\n */\nvar Browser = {\n  CHROME: 'chrome',\n  EDGE: 'MicrosoftEdge',\n  FIREFOX: 'firefox',\n  INTERNET_EXPLORER: 'internet explorer',\n  SAFARI: 'safari'\n};\n\n/**\n * Strategies for waiting for [document readiness] after a navigation\n * event.\n *\n * [document readiness]: https://html.spec.whatwg.org/#current-document-readiness\n *\n * @enum {string}\n */\nvar PageLoadStrategy = {\n  /**\n   * Indicates WebDriver should not wait on the document readiness state after a\n   * navigation event.\n   */\n  NONE: 'none',\n  /**\n   * Indicates WebDriver should wait for the document readiness state to\n   * become \"interactive\" after navigation.\n   */\n  EAGER: 'eager',\n  /**\n   * Indicates WebDriver should wait for the document readiness state to\n   * be \"complete\" after navigation. This is the default page loading strategy.\n   */\n  NORMAL: 'normal'\n};\n\n/**\n * Common platform names. These platforms are not explicitly defined by the\n * WebDriver spec, however, their use is encouraged for interoperability.\n *\n * @enum {string}\n * @see <https://w3c.github.io/webdriver/webdriver-spec.html>\n */\nvar Platform = {\n  LINUX: 'linux',\n  MAC: 'mac',\n  WINDOWS: 'windows'\n};\n\n/**\n * Record object defining the timeouts that apply to certain WebDriver actions.\n *\n * @record\n */\nfunction Timeouts() {}\n\n/**\n * Defines when, in milliseconds, to interrupt a script that is being\n * {@linkplain ./webdriver.IWebDriver#executeScript evaluated}.\n * @type {number}\n */\nTimeouts.prototype.script;\n\n/**\n * The timeout, in milliseconds, to apply to navigation events along with the\n * {@link PageLoadStrategy}.\n * @type {number}\n */\nTimeouts.prototype.pageLoad;\n\n/**\n * The maximum amount of time, in milliseconds, to spend attempting to\n * {@linkplain ./webdriver.IWebDriver#findElement locate} an element on the\n * current page.\n * @type {number}\n */\nTimeouts.prototype.implicit;\n\n/**\n * The possible default actions a WebDriver session can take to respond to\n * unhandled user prompts (`window.alert()`, `window.confirm()`, and\n * `window.prompt()`).\n *\n * @enum {string}\n */\nvar UserPromptHandler = {\n  /** All prompts should be silently accepted. */\n  ACCEPT: 'accept',\n  /** All prompts should be silently dismissed. */\n  DISMISS: 'dismiss',\n  /**\n   * All prompts should be automatically accepted, but an error should be\n   * returned to the next (or currently executing) WebDriver command.\n   */\n  ACCEPT_AND_NOTIFY: 'accept and notify',\n  /**\n   * All prompts should be automatically dismissed, but an error should be\n   * returned to the next (or currently executing) WebDriver command.\n   */\n  DISMISS_AND_NOTIFY: 'dismiss and notify',\n  /** All prompts should be left unhandled. */\n  IGNORE: 'ignore'\n};\n\n/**\n * The standard WebDriver capability keys.\n *\n * @enum {string}\n * @see <https://w3c.github.io/webdriver/webdriver-spec.html#capabilities>\n */\nvar Capability = {\n  /**\n   * Indicates whether a WebDriver session implicitly trusts otherwise untrusted\n   * and self-signed TLS certificates during navigation.\n   */\n  ACCEPT_INSECURE_TLS_CERTS: 'acceptInsecureCerts',\n  /**\n   * The browser name. Common browser names are defined in the\n   * {@link ./capabilities.Browser Browser} enum.\n   */\n  BROWSER_NAME: 'browserName',\n  /** Identifies the browser version. */\n  BROWSER_VERSION: 'browserVersion',\n  /**\n   * Key for the logging driver logging preferences.\n   * The browser name. Common browser names are defined in the\n   * {@link ./capabilities.Browser Browser} enum.\n   */\n  LOGGING_PREFS: 'goog:loggingPrefs',\n  /**\n   * Defines the session's\n   * {@linkplain ./capabilities.PageLoadStrategy page loading strategy}.\n   */\n  PAGE_LOAD_STRATEGY: 'pageLoadStrategy',\n  /**\n   * Identifies the operating system of the endpoint node. Common values\n   * recognized by the most WebDriver server implementations are predefined in\n   * the {@link ./capabilities.Platform Platform} enum.\n   */\n  PLATFORM_NAME: 'platformName',\n  /**\n   * Describes the proxy configuration to use for a new WebDriver session.\n   */\n  PROXY: 'proxy',\n  /**\n   * Indicates whether the remote end supports all of the window resizing and\n   * positioning commands:\n   *\n   * -  {@linkplain ./webdriver.Window#getRect Window.getRect()}\n   * -  {@linkplain ./webdriver.Window#setRect Window.setRect()}\n   * -  {@linkplain ./webdriver.Window#maximize Window.maximize()}\n   * -  {@linkplain ./webdriver.Window#minimize Window.minimize()}\n   * -  {@linkplain ./webdriver.Window#fullscreen Window.fullscreen()}\n   */\n  SET_WINDOW_RECT: 'setWindowRect',\n  /**\n   * Describes the {@linkplain ./capabilities.Timeouts timeouts} imposed on\n   * certain session operations.\n   */\n  TIMEOUTS: 'timeouts',\n  /**\n   * Defines how a WebDriver session should\n   * {@linkplain ./capabilities.UserPromptHandler respond} to unhandled user\n   * prompts.\n   */\n  UNHANDLED_PROMPT_BEHAVIOR: 'unhandledPromptBehavior',\n  /**\n   * Defines the current sessionâ€™s strict file interactability.\n   * Used to upload a file when strict file interactability is on\n   */\n  STRICT_FILE_INTERACTABILITY: 'strictFileInteractability'\n};\n\n/**\n * Converts a generic hash object to a map.\n * @param {!Object<string, ?>} hash The hash object.\n * @return {!Map<string, ?>} The converted map.\n */\nfunction toMap(hash) {\n  var m = new Map();\n  for (var key in hash) {\n    if (Object.prototype.hasOwnProperty.call(hash, key)) {\n      m.set(key, hash[key]);\n    }\n  }\n  return m;\n}\n\n/**\n * Describes a set of capabilities for a WebDriver session.\n */\nvar Capabilities = /*#__PURE__*/function (_Symbols$serialize) {\n  /**\n   * @param {(Capabilities|Map<string, ?>|Object)=} other Another set of\n   *     capabilities to initialize this instance from.\n   */\n  function Capabilities() {\n    var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n    _classCallCheck(this, Capabilities);\n    if (other instanceof Capabilities) {\n      other = other.map_;\n    } else if (other && !(other instanceof Map)) {\n      other = toMap(other);\n    }\n    /** @private @const {!Map<string, ?>} */\n    this.map_ = new Map(other);\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for Chrome.\n   */\n  _createClass(Capabilities, [{\n    key: _Symbols$serialize,\n    value:\n    /**\n     * @return {!Object<string, ?>} The JSON representation of this instance.\n     *     Note, the returned object may contain nested promised values.\n     * @suppress {checkTypes} Suppress [] access on a struct (state inherited from\n     *     Map).\n     */\n    function value() {\n      return serialize(this);\n    }\n\n    /**\n     * @param {string} key the parameter key to get.\n     * @return {T} the stored parameter value.\n     * @template T\n     */\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this.map_.get(key);\n    }\n\n    /**\n     * @param {string} key the key to test.\n     * @return {boolean} whether this capability set has the specified key.\n     */\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this.map_.has(key);\n    }\n\n    /**\n     * @return {!Iterator<string>} an iterator of the keys set.\n     */\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return this.map_.keys();\n    }\n\n    /** @return {number} The number of capabilities set. */\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.map_.size;\n    }\n\n    /**\n     * Merges another set of capabilities into this instance.\n     * @param {!(Capabilities|Map<String, ?>|Object<string, ?>)} other The other\n     *     set of capabilities to merge.\n     * @return {!Capabilities} A self reference.\n     */\n  }, {\n    key: \"merge\",\n    value: function merge(other) {\n      var _this = this;\n      if (other) {\n        var otherMap;\n        if (other instanceof Capabilities) {\n          otherMap = other.map_;\n        } else if (other instanceof Map) {\n          otherMap = other;\n        } else {\n          otherMap = toMap(other);\n        }\n        otherMap.forEach(function (value, key) {\n          _this.set(key, value);\n        });\n        return this;\n      } else {\n        throw new TypeError('no capabilities provided for merge');\n      }\n    }\n\n    /**\n     * Deletes an entry from this set of capabilities.\n     *\n     * @param {string} key the capability key to delete.\n     */\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      this.map_.delete(key);\n    }\n\n    /**\n     * @param {string} key The capability key.\n     * @param {*} value The capability value.\n     * @return {!Capabilities} A self reference.\n     * @throws {TypeError} If the `key` is not a string.\n     */\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      if (typeof key !== 'string') {\n        throw new TypeError('Capability keys must be strings: ' + typeof key);\n      }\n      this.map_.set(key, value);\n      return this;\n    }\n\n    /**\n     * Sets whether a WebDriver session should implicitly accept self-signed, or\n     * other untrusted TLS certificates on navigation.\n     *\n     * @param {boolean} accept whether to accept insecure certs.\n     * @return {!Capabilities} a self reference.\n     */\n  }, {\n    key: \"setAcceptInsecureCerts\",\n    value: function setAcceptInsecureCerts(accept) {\n      return this.set(Capability.ACCEPT_INSECURE_TLS_CERTS, accept);\n    }\n\n    /**\n     * @return {boolean} whether the session is configured to accept insecure\n     *     TLS certificates.\n     */\n  }, {\n    key: \"getAcceptInsecureCerts\",\n    value: function getAcceptInsecureCerts() {\n      return this.get(Capability.ACCEPT_INSECURE_TLS_CERTS);\n    }\n\n    /**\n     * Sets the name of the target browser.\n     *\n     * @param {(Browser|string)} name the browser name.\n     * @return {!Capabilities} a self reference.\n     */\n  }, {\n    key: \"setBrowserName\",\n    value: function setBrowserName(name) {\n      return this.set(Capability.BROWSER_NAME, name);\n    }\n\n    /**\n     * @return {(string|undefined)} the configured browser name, or undefined if\n     *     not set.\n     */\n  }, {\n    key: \"getBrowserName\",\n    value: function getBrowserName() {\n      return this.get(Capability.BROWSER_NAME);\n    }\n\n    /**\n     * Sets the desired version of the target browser.\n     *\n     * @param {string} version the desired version.\n     * @return {!Capabilities} a self reference.\n     */\n  }, {\n    key: \"setBrowserVersion\",\n    value: function setBrowserVersion(version) {\n      return this.set(Capability.BROWSER_VERSION, version);\n    }\n\n    /**\n     * @return {(string|undefined)} the configured browser version, or undefined\n     *     if not set.\n     */\n  }, {\n    key: \"getBrowserVersion\",\n    value: function getBrowserVersion() {\n      return this.get(Capability.BROWSER_VERSION);\n    }\n\n    /**\n     * Sets the desired page loading strategy for a new WebDriver session.\n     *\n     * @param {PageLoadStrategy} strategy the desired strategy.\n     * @return {!Capabilities} a self reference.\n     */\n  }, {\n    key: \"setPageLoadStrategy\",\n    value: function setPageLoadStrategy(strategy) {\n      return this.set(Capability.PAGE_LOAD_STRATEGY, strategy);\n    }\n\n    /**\n     * Returns the configured page load strategy.\n     *\n     * @return {(string|undefined)} the page load strategy.\n     */\n  }, {\n    key: \"getPageLoadStrategy\",\n    value: function getPageLoadStrategy() {\n      return this.get(Capability.PAGE_LOAD_STRATEGY);\n    }\n\n    /**\n     * Sets the target platform.\n     *\n     * @param {(Platform|string)} platform the target platform.\n     * @return {!Capabilities} a self reference.\n     */\n  }, {\n    key: \"setPlatform\",\n    value: function setPlatform(platform) {\n      return this.set(Capability.PLATFORM_NAME, platform);\n    }\n\n    /**\n     * @return {(string|undefined)} the configured platform or undefined if not\n     *     set.\n     */\n  }, {\n    key: \"getPlatform\",\n    value: function getPlatform() {\n      return this.get(Capability.PLATFORM_NAME);\n    }\n\n    /**\n     * Sets the logging preferences. Preferences may be specified as a\n     * {@link ./logging.Preferences} instance, or as a map of log-type to\n     * log-level.\n     * @param {!(./logging.Preferences|Object<string>)} prefs The logging\n     *     preferences.\n     * @return {!Capabilities} A self reference.\n     */\n  }, {\n    key: \"setLoggingPrefs\",\n    value: function setLoggingPrefs(prefs) {\n      return this.set(Capability.LOGGING_PREFS, prefs);\n    }\n\n    /**\n     * Sets the proxy configuration for this instance.\n     * @param {proxy.Config} proxy The desired proxy configuration.\n     * @return {!Capabilities} A self reference.\n     */\n  }, {\n    key: \"setProxy\",\n    value: function setProxy(proxy) {\n      return this.set(Capability.PROXY, proxy);\n    }\n\n    /**\n     * @return {(proxy.Config|undefined)} the configured proxy settings, or\n     *     undefined if not set.\n     */\n  }, {\n    key: \"getProxy\",\n    value: function getProxy() {\n      return this.get(Capability.PROXY);\n    }\n\n    /**\n     * Sets the default action to take with an unexpected alert before returning\n     * an error. If unspecified, WebDriver will default to\n     * {@link UserPromptHandler.DISMISS_AND_NOTIFY}.\n     *\n     * @param {?UserPromptHandler} behavior The way WebDriver should respond to\n     *     unhandled user prompts.\n     * @return {!Capabilities} A self reference.\n     */\n  }, {\n    key: \"setAlertBehavior\",\n    value: function setAlertBehavior(behavior) {\n      return this.set(Capability.UNHANDLED_PROMPT_BEHAVIOR, behavior);\n    }\n\n    /**\n     * @return {(UserPromptHandler|undefined)} the behavior pattern for responding\n     *     to unhandled user prompts, or undefined if not set.\n     */\n  }, {\n    key: \"getAlertBehavior\",\n    value: function getAlertBehavior() {\n      return this.get(Capability.UNHANDLED_PROMPT_BEHAVIOR);\n    }\n\n    /**\n     * Sets the boolean flag configuration for this instance.\n     */\n  }, {\n    key: \"setStrictFileInteractability\",\n    value: function setStrictFileInteractability(strictFileInteractability) {\n      return this.set(Capability.STRICT_FILE_INTERACTABILITY, strictFileInteractability);\n    }\n  }], [{\n    key: \"chrome\",\n    value: function chrome() {\n      return new Capabilities().setBrowserName(Browser.CHROME);\n    }\n\n    /**\n     * @return {!Capabilities} A basic set of capabilities for Microsoft Edge.\n     */\n  }, {\n    key: \"edge\",\n    value: function edge() {\n      return new Capabilities().setBrowserName(Browser.EDGE);\n    }\n\n    /**\n     * @return {!Capabilities} A basic set of capabilities for Firefox.\n     */\n  }, {\n    key: \"firefox\",\n    value: function firefox() {\n      return new Capabilities().setBrowserName(Browser.FIREFOX).set('moz:debuggerAddress', true);\n    }\n\n    /**\n     * @return {!Capabilities} A basic set of capabilities for Internet Explorer.\n     */\n  }, {\n    key: \"ie\",\n    value: function ie() {\n      return new Capabilities().setBrowserName(Browser.INTERNET_EXPLORER);\n    }\n\n    /**\n     * @return {!Capabilities} A basic set of capabilities for Safari.\n     */\n  }, {\n    key: \"safari\",\n    value: function safari() {\n      return new Capabilities().setBrowserName(Browser.SAFARI);\n    }\n  }]);\n  return Capabilities;\n}(Symbols.serialize);\n/**\n * Serializes a capabilities object. This is defined as a standalone function\n * so it may be type checked (where Capabilities[Symbols.serialize] has type\n * checking disabled since it is defined with [] access on a struct).\n *\n * @param {!Capabilities} caps The capabilities to serialize.\n * @return {!Object<string, ?>} The JSON representation of this instance.\n *     Note, the returned object may contain nested promised values.\n */\nfunction serialize(caps) {\n  var ret = {};\n  var _iterator = _createForOfIteratorHelper(caps.keys()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      var cap = caps.get(key);\n      if (cap !== undefined && cap !== null) {\n        ret[key] = cap;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return ret;\n}\n\n// PUBLIC API\n\nmodule.exports = {\n  Browser: Browser,\n  Capabilities: Capabilities,\n  Capability: Capability,\n  PageLoadStrategy: PageLoadStrategy,\n  Platform: Platform,\n  Timeouts: Timeouts,\n  UserPromptHandler: UserPromptHandler\n};","map":{"version":3,"names":["_createForOfIteratorHelper","require","default","_classCallCheck","_createClass","Symbols","Browser","CHROME","EDGE","FIREFOX","INTERNET_EXPLORER","SAFARI","PageLoadStrategy","NONE","EAGER","NORMAL","Platform","LINUX","MAC","WINDOWS","Timeouts","prototype","script","pageLoad","implicit","UserPromptHandler","ACCEPT","DISMISS","ACCEPT_AND_NOTIFY","DISMISS_AND_NOTIFY","IGNORE","Capability","ACCEPT_INSECURE_TLS_CERTS","BROWSER_NAME","BROWSER_VERSION","LOGGING_PREFS","PAGE_LOAD_STRATEGY","PLATFORM_NAME","PROXY","SET_WINDOW_RECT","TIMEOUTS","UNHANDLED_PROMPT_BEHAVIOR","STRICT_FILE_INTERACTABILITY","toMap","hash","m","Map","key","Object","hasOwnProperty","call","set","Capabilities","_Symbols$serialize","other","arguments","length","undefined","map_","value","serialize","get","has","keys","size","merge","_this","otherMap","forEach","TypeError","_delete","delete","setAcceptInsecureCerts","accept","getAcceptInsecureCerts","setBrowserName","name","getBrowserName","setBrowserVersion","version","getBrowserVersion","setPageLoadStrategy","strategy","getPageLoadStrategy","setPlatform","platform","getPlatform","setLoggingPrefs","prefs","setProxy","proxy","getProxy","setAlertBehavior","behavior","getAlertBehavior","setStrictFileInteractability","strictFileInteractability","chrome","edge","firefox","ie","safari","caps","ret","_iterator","_step","s","n","done","cap","err","e","f","module","exports"],"sources":["D:/Guts/Documents/GitHub/proyecto-medset/medset/node_modules/selenium-webdriver/lib/capabilities.js"],"sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict'\n\n/**\n * @fileoverview Defines types related to describing the capabilities of a\n * WebDriver session.\n */\n\nconst Symbols = require('./symbols')\n\n/**\n * Recognized browser names.\n * @enum {string}\n */\nconst Browser = {\n  CHROME: 'chrome',\n  EDGE: 'MicrosoftEdge',\n  FIREFOX: 'firefox',\n  INTERNET_EXPLORER: 'internet explorer',\n  SAFARI: 'safari',\n}\n\n/**\n * Strategies for waiting for [document readiness] after a navigation\n * event.\n *\n * [document readiness]: https://html.spec.whatwg.org/#current-document-readiness\n *\n * @enum {string}\n */\nconst PageLoadStrategy = {\n  /**\n   * Indicates WebDriver should not wait on the document readiness state after a\n   * navigation event.\n   */\n  NONE: 'none',\n\n  /**\n   * Indicates WebDriver should wait for the document readiness state to\n   * become \"interactive\" after navigation.\n   */\n  EAGER: 'eager',\n\n  /**\n   * Indicates WebDriver should wait for the document readiness state to\n   * be \"complete\" after navigation. This is the default page loading strategy.\n   */\n  NORMAL: 'normal',\n}\n\n/**\n * Common platform names. These platforms are not explicitly defined by the\n * WebDriver spec, however, their use is encouraged for interoperability.\n *\n * @enum {string}\n * @see <https://w3c.github.io/webdriver/webdriver-spec.html>\n */\nconst Platform = {\n  LINUX: 'linux',\n  MAC: 'mac',\n  WINDOWS: 'windows',\n}\n\n/**\n * Record object defining the timeouts that apply to certain WebDriver actions.\n *\n * @record\n */\nfunction Timeouts() {}\n\n/**\n * Defines when, in milliseconds, to interrupt a script that is being\n * {@linkplain ./webdriver.IWebDriver#executeScript evaluated}.\n * @type {number}\n */\nTimeouts.prototype.script\n\n/**\n * The timeout, in milliseconds, to apply to navigation events along with the\n * {@link PageLoadStrategy}.\n * @type {number}\n */\nTimeouts.prototype.pageLoad\n\n/**\n * The maximum amount of time, in milliseconds, to spend attempting to\n * {@linkplain ./webdriver.IWebDriver#findElement locate} an element on the\n * current page.\n * @type {number}\n */\nTimeouts.prototype.implicit\n\n/**\n * The possible default actions a WebDriver session can take to respond to\n * unhandled user prompts (`window.alert()`, `window.confirm()`, and\n * `window.prompt()`).\n *\n * @enum {string}\n */\nconst UserPromptHandler = {\n  /** All prompts should be silently accepted. */\n  ACCEPT: 'accept',\n  /** All prompts should be silently dismissed. */\n  DISMISS: 'dismiss',\n  /**\n   * All prompts should be automatically accepted, but an error should be\n   * returned to the next (or currently executing) WebDriver command.\n   */\n  ACCEPT_AND_NOTIFY: 'accept and notify',\n  /**\n   * All prompts should be automatically dismissed, but an error should be\n   * returned to the next (or currently executing) WebDriver command.\n   */\n  DISMISS_AND_NOTIFY: 'dismiss and notify',\n  /** All prompts should be left unhandled. */\n  IGNORE: 'ignore',\n}\n\n/**\n * The standard WebDriver capability keys.\n *\n * @enum {string}\n * @see <https://w3c.github.io/webdriver/webdriver-spec.html#capabilities>\n */\nconst Capability = {\n  /**\n   * Indicates whether a WebDriver session implicitly trusts otherwise untrusted\n   * and self-signed TLS certificates during navigation.\n   */\n  ACCEPT_INSECURE_TLS_CERTS: 'acceptInsecureCerts',\n\n  /**\n   * The browser name. Common browser names are defined in the\n   * {@link ./capabilities.Browser Browser} enum.\n   */\n  BROWSER_NAME: 'browserName',\n\n  /** Identifies the browser version. */\n  BROWSER_VERSION: 'browserVersion',\n\n  /**\n   * Key for the logging driver logging preferences.\n   * The browser name. Common browser names are defined in the\n   * {@link ./capabilities.Browser Browser} enum.\n   */\n  LOGGING_PREFS: 'goog:loggingPrefs',\n\n  /**\n   * Defines the session's\n   * {@linkplain ./capabilities.PageLoadStrategy page loading strategy}.\n   */\n  PAGE_LOAD_STRATEGY: 'pageLoadStrategy',\n\n  /**\n   * Identifies the operating system of the endpoint node. Common values\n   * recognized by the most WebDriver server implementations are predefined in\n   * the {@link ./capabilities.Platform Platform} enum.\n   */\n  PLATFORM_NAME: 'platformName',\n\n  /**\n   * Describes the proxy configuration to use for a new WebDriver session.\n   */\n  PROXY: 'proxy',\n\n  /**\n   * Indicates whether the remote end supports all of the window resizing and\n   * positioning commands:\n   *\n   * -  {@linkplain ./webdriver.Window#getRect Window.getRect()}\n   * -  {@linkplain ./webdriver.Window#setRect Window.setRect()}\n   * -  {@linkplain ./webdriver.Window#maximize Window.maximize()}\n   * -  {@linkplain ./webdriver.Window#minimize Window.minimize()}\n   * -  {@linkplain ./webdriver.Window#fullscreen Window.fullscreen()}\n   */\n  SET_WINDOW_RECT: 'setWindowRect',\n\n  /**\n   * Describes the {@linkplain ./capabilities.Timeouts timeouts} imposed on\n   * certain session operations.\n   */\n  TIMEOUTS: 'timeouts',\n\n  /**\n   * Defines how a WebDriver session should\n   * {@linkplain ./capabilities.UserPromptHandler respond} to unhandled user\n   * prompts.\n   */\n  UNHANDLED_PROMPT_BEHAVIOR: 'unhandledPromptBehavior',\n\n  /**\n   * Defines the current sessionâ€™s strict file interactability.\n   * Used to upload a file when strict file interactability is on\n   */\n  STRICT_FILE_INTERACTABILITY: 'strictFileInteractability',\n}\n\n/**\n * Converts a generic hash object to a map.\n * @param {!Object<string, ?>} hash The hash object.\n * @return {!Map<string, ?>} The converted map.\n */\nfunction toMap(hash) {\n  let m = new Map()\n  for (let key in hash) {\n    if (Object.prototype.hasOwnProperty.call(hash, key)) {\n      m.set(key, hash[key])\n    }\n  }\n  return m\n}\n\n/**\n * Describes a set of capabilities for a WebDriver session.\n */\nclass Capabilities {\n  /**\n   * @param {(Capabilities|Map<string, ?>|Object)=} other Another set of\n   *     capabilities to initialize this instance from.\n   */\n  constructor(other = undefined) {\n    if (other instanceof Capabilities) {\n      other = other.map_\n    } else if (other && !(other instanceof Map)) {\n      other = toMap(other)\n    }\n    /** @private @const {!Map<string, ?>} */\n    this.map_ = new Map(other)\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for Chrome.\n   */\n  static chrome() {\n    return new Capabilities().setBrowserName(Browser.CHROME)\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for Microsoft Edge.\n   */\n  static edge() {\n    return new Capabilities().setBrowserName(Browser.EDGE)\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for Firefox.\n   */\n  static firefox() {\n    return new Capabilities()\n      .setBrowserName(Browser.FIREFOX)\n      .set('moz:debuggerAddress', true)\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for Internet Explorer.\n   */\n  static ie() {\n    return new Capabilities().setBrowserName(Browser.INTERNET_EXPLORER)\n  }\n\n  /**\n   * @return {!Capabilities} A basic set of capabilities for Safari.\n   */\n  static safari() {\n    return new Capabilities().setBrowserName(Browser.SAFARI)\n  }\n\n  /**\n   * @return {!Object<string, ?>} The JSON representation of this instance.\n   *     Note, the returned object may contain nested promised values.\n   * @suppress {checkTypes} Suppress [] access on a struct (state inherited from\n   *     Map).\n   */\n  [Symbols.serialize]() {\n    return serialize(this)\n  }\n\n  /**\n   * @param {string} key the parameter key to get.\n   * @return {T} the stored parameter value.\n   * @template T\n   */\n  get(key) {\n    return this.map_.get(key)\n  }\n\n  /**\n   * @param {string} key the key to test.\n   * @return {boolean} whether this capability set has the specified key.\n   */\n  has(key) {\n    return this.map_.has(key)\n  }\n\n  /**\n   * @return {!Iterator<string>} an iterator of the keys set.\n   */\n  keys() {\n    return this.map_.keys()\n  }\n\n  /** @return {number} The number of capabilities set. */\n  get size() {\n    return this.map_.size\n  }\n\n  /**\n   * Merges another set of capabilities into this instance.\n   * @param {!(Capabilities|Map<String, ?>|Object<string, ?>)} other The other\n   *     set of capabilities to merge.\n   * @return {!Capabilities} A self reference.\n   */\n  merge(other) {\n    if (other) {\n      let otherMap\n      if (other instanceof Capabilities) {\n        otherMap = other.map_\n      } else if (other instanceof Map) {\n        otherMap = other\n      } else {\n        otherMap = toMap(other)\n      }\n      otherMap.forEach((value, key) => {\n        this.set(key, value)\n      })\n      return this\n    } else {\n      throw new TypeError('no capabilities provided for merge')\n    }\n  }\n\n  /**\n   * Deletes an entry from this set of capabilities.\n   *\n   * @param {string} key the capability key to delete.\n   */\n  delete(key) {\n    this.map_.delete(key)\n  }\n\n  /**\n   * @param {string} key The capability key.\n   * @param {*} value The capability value.\n   * @return {!Capabilities} A self reference.\n   * @throws {TypeError} If the `key` is not a string.\n   */\n  set(key, value) {\n    if (typeof key !== 'string') {\n      throw new TypeError('Capability keys must be strings: ' + typeof key)\n    }\n    this.map_.set(key, value)\n    return this\n  }\n\n  /**\n   * Sets whether a WebDriver session should implicitly accept self-signed, or\n   * other untrusted TLS certificates on navigation.\n   *\n   * @param {boolean} accept whether to accept insecure certs.\n   * @return {!Capabilities} a self reference.\n   */\n  setAcceptInsecureCerts(accept) {\n    return this.set(Capability.ACCEPT_INSECURE_TLS_CERTS, accept)\n  }\n\n  /**\n   * @return {boolean} whether the session is configured to accept insecure\n   *     TLS certificates.\n   */\n  getAcceptInsecureCerts() {\n    return this.get(Capability.ACCEPT_INSECURE_TLS_CERTS)\n  }\n\n  /**\n   * Sets the name of the target browser.\n   *\n   * @param {(Browser|string)} name the browser name.\n   * @return {!Capabilities} a self reference.\n   */\n  setBrowserName(name) {\n    return this.set(Capability.BROWSER_NAME, name)\n  }\n\n  /**\n   * @return {(string|undefined)} the configured browser name, or undefined if\n   *     not set.\n   */\n  getBrowserName() {\n    return this.get(Capability.BROWSER_NAME)\n  }\n\n  /**\n   * Sets the desired version of the target browser.\n   *\n   * @param {string} version the desired version.\n   * @return {!Capabilities} a self reference.\n   */\n  setBrowserVersion(version) {\n    return this.set(Capability.BROWSER_VERSION, version)\n  }\n\n  /**\n   * @return {(string|undefined)} the configured browser version, or undefined\n   *     if not set.\n   */\n  getBrowserVersion() {\n    return this.get(Capability.BROWSER_VERSION)\n  }\n\n  /**\n   * Sets the desired page loading strategy for a new WebDriver session.\n   *\n   * @param {PageLoadStrategy} strategy the desired strategy.\n   * @return {!Capabilities} a self reference.\n   */\n  setPageLoadStrategy(strategy) {\n    return this.set(Capability.PAGE_LOAD_STRATEGY, strategy)\n  }\n\n  /**\n   * Returns the configured page load strategy.\n   *\n   * @return {(string|undefined)} the page load strategy.\n   */\n  getPageLoadStrategy() {\n    return this.get(Capability.PAGE_LOAD_STRATEGY)\n  }\n\n  /**\n   * Sets the target platform.\n   *\n   * @param {(Platform|string)} platform the target platform.\n   * @return {!Capabilities} a self reference.\n   */\n  setPlatform(platform) {\n    return this.set(Capability.PLATFORM_NAME, platform)\n  }\n\n  /**\n   * @return {(string|undefined)} the configured platform or undefined if not\n   *     set.\n   */\n  getPlatform() {\n    return this.get(Capability.PLATFORM_NAME)\n  }\n\n  /**\n   * Sets the logging preferences. Preferences may be specified as a\n   * {@link ./logging.Preferences} instance, or as a map of log-type to\n   * log-level.\n   * @param {!(./logging.Preferences|Object<string>)} prefs The logging\n   *     preferences.\n   * @return {!Capabilities} A self reference.\n   */\n  setLoggingPrefs(prefs) {\n    return this.set(Capability.LOGGING_PREFS, prefs)\n  }\n\n  /**\n   * Sets the proxy configuration for this instance.\n   * @param {proxy.Config} proxy The desired proxy configuration.\n   * @return {!Capabilities} A self reference.\n   */\n  setProxy(proxy) {\n    return this.set(Capability.PROXY, proxy)\n  }\n\n  /**\n   * @return {(proxy.Config|undefined)} the configured proxy settings, or\n   *     undefined if not set.\n   */\n  getProxy() {\n    return this.get(Capability.PROXY)\n  }\n\n  /**\n   * Sets the default action to take with an unexpected alert before returning\n   * an error. If unspecified, WebDriver will default to\n   * {@link UserPromptHandler.DISMISS_AND_NOTIFY}.\n   *\n   * @param {?UserPromptHandler} behavior The way WebDriver should respond to\n   *     unhandled user prompts.\n   * @return {!Capabilities} A self reference.\n   */\n  setAlertBehavior(behavior) {\n    return this.set(Capability.UNHANDLED_PROMPT_BEHAVIOR, behavior)\n  }\n\n  /**\n   * @return {(UserPromptHandler|undefined)} the behavior pattern for responding\n   *     to unhandled user prompts, or undefined if not set.\n   */\n  getAlertBehavior() {\n    return this.get(Capability.UNHANDLED_PROMPT_BEHAVIOR)\n  }\n\n  /**\n   * Sets the boolean flag configuration for this instance.\n   */\n  setStrictFileInteractability(strictFileInteractability) {\n    return this.set(\n      Capability.STRICT_FILE_INTERACTABILITY,\n      strictFileInteractability\n    )\n  }\n}\n\n/**\n * Serializes a capabilities object. This is defined as a standalone function\n * so it may be type checked (where Capabilities[Symbols.serialize] has type\n * checking disabled since it is defined with [] access on a struct).\n *\n * @param {!Capabilities} caps The capabilities to serialize.\n * @return {!Object<string, ?>} The JSON representation of this instance.\n *     Note, the returned object may contain nested promised values.\n */\nfunction serialize(caps) {\n  let ret = {}\n  for (let key of caps.keys()) {\n    let cap = caps.get(key)\n    if (cap !== undefined && cap !== null) {\n      ret[key] = cap\n    }\n  }\n  return ret\n}\n\n// PUBLIC API\n\nmodule.exports = {\n  Browser,\n  Capabilities,\n  Capability,\n  PageLoadStrategy,\n  Platform,\n  Timeouts,\n  UserPromptHandler,\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AAHA,IAAAA,0BAAA,GAAAC,OAAA,qHAAAC,OAAA;AAAA,IAAAC,eAAA,GAAAF,OAAA,0GAAAC,OAAA;AAAA,IAAAE,YAAA,GAAAH,OAAA,uGAAAC,OAAA;AAKA,IAAMG,OAAO,GAAGJ,OAAO,CAAC,WAAW,CAAC;;AAEpC;AACA;AACA;AACA;AACA,IAAMK,OAAO,GAAG;EACdC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,eAAe;EACrBC,OAAO,EAAE,SAAS;EAClBC,iBAAiB,EAAE,mBAAmB;EACtCC,MAAM,EAAE;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,gBAAgB,GAAG;EACvB;AACF;AACA;AACA;EACEC,IAAI,EAAE,MAAM;EAEZ;AACF;AACA;AACA;EACEC,KAAK,EAAE,OAAO;EAEd;AACF;AACA;AACA;EACEC,MAAM,EAAE;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,QAAQ,GAAG;EACfC,KAAK,EAAE,OAAO;EACdC,GAAG,EAAE,KAAK;EACVC,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAAA,EAAG,CAAC;;AAErB;AACA;AACA;AACA;AACA;AACAA,QAAQ,CAACC,SAAS,CAACC,MAAM;;AAEzB;AACA;AACA;AACA;AACA;AACAF,QAAQ,CAACC,SAAS,CAACE,QAAQ;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACAH,QAAQ,CAACC,SAAS,CAACG,QAAQ;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,iBAAiB,GAAG;EACxB;EACAC,MAAM,EAAE,QAAQ;EAChB;EACAC,OAAO,EAAE,SAAS;EAClB;AACF;AACA;AACA;EACEC,iBAAiB,EAAE,mBAAmB;EACtC;AACF;AACA;AACA;EACEC,kBAAkB,EAAE,oBAAoB;EACxC;EACAC,MAAM,EAAE;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,UAAU,GAAG;EACjB;AACF;AACA;AACA;EACEC,yBAAyB,EAAE,qBAAqB;EAEhD;AACF;AACA;AACA;EACEC,YAAY,EAAE,aAAa;EAE3B;EACAC,eAAe,EAAE,gBAAgB;EAEjC;AACF;AACA;AACA;AACA;EACEC,aAAa,EAAE,mBAAmB;EAElC;AACF;AACA;AACA;EACEC,kBAAkB,EAAE,kBAAkB;EAEtC;AACF;AACA;AACA;AACA;EACEC,aAAa,EAAE,cAAc;EAE7B;AACF;AACA;EACEC,KAAK,EAAE,OAAO;EAEd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,eAAe,EAAE,eAAe;EAEhC;AACF;AACA;AACA;EACEC,QAAQ,EAAE,UAAU;EAEpB;AACF;AACA;AACA;AACA;EACEC,yBAAyB,EAAE,yBAAyB;EAEpD;AACF;AACA;AACA;EACEC,2BAA2B,EAAE;AAC/B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAACC,IAAI,EAAE;EACnB,IAAIC,CAAC,GAAG,IAAIC,GAAG,CAAC,CAAC;EACjB,KAAK,IAAIC,GAAG,IAAIH,IAAI,EAAE;IACpB,IAAII,MAAM,CAAC3B,SAAS,CAAC4B,cAAc,CAACC,IAAI,CAACN,IAAI,EAAEG,GAAG,CAAC,EAAE;MACnDF,CAAC,CAACM,GAAG,CAACJ,GAAG,EAAEH,IAAI,CAACG,GAAG,CAAC,CAAC;IACvB;EACF;EACA,OAAOF,CAAC;AACV;;AAEA;AACA;AACA;AAFA,IAGMO,YAAY,0BAAAC,kBAAA;EAChB;AACF;AACA;AACA;EACE,SAAAD,aAAA,EAA+B;IAAA,IAAnBE,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGE,SAAS;IAAAtD,eAAA,OAAAiD,YAAA;IAC3B,IAAIE,KAAK,YAAYF,YAAY,EAAE;MACjCE,KAAK,GAAGA,KAAK,CAACI,IAAI;IACpB,CAAC,MAAM,IAAIJ,KAAK,IAAI,EAAEA,KAAK,YAAYR,GAAG,CAAC,EAAE;MAC3CQ,KAAK,GAAGX,KAAK,CAACW,KAAK,CAAC;IACtB;IACA;IACA,IAAI,CAACI,IAAI,GAAG,IAAIZ,GAAG,CAACQ,KAAK,CAAC;EAC5B;;EAEA;AACF;AACA;EAFElD,YAAA,CAAAgD,YAAA;IAAAL,GAAA,EAAAM,kBAAA;IAAAM,KAAA;IAqCA;AACF;AACA;AACA;AACA;AACA;IACE,SAAAA,MAAA,EAAsB;MACpB,OAAOC,SAAS,CAAC,IAAI,CAAC;IACxB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAb,GAAA;IAAAY,KAAA,EAKA,SAAAE,IAAId,GAAG,EAAE;MACP,OAAO,IAAI,CAACW,IAAI,CAACG,GAAG,CAACd,GAAG,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;EAHE;IAAAA,GAAA;IAAAY,KAAA,EAIA,SAAAG,IAAIf,GAAG,EAAE;MACP,OAAO,IAAI,CAACW,IAAI,CAACI,GAAG,CAACf,GAAG,CAAC;IAC3B;;IAEA;AACF;AACA;EAFE;IAAAA,GAAA;IAAAY,KAAA,EAGA,SAAAI,KAAA,EAAO;MACL,OAAO,IAAI,CAACL,IAAI,CAACK,IAAI,CAAC,CAAC;IACzB;;IAEA;EAAA;IAAAhB,GAAA;IAAAc,GAAA,EACA,SAAAA,IAAA,EAAW;MACT,OAAO,IAAI,CAACH,IAAI,CAACM,IAAI;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAjB,GAAA;IAAAY,KAAA,EAMA,SAAAM,MAAMX,KAAK,EAAE;MAAA,IAAAY,KAAA;MACX,IAAIZ,KAAK,EAAE;QACT,IAAIa,QAAQ;QACZ,IAAIb,KAAK,YAAYF,YAAY,EAAE;UACjCe,QAAQ,GAAGb,KAAK,CAACI,IAAI;QACvB,CAAC,MAAM,IAAIJ,KAAK,YAAYR,GAAG,EAAE;UAC/BqB,QAAQ,GAAGb,KAAK;QAClB,CAAC,MAAM;UACLa,QAAQ,GAAGxB,KAAK,CAACW,KAAK,CAAC;QACzB;QACAa,QAAQ,CAACC,OAAO,CAAC,UAACT,KAAK,EAAEZ,GAAG,EAAK;UAC/BmB,KAAI,CAACf,GAAG,CAACJ,GAAG,EAAEY,KAAK,CAAC;QACtB,CAAC,CAAC;QACF,OAAO,IAAI;MACb,CAAC,MAAM;QACL,MAAM,IAAIU,SAAS,CAAC,oCAAoC,CAAC;MAC3D;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAtB,GAAA;IAAAY,KAAA,EAKA,SAAAW,QAAOvB,GAAG,EAAE;MACV,IAAI,CAACW,IAAI,CAACa,MAAM,CAACxB,GAAG,CAAC;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAA,GAAA;IAAAY,KAAA,EAMA,SAAAR,IAAIJ,GAAG,EAAEY,KAAK,EAAE;MACd,IAAI,OAAOZ,GAAG,KAAK,QAAQ,EAAE;QAC3B,MAAM,IAAIsB,SAAS,CAAC,mCAAmC,GAAG,OAAOtB,GAAG,CAAC;MACvE;MACA,IAAI,CAACW,IAAI,CAACP,GAAG,CAACJ,GAAG,EAAEY,KAAK,CAAC;MACzB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAZ,GAAA;IAAAY,KAAA,EAOA,SAAAa,uBAAuBC,MAAM,EAAE;MAC7B,OAAO,IAAI,CAACtB,GAAG,CAACpB,UAAU,CAACC,yBAAyB,EAAEyC,MAAM,CAAC;IAC/D;;IAEA;AACF;AACA;AACA;EAHE;IAAA1B,GAAA;IAAAY,KAAA,EAIA,SAAAe,uBAAA,EAAyB;MACvB,OAAO,IAAI,CAACb,GAAG,CAAC9B,UAAU,CAACC,yBAAyB,CAAC;IACvD;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAe,GAAA;IAAAY,KAAA,EAMA,SAAAgB,eAAeC,IAAI,EAAE;MACnB,OAAO,IAAI,CAACzB,GAAG,CAACpB,UAAU,CAACE,YAAY,EAAE2C,IAAI,CAAC;IAChD;;IAEA;AACF;AACA;AACA;EAHE;IAAA7B,GAAA;IAAAY,KAAA,EAIA,SAAAkB,eAAA,EAAiB;MACf,OAAO,IAAI,CAAChB,GAAG,CAAC9B,UAAU,CAACE,YAAY,CAAC;IAC1C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAc,GAAA;IAAAY,KAAA,EAMA,SAAAmB,kBAAkBC,OAAO,EAAE;MACzB,OAAO,IAAI,CAAC5B,GAAG,CAACpB,UAAU,CAACG,eAAe,EAAE6C,OAAO,CAAC;IACtD;;IAEA;AACF;AACA;AACA;EAHE;IAAAhC,GAAA;IAAAY,KAAA,EAIA,SAAAqB,kBAAA,EAAoB;MAClB,OAAO,IAAI,CAACnB,GAAG,CAAC9B,UAAU,CAACG,eAAe,CAAC;IAC7C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAa,GAAA;IAAAY,KAAA,EAMA,SAAAsB,oBAAoBC,QAAQ,EAAE;MAC5B,OAAO,IAAI,CAAC/B,GAAG,CAACpB,UAAU,CAACK,kBAAkB,EAAE8C,QAAQ,CAAC;IAC1D;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAnC,GAAA;IAAAY,KAAA,EAKA,SAAAwB,oBAAA,EAAsB;MACpB,OAAO,IAAI,CAACtB,GAAG,CAAC9B,UAAU,CAACK,kBAAkB,CAAC;IAChD;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAW,GAAA;IAAAY,KAAA,EAMA,SAAAyB,YAAYC,QAAQ,EAAE;MACpB,OAAO,IAAI,CAAClC,GAAG,CAACpB,UAAU,CAACM,aAAa,EAAEgD,QAAQ,CAAC;IACrD;;IAEA;AACF;AACA;AACA;EAHE;IAAAtC,GAAA;IAAAY,KAAA,EAIA,SAAA2B,YAAA,EAAc;MACZ,OAAO,IAAI,CAACzB,GAAG,CAAC9B,UAAU,CAACM,aAAa,CAAC;IAC3C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAU,GAAA;IAAAY,KAAA,EAQA,SAAA4B,gBAAgBC,KAAK,EAAE;MACrB,OAAO,IAAI,CAACrC,GAAG,CAACpB,UAAU,CAACI,aAAa,EAAEqD,KAAK,CAAC;IAClD;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAzC,GAAA;IAAAY,KAAA,EAKA,SAAA8B,SAASC,KAAK,EAAE;MACd,OAAO,IAAI,CAACvC,GAAG,CAACpB,UAAU,CAACO,KAAK,EAAEoD,KAAK,CAAC;IAC1C;;IAEA;AACF;AACA;AACA;EAHE;IAAA3C,GAAA;IAAAY,KAAA,EAIA,SAAAgC,SAAA,EAAW;MACT,OAAO,IAAI,CAAC9B,GAAG,CAAC9B,UAAU,CAACO,KAAK,CAAC;IACnC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAS,GAAA;IAAAY,KAAA,EASA,SAAAiC,iBAAiBC,QAAQ,EAAE;MACzB,OAAO,IAAI,CAAC1C,GAAG,CAACpB,UAAU,CAACU,yBAAyB,EAAEoD,QAAQ,CAAC;IACjE;;IAEA;AACF;AACA;AACA;EAHE;IAAA9C,GAAA;IAAAY,KAAA,EAIA,SAAAmC,iBAAA,EAAmB;MACjB,OAAO,IAAI,CAACjC,GAAG,CAAC9B,UAAU,CAACU,yBAAyB,CAAC;IACvD;;IAEA;AACF;AACA;EAFE;IAAAM,GAAA;IAAAY,KAAA,EAGA,SAAAoC,6BAA6BC,yBAAyB,EAAE;MACtD,OAAO,IAAI,CAAC7C,GAAG,CACbpB,UAAU,CAACW,2BAA2B,EACtCsD,yBACF,CAAC;IACH;EAAC;IAAAjD,GAAA;IAAAY,KAAA,EA/QD,SAAAsC,OAAA,EAAgB;MACd,OAAO,IAAI7C,YAAY,CAAC,CAAC,CAACuB,cAAc,CAACrE,OAAO,CAACC,MAAM,CAAC;IAC1D;;IAEA;AACF;AACA;EAFE;IAAAwC,GAAA;IAAAY,KAAA,EAGA,SAAAuC,KAAA,EAAc;MACZ,OAAO,IAAI9C,YAAY,CAAC,CAAC,CAACuB,cAAc,CAACrE,OAAO,CAACE,IAAI,CAAC;IACxD;;IAEA;AACF;AACA;EAFE;IAAAuC,GAAA;IAAAY,KAAA,EAGA,SAAAwC,QAAA,EAAiB;MACf,OAAO,IAAI/C,YAAY,CAAC,CAAC,CACtBuB,cAAc,CAACrE,OAAO,CAACG,OAAO,CAAC,CAC/B0C,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC;IACrC;;IAEA;AACF;AACA;EAFE;IAAAJ,GAAA;IAAAY,KAAA,EAGA,SAAAyC,GAAA,EAAY;MACV,OAAO,IAAIhD,YAAY,CAAC,CAAC,CAACuB,cAAc,CAACrE,OAAO,CAACI,iBAAiB,CAAC;IACrE;;IAEA;AACF;AACA;EAFE;IAAAqC,GAAA;IAAAY,KAAA,EAGA,SAAA0C,OAAA,EAAgB;MACd,OAAO,IAAIjD,YAAY,CAAC,CAAC,CAACuB,cAAc,CAACrE,OAAO,CAACK,MAAM,CAAC;IAC1D;EAAC;EAAA,OAAAyC,YAAA;AAAA,EAQA/C,OAAO,CAACuD,SAAS;AA0OpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAASA,CAAC0C,IAAI,EAAE;EACvB,IAAIC,GAAG,GAAG,CAAC,CAAC;EAAA,IAAAC,SAAA,GAAAxG,0BAAA,CACIsG,IAAI,CAACvC,IAAI,CAAC,CAAC;IAAA0C,KAAA;EAAA;IAA3B,KAAAD,SAAA,CAAAE,CAAA,MAAAD,KAAA,GAAAD,SAAA,CAAAG,CAAA,IAAAC,IAAA,GAA6B;MAAA,IAApB7D,GAAG,GAAA0D,KAAA,CAAA9C,KAAA;MACV,IAAIkD,GAAG,GAAGP,IAAI,CAACzC,GAAG,CAACd,GAAG,CAAC;MACvB,IAAI8D,GAAG,KAAKpD,SAAS,IAAIoD,GAAG,KAAK,IAAI,EAAE;QACrCN,GAAG,CAACxD,GAAG,CAAC,GAAG8D,GAAG;MAChB;IACF;EAAC,SAAAC,GAAA;IAAAN,SAAA,CAAAO,CAAA,CAAAD,GAAA;EAAA;IAAAN,SAAA,CAAAQ,CAAA;EAAA;EACD,OAAOT,GAAG;AACZ;;AAEA;;AAEAU,MAAM,CAACC,OAAO,GAAG;EACf5G,OAAO,EAAPA,OAAO;EACP8C,YAAY,EAAZA,YAAY;EACZrB,UAAU,EAAVA,UAAU;EACVnB,gBAAgB,EAAhBA,gBAAgB;EAChBI,QAAQ,EAARA,QAAQ;EACRI,QAAQ,EAARA,QAAQ;EACRK,iBAAiB,EAAjBA;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}