[{"D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\index.js":"1","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\App.js":"2","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\reportWebVitals.js":"3","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Lista_medicos_citas.js":"4","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Home.js":"5","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Formulario_NuevoMedico.js":"6","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Lista_medicos.js":"7","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Editar_Medico.js":"8","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Formulario_Nuevacita.js":"9","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Services\\getMedicoEspecifico.js":"10"},{"size":586,"mtime":1684467143000,"results":"11","hashOfConfig":"12"},{"size":973,"mtime":1688497682817,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1684467143000,"results":"14","hashOfConfig":"12"},{"size":3923,"mtime":1688497682820,"results":"15","hashOfConfig":"12"},{"size":267,"mtime":1688503163833,"results":"16","hashOfConfig":"12"},{"size":4165,"mtime":1688499098058,"results":"17","hashOfConfig":"12"},{"size":4498,"mtime":1688497682820,"results":"18","hashOfConfig":"12"},{"size":2827,"mtime":1688499141101,"results":"19","hashOfConfig":"12"},{"size":3101,"mtime":1688499160585,"results":"20","hashOfConfig":"12"},{"size":333,"mtime":1684467143000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"8w6scl",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\index.js",[],[],[],"D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\App.js",[],[],"D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\reportWebVitals.js",[],[],"D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Lista_medicos_citas.js",[],[],"D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Home.js",[],[],"D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Formulario_NuevoMedico.js",["56"],[],"import React, { useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport {useLocation} from \"wouter\";\r\n\r\nexport default function Formulario_MedicoNuevo() {\r\n  const [first_name, setFirst_name] = useState(\"\");\r\n  const [last_name, setLast_name] = useState(\"\");\r\n  const [credentials, setCredentials] = useState(\"\");\r\n  const [specialization, setSpecialization] = useState(\"\");\r\n  const [geographic_location, setGeographic_location] = useState(\"\");\r\n  const [location, setLocation] = useLocation();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    var payload = {\r\n      first_name: first_name,\r\n      last_name: last_name,\r\n      credentials: credentials,\r\n      specialization: specialization,\r\n      geographic_location: geographic_location,\r\n    };\r\n    const url = `http://15.228.191.117:8080/medics?first_name=${payload.first_name}&last_name=${payload.last_name}&specialization=${payload.specialization}&credentials=${payload.credentials}&geographic_location=${payload.geographic_location}`;\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      mode: \"cors\",\r\n      body: JSON.stringify(payload),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(function (res) {\r\n        Swal.fire({\r\n          text: \"Médico creado correctamente\",\r\n          icon: \"success\",\r\n          showConfirmButton: true,\r\n        });\r\n        return res;\r\n      })\r\n      .then(setLocation(\"/lista_medicos\"));\r\n  };\r\n  return (\r\n    <div\r\n      className=\"card shadow-lg mx-auto\"\r\n      style={{ maxWidth: \"70rem\" }}\r\n    >\r\n      <div className=\"card-header text-light h5 ps-4 py-3\">\r\n        INGRESAR DATOS DE UN NUEVO MÉDICO\r\n      </div>\r\n        <div className=\"card-body text-white\">\r\n          <form\r\n            id=\"meds\"\r\n            onSubmit={handleSubmit}\r\n            className=\"needs-validation\"\r\n            noValidate\r\n          >\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"first_name\">Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                name=\"first_name\"\r\n                id=\"first_name\"\r\n                onChange={(e) => setFirst_name(e.target.value)}\r\n              ></input>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"last_name\">Apellido</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                name=\"last_name\"\r\n                id=\"last_name\"\r\n                onChange={(e) => setLast_name(e.target.value)}\r\n              ></input>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"specialization\">Especialización</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                name=\"specialization\"\r\n                id=\"specialization\"\r\n                onChange={(e) => setSpecialization(e.target.value)}\r\n              ></input>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"geographic_location\">Comuna</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                name=\"geographic_location\"\r\n                id=\"geographic_location\"\r\n                onChange={(e) => setGeographic_location(e.target.value)}\r\n              ></input>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"credentials\">Credenciales</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                name=\"credentials\"\r\n                id=\"credentials\"\r\n                onChange={(e) => setCredentials(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <button\r\n              className=\"btn ms-2 btn-primary\"\r\n              onClick={() => setLocation(\"/Lista_medicos\")}\r\n            >\r\n              Volver\r\n            </button>\r\n            <button type=\"submit\" id=\"btn_enviar\" className=\"btn btn-primary ms-2\">\r\n              Enviar\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Lista_medicos.js",[],["57"],"D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Editar_Medico.js",["58"],[],"import React, {useEffect, useState} from 'react';\r\nimport getMedicoEspecifico from '../Services/getMedicoEspecifico';\r\nimport Swal from 'sweetalert2';\r\nimport { useLocation } from \"wouter\";\r\n\r\n\r\nexport default function Editar_medico ( {params} ) {\r\n    const { keyword } = params\r\n    const [geographic_location, setGeographic_location] = useState(\"\");\r\n    const [location, setLocation] = useLocation();\r\n\r\n    useEffect(function () {\r\n        getMedicoEspecifico( {keyword} ).then((ficha) => {\r\n            setGeographic_location(ficha[0].geographic_location)\r\n        })\r\n      }, [keyword])\r\n\r\n\r\n\r\n  \r\n      const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        var payload = {\r\n          medic_id: parseInt(keyword),\r\n          geographic_location: geographic_location,\r\n        };\r\n      \r\n        const url = `http://15.228.191.117:8080/medics?medic_id=${payload.medic_id}&geographic_location=${payload.geographic_location}`;\r\n      \r\n        try {\r\n          const response = await fetch(url, {\r\n            method: \"PUT\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(payload),\r\n          });\r\n      \r\n          if (response.ok) {\r\n            Swal.fire({\r\n              text: \"Medico actualizado correctamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: true,\r\n            });\r\n      \r\n            setLocation(\"/Lista_medicos\");\r\n          } else {\r\n            Swal.fire({\r\n              text: \"Error al actualizar el medico\",\r\n              icon: \"error\",\r\n              showConfirmButton: true,\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n          Swal.fire({\r\n            text: \"Error al actualizar el medico\",\r\n            icon: \"error\",\r\n            showConfirmButton: true,\r\n          });\r\n        }\r\n      };\r\n  return (\r\n<div className=\"card mx-auto shadow-lg\" style={{ maxWidth: \"70rem\" }}>\r\n        <div className=\"card-header text-light h5 ps-4 py-3\">ACTUALIZA DATOS</div>\r\n        <div className=\"card-body text-white\" >\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"geographic_location\">Comuna</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              name=\"geographic_location\"\r\n              id=\"geographic_location\"\r\n              onChange={(e) => setGeographic_location(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <button className=\"btn btn-primary\"onClick={() => setLocation(\"/Lista_medicos\")}>Volver</button>\r\n          <button type=\"submit\" className=\"btn btn-primary ms-2\" id=\"btn_enviar_2\">\r\n            Enviar\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Formulario_Nuevacita.js",["59"],[],"import React, { useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useLocation } from \"wouter\";\r\n\r\n\r\nexport default function Formulario_Nuevacita({params}) {\r\n  const { keyword } = params\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n  const [rut, setRut] = useState(\"\");\r\n  const [location, setLocation] = useLocation();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    var payload = {\r\n      date: date,\r\n      time: time,\r\n      rut: rut,\r\n      medic_id: parseInt(keyword),\r\n    };\r\n    const url = `http://15.228.191.117:8080/appointments?date=${payload.date}&time=${payload.time}&rut=${payload.rut}&medic_id=${payload.medic_id}`;\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      mode: \"cors\",\r\n      body: JSON.stringify(payload),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(function (res) {\r\n        Swal.fire({\r\n          text: \"Cita agendada correctamente\",\r\n          icon: \"success\",\r\n          showConfirmButton: true,\r\n        });\r\n        return res;\r\n      })\r\n      .then(setLocation(\"/lista_medicos_citas\"));\r\n  };\r\n\r\n\r\n  return (\r\n    <div\r\n      className=\"card border-secondary mb-3 mt-3 shadow-lg\"\r\n      style={{ maxWidth: \"70rem\" }}\r\n    >\r\n      <div className=\"card-body text-white\">\r\n        <h1 style={{ fontWeight: 700 }}>Agendar Cita</h1>\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary float-start\"\r\n            onClick={() => setLocation(\"/Lista_medicos_citas\")}\r\n          >\r\n            Ir a médicos\r\n            <i className=\"bi bi-arrow-left-circle-fill\"></i>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <form\r\n            id=\"meds\"\r\n            onSubmit={handleSubmit}\r\n            className=\"needs-validation\"\r\n            noValidate\r\n          >   \r\n              <div className=\"mb-3\">\r\n\r\n              <label htmlFor=\"date\">Fecha</label>\r\n              <input type=\"date\" id=\"start\" name=\"trip-start\"\r\n              min=\"2018-01-01\" max=\"2025-12-31\"\r\n              onChange={(e) => setDate(e.target.value.toString())}\r\n              >\r\n              </input>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"time\">Hora</label>\r\n              <input\r\n                type=\"time\" id=\"appt\" name=\"appt\"\r\n                min=\"09:00\" max=\"18:00\" required\r\n                onChange={(e) => setTime(e.target.value.toString())}\r\n              ></input>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"rut\">Rut</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                name=\"rut\"\r\n                id=\"rut\"\r\n                onChange={(e) => setRut(e.target.value)}\r\n              ></input>\r\n            </div>\r\n\r\n            \r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Enviar\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Services\\getMedicoEspecifico.js",[],[],{"ruleId":"60","severity":1,"message":"61","line":11,"column":10,"nodeType":"62","messageId":"63","endLine":11,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":24,"column":6,"nodeType":"66","endLine":24,"endColumn":8,"suggestions":"67","suppressions":"68"},{"ruleId":"60","severity":1,"message":"61","line":10,"column":12,"nodeType":"62","messageId":"63","endLine":10,"endColumn":20},{"ruleId":"60","severity":1,"message":"61","line":11,"column":10,"nodeType":"62","messageId":"63","endLine":11,"endColumn":18},"no-unused-vars","'location' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["69"],["70"],{"desc":"71","fix":"72"},{"kind":"73","justification":"74"},"Update the dependencies array to be: [fetchData]",{"range":"75","text":"76"},"directive","",[593,595],"[fetchData]"]