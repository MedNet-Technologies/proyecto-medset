[{"D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\index.js":"1","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\App.js":"2","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\reportWebVitals.js":"3","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Lista_medicos_citas.js":"4","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Home.js":"5","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Formulario_NuevoMedico.js":"6","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Lista_medicos.js":"7","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Editar_Medico.js":"8","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Formulario_Nuevacita.js":"9","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Services\\getMedicoEspecifico.js":"10"},{"size":586,"mtime":1684467143000,"results":"11","hashOfConfig":"12"},{"size":986,"mtime":1688417112153,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1684467143000,"results":"14","hashOfConfig":"12"},{"size":3910,"mtime":1688434479319,"results":"15","hashOfConfig":"12"},{"size":261,"mtime":1688434136593,"results":"16","hashOfConfig":"12"},{"size":4050,"mtime":1688435304569,"results":"17","hashOfConfig":"12"},{"size":4446,"mtime":1688473844123,"results":"18","hashOfConfig":"12"},{"size":2742,"mtime":1688435323011,"results":"19","hashOfConfig":"12"},{"size":3068,"mtime":1688434585295,"results":"20","hashOfConfig":"12"},{"size":333,"mtime":1684467143000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"8w6scl",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\index.js",[],[],[],"D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\App.js",["59"],[],"import \"./App.css\";\nimport { Route } from \"wouter\";\nimport { useEffect } from 'react';  \nimport Home from './Components/Home';\nimport Lista_medicos from \"./Components/Lista_medicos\";\nimport Formulario_NuevoMedico from \"./Components/Formulario_NuevoMedico\";\nimport Editar_medico from \"./Components/Editar_Medico\";\nimport Lista_medicos_citas from \"./Components/Lista_medicos_citas\";\nimport Formulario_Nuevacita from \"./Components/Formulario_Nuevacita\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n          <Route component={Home} exact path=\"/\"/>\n          <Route component={Lista_medicos} path=\"/lista_medicos\" />\n          <Route component={Formulario_NuevoMedico} path=\"/formulario_medicos\"/>\n          <Route component={Editar_medico} path=\"/formulario_medicos/:keyword\"/>\n          <Route component={Lista_medicos_citas} path=\"/lista_medicos_citas\"/>\n          <Route component={Formulario_Nuevacita} path=\"/nueva_cita/:keyword\"/>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\reportWebVitals.js",[],[],"D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Lista_medicos_citas.js",["60","61","62"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"wouter\";\nimport Moment from \"moment\";\nimport Button from \"react-bootstrap/Button\";\nimport Swal from \"sweetalert2\";\n\nexport default function Lista_medicos_citas() {\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n\n  const fetchData = () => {\n    fetch(`http://15.228.191.117:8080/medics`)\n      .then((response) => response.json())\n      .then((actualData) => {\n        console.log(actualData);\n        setData(actualData.medics);\n        setFilteredData(actualData.medics);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const getValueInput = (event) => {\n    const inputValue = event.target.value.toLowerCase();\n    if (inputValue === \"\" || null) {\n      setFilteredData(data);\n    } else {\n      const filteredResults = data.filter(\n        (medico) =>\n          medico.specialization.toLowerCase().includes(inputValue) ||\n          medico.geographic_location.toLowerCase().includes(inputValue)\n      );\n      setFilteredData(filteredResults);\n    }\n  };\n\n  return (\n    <div className=\"card mx-auto\" style={{ maxWidth: \"100rem\" }}>\n      <div className=\"card-header text-light h5 ps-4 py-3\">\n        <Link to={\"/lista_medicos\"}>\n          <button className=\"btn btn-primary izquierda\"> dev</button>\n        </Link>\n        SELECCIONA UN MÉDICO\n        <Link to={\"/formulario_medicos\"}>\n          <button className=\"btn btn-primary derecha\"> Crear Médico</button>\n        </Link>\n      </div>\n      <div className=\"mt-3 mb-4 align-middle d-flex flex-row\">\n        <input\n          type=\"text\"\n          placeholder=\"search\"\n          className=\"search\"\n          size=\"35\"\n          onChange={getValueInput}\n        />\n      </div>\n      {data.length === 0 ? (\n        <div className=\"card-body table-responsive\">\n          <table className=\"table\">\n            <thead>\n              <tr className=\"text-secondary\">\n                <th scope=\"col\">Nombre</th>\n                <th scope=\"col\">Comuna</th>\n                <th scope=\"col\">Especialización</th>\n                <th className=\"pa-0 ma-0\" style={{ width: \"2px\" }}></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <th colSpan=\"4\" className=\"text-center\">\n                  <div className=\"spinner-grow text-primary px-9\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                  </div>\n                </th>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div className=\"card-body table-responsive\">\n          <table className=\"table\">\n            <thead>\n              <tr className=\"text-secondary\">\n                <th scope=\"col\">Nombre</th>\n                <th scope=\"col\">Comuna</th>\n                <th scope=\"col\">Especialización</th>\n                <th className=\"pa-0 ma-0\" style={{ width: \"2px\" }}></th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredData.map((todo) => {\n                const panaURL = `/nueva_cita/${todo.medic_id}`;\n\n                return (\n                  <tr className=\"text-white\">\n                    <td>\n                      {todo.first_name} {todo.last_name}\n                    </td>\n                    <td>{todo.geographic_location}</td>\n                    <td>{todo.specialization}</td>\n                    <td>\n                      <Link to={panaURL}>\n                        <button className=\"btn btn-primary me-md-1\" type=\"button\">\n                          Agendar\n                        </button>\n                      </Link>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Home.js",[],[],"D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Formulario_NuevoMedico.js",["63","64"],[],"import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Link, useLocation } from \"wouter\";\n\nexport default function Formulario_MedicoNuevo() {\n  const [first_name, setFirst_name] = useState(\"\");\n  const [last_name, setLast_name] = useState(\"\");\n  const [credentials, setCredentials] = useState(\"\");\n  const [specialization, setSpecialization] = useState(\"\");\n  const [geographic_location, setGeographic_location] = useState(\"\");\n  const [location, setLocation] = useLocation();\n\n  const handleSubmit = async (e) => {\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n    var payload = {\n      first_name: first_name,\n      last_name: last_name,\n      credentials: credentials,\n      specialization: specialization,\n      geographic_location: geographic_location,\n    };\n    const url = `http://15.228.191.117:8080/medics?first_name=${payload.first_name}&last_name=${payload.last_name}&specialization=${payload.specialization}&credentials=${payload.credentials}&geographic_location=${payload.geographic_location}`;\n    fetch(url, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      mode: \"cors\",\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then(function (res) {\n        Swal.fire({\n          text: \"Médico creado correctamente\",\n          icon: \"success\",\n          showConfirmButton: true,\n        });\n        return res;\n      })\n      .then(setLocation(\"/lista_medicos\"));\n  };\n  return (\n    <div\n      className=\"card shadow-lg mx-auto\"\n      style={{ maxWidth: \"70rem\" }}\n    >\n      <div className=\"card-header text-light h5 ps-4 py-3\">\n        INGRESAR DATOS DE UN NUEVO MÉDICO\n      </div>\n        <div className=\"card-body text-white\">\n          <form\n            id=\"meds\"\n            onSubmit={handleSubmit}\n            className=\"needs-validation\"\n            noValidate\n          >\n            <div className=\"mb-3\">\n              <label htmlFor=\"first_name\">Nombre</label>\n              <input\n                type=\"text\"\n                required\n                name=\"first_name\"\n                id=\"first_name\"\n                onChange={(e) => setFirst_name(e.target.value)}\n              ></input>\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"last_name\">Apellido</label>\n              <input\n                type=\"text\"\n                required\n                name=\"last_name\"\n                id=\"last_name\"\n                onChange={(e) => setLast_name(e.target.value)}\n              ></input>\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"specialization\">Especialización</label>\n              <input\n                type=\"text\"\n                required\n                name=\"specialization\"\n                id=\"specialization\"\n                onChange={(e) => setSpecialization(e.target.value)}\n              ></input>\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"geographic_location\">Comuna</label>\n              <input\n                type=\"text\"\n                required\n                name=\"geographic_location\"\n                id=\"geographic_location\"\n                onChange={(e) => setGeographic_location(e.target.value)}\n              ></input>\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"credentials\">Credenciales</label>\n              <input\n                type=\"text\"\n                required\n                name=\"credentials\"\n                id=\"credentials\"\n                onChange={(e) => setCredentials(e.target.value)}\n              ></input>\n            </div>\n            <button\n              className=\"btn ms-2 btn-primary\"\n              onClick={() => setLocation(\"/Lista_medicos\")}\n            >\n              Volver\n            </button>\n            <button type=\"submit\" id=\"btn_enviar\" className=\"btn btn-primary ms-2\">\n              Enviar\n            </button>\n          </form>\n        </div>\n      </div>\n  );\n}\n","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Lista_medicos.js",["65","66","67","68"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"wouter\";\nimport Moment from \"moment\";\nimport Button from \"react-bootstrap/Button\";\nimport Swal from \"sweetalert2\";\n\nexport default function Lista_medicos() {\n  const [data, setData] = useState([]);\n\n  const fetchData = () => {\n    fetch(`http://15.228.191.117:8080/medics`)\n      .then((response) => response.json())\n      .then((actualData) => {\n        console.log(actualData);\n        setData(actualData.medics);\n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return (\n    <div className=\"card mx-auto\" style={{ maxWidth: \"100rem\" }}>\n      <div className=\"card-header text-light h5 ps-4 py-3\">\n      <Link to={'/lista_medicos_citas'}><button className=\"btn btn-primary izquierda\" > usr</button></Link>\n        SELECCIONA UN MÉDICO \n        <Link to={'/formulario_medicos'}><button className=\"btn btn-primary derecha\" id=\"btn_crearmedicos\">Crear Médico</button></Link>\n        \n      </div>\n      {!(data.length > 0) ? (\n        <div className=\"card-body table-responsive\">\n          <table className=\"table\">\n            <thead>\n              <tr className=\"text-secondary\">\n                <th scope=\"col\">Nombre</th>\n                <th scope=\"col\">Apellido</th>\n                <th scope=\"col\">Comuna</th>\n                <th scope=\"col\">Especialización</th>\n                <th className=\"pa-0 ma-0\" style={{ width: \"2px\" }}></th>\n                <th className=\"pa-0 ma-0\" style={{ width: \"1px\" }}></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <th colSpan=\"6\" className=\"text-center\">\n                  <div className=\"spinner-grow text-primary px-9\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                  </div>\n                </th>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div className=\"card-body table-responsive\">\n          <table className=\"table\">\n            <thead>\n              <tr className=\"text-secondary\">\n                <th scope=\"col\">Nombre</th>\n                <th scope=\"col\">Apellido</th>\n                <th scope=\"col\">Comuna</th>\n                <th scope=\"col\">Especialización</th>\n                <th className=\"pa-0 ma-0\" style={{ width: \"2px\" }}></th>\n                <th className=\"pa-0 ma-0\" style={{ width: \"1px\" }}></th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((todo) => {\n                const deleteURL = `http://15.228.191.117:8080/medics?medic_id=${todo.medic_id}`\n                const panaURL = `/formulario_medicos/${todo.medic_id}`\n\n                return (\n                  <tr className=\"text-white\">\n                    <td>{todo.first_name}</td>\n                    <td>{todo.last_name}</td>\n                    <td>{todo.geographic_location}</td>\n                    <td>{todo.specialization}</td>\n                    <td>\n                      <Link to={panaURL}>                      \n                      <button className=\"btn btn-primary me-md-2\" id=\"btn_editar\" type=\"button\" >\n                        edit\n                      </button>\n                      </Link>\n\n                    </td>\n                    <td>\n                      <button\n                        className=\"btn btn-danger me-md-2\"\n                        type=\"button\"\n                        onClick={() => {\n                          try {\n                            fetch(deleteURL, {\n                              method: \"DELETE\",\n                              headers: {\n                                \"Content-Type\": \"application/json\",\n                              },\n                            }\n                            ).then(function (res) {\n                              window.location.reload();});\n                          } catch (error) {\n                            console.error(error);\n                            alert(\"Unable to delete item.\");\n                          }\n                        }\n                      }\n                      >\n                        delete\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Editar_Medico.js",["69"],[],"import React, {useEffect, useState} from 'react';\nimport getMedicoEspecifico from '../Services/getMedicoEspecifico';\nimport Swal from 'sweetalert2';\nimport { useLocation } from \"wouter\";\n\n\nexport default function Editar_medico ( {params} ) {\n    const { keyword } = params\n    const [geographic_location, setGeographic_location] = useState(\"\");\n    const [location, setLocation] = useLocation();\n\n    useEffect(function () {\n        getMedicoEspecifico( {keyword} ).then((ficha) => {\n            setGeographic_location(ficha[0].geographic_location)\n        })\n      }, [keyword])\n\n\n\n  \n      const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        var payload = {\n          medic_id: parseInt(keyword),\n          geographic_location: geographic_location,\n        };\n      \n        const url = `http://15.228.191.117:8080/medics?medic_id=${payload.medic_id}&geographic_location=${payload.geographic_location}`;\n      \n        try {\n          const response = await fetch(url, {\n            method: \"PUT\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(payload),\n          });\n      \n          if (response.ok) {\n            Swal.fire({\n              text: \"Medico actualizado correctamente\",\n              icon: \"success\",\n              showConfirmButton: true,\n            });\n      \n            setLocation(\"/Lista_medicos\");\n          } else {\n            Swal.fire({\n              text: \"Error al actualizar el medico\",\n              icon: \"error\",\n              showConfirmButton: true,\n            });\n          }\n        } catch (error) {\n          console.error(error);\n          Swal.fire({\n            text: \"Error al actualizar el medico\",\n            icon: \"error\",\n            showConfirmButton: true,\n          });\n        }\n      };\n  return (\n<div className=\"card mx-auto shadow-lg\" style={{ maxWidth: \"70rem\" }}>\n        <div className=\"card-header text-light h5 ps-4 py-3\">ACTUALIZA DATOS</div>\n        <div className=\"card-body text-white\" >\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\n          <div className=\"mb-3\">\n            <label htmlFor=\"geographic_location\">Comuna</label>\n            <input\n              type=\"text\"\n              required\n              name=\"geographic_location\"\n              id=\"geographic_location\"\n              onChange={(e) => setGeographic_location(e.target.value)}\n            ></input>\n          </div>\n          <button className=\"btn btn-primary\"onClick={() => setLocation(\"/Lista_medicos\")}>Volver</button>\n          <button type=\"submit\" className=\"btn btn-primary ms-2\" id=\"btn_enviar_2\">\n            Enviar\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Components\\Formulario_Nuevacita.js",["70","71","72","73","74","75"],[],"import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Link, useLocation } from \"wouter\";\n\n\nexport default function Formulario_Nuevacita({params}) {\n  const { keyword } = params\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [rut, setRut] = useState(\"\");\n  const [location, setLocation] = useLocation();\n  var strDate = new String();\n  var strTime = new String();\n  \n\n\n\n\n\n  const handleSubmit = async (e) => {\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n    var payload = {\n      date: date,\n      time: time,\n      rut: rut,\n      medic_id: parseInt(keyword),\n    };\n    const url = `http://15.228.191.117:8080/appointments?date=${payload.date}&time=${payload.time}&rut=${payload.rut}&medic_id=${payload.medic_id}`;\n    fetch(url, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      mode: \"cors\",\n      body: JSON.stringify(payload),\n    })\n      .then((res) => res.json())\n      .then(function (res) {\n        Swal.fire({\n          text: \"Cita agendada correctamente\",\n          icon: \"success\",\n          showConfirmButton: true,\n        });\n        return res;\n      })\n      .then(setLocation(\"/lista_medicos_citas\"));\n  };\n\n\n  return (\n    <div\n      className=\"card border-secondary mb-3 mt-3 shadow-lg\"\n      style={{ maxWidth: \"70rem\" }}\n    >\n      <div className=\"card-body text-white\">\n        <h1 style={{ fontWeight: 700 }}>Agendar Cita</h1>\n        <div>\n          <button\n            className=\"btn btn-primary float-start\"\n            onClick={() => setLocation(\"/Lista_medicos_citas\")}\n          >\n            Ir a médicos\n            <i className=\"bi bi-arrow-left-circle-fill\"></i>\n          </button>\n        </div>\n        <div>\n          <form\n            id=\"meds\"\n            onSubmit={handleSubmit}\n            className=\"needs-validation\"\n            noValidate\n          >   \n              <div className=\"mb-3\">\n\n              <label htmlFor=\"date\">Fecha</label>\n              <input type=\"date\" id=\"start\" name=\"trip-start\"\n              min=\"2018-01-01\" max=\"2025-12-31\"\n              onChange={(e) => setDate(e.target.value.toString())}\n              >\n              </input>\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"time\">Hora</label>\n              <input\n                type=\"time\" id=\"appt\" name=\"appt\"\n                min=\"09:00\" max=\"18:00\" required\n                onChange={(e) => setTime(e.target.value.toString())}\n              ></input>\n            </div>\n\n\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"rut\">Rut</label>\n              <input\n                type=\"text\"\n                required\n                name=\"rut\"\n                id=\"rut\"\n                onChange={(e) => setRut(e.target.value)}\n              ></input>\n            </div>\n\n            \n            <button type=\"submit\" className=\"btn btn-primary\">\n              Enviar\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","D:\\Guts\\Documents\\GitHub\\proyecto-medset\\medset\\src\\Services\\getMedicoEspecifico.js",[],[],{"ruleId":"76","severity":1,"message":"77","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":19},{"ruleId":"76","severity":1,"message":"80","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":14},{"ruleId":"76","severity":1,"message":"81","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":14},{"ruleId":"76","severity":1,"message":"82","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":12},{"ruleId":"76","severity":1,"message":"83","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":14},{"ruleId":"76","severity":1,"message":"84","line":11,"column":10,"nodeType":"78","messageId":"79","endLine":11,"endColumn":18},{"ruleId":"76","severity":1,"message":"80","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":14},{"ruleId":"76","severity":1,"message":"81","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":14},{"ruleId":"76","severity":1,"message":"82","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":12},{"ruleId":"85","severity":1,"message":"86","line":24,"column":6,"nodeType":"87","endLine":24,"endColumn":8,"suggestions":"88"},{"ruleId":"76","severity":1,"message":"84","line":10,"column":12,"nodeType":"78","messageId":"79","endLine":10,"endColumn":20},{"ruleId":"76","severity":1,"message":"83","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":14},{"ruleId":"76","severity":1,"message":"84","line":11,"column":10,"nodeType":"78","messageId":"79","endLine":11,"endColumn":18},{"ruleId":"76","severity":1,"message":"89","line":12,"column":7,"nodeType":"78","messageId":"79","endLine":12,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":12,"column":17,"nodeType":"92","messageId":"93","endLine":12,"endColumn":29},{"ruleId":"76","severity":1,"message":"94","line":13,"column":7,"nodeType":"78","messageId":"79","endLine":13,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":13,"column":17,"nodeType":"92","messageId":"93","endLine":13,"endColumn":29},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Moment' is defined but never used.","'Button' is defined but never used.","'Swal' is defined but never used.","'Link' is defined but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'strDate' is assigned a value but never used.","no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","'strTime' is assigned a value but never used.",{"desc":"96","fix":"97"},"Update the dependencies array to be: [fetchData]",{"range":"98","text":"99"},[641,643],"[fetchData]"]